/* Generated by :claw at 2024-11-11T06:13:37.975319Z */

#if defined(__cplusplus)
#include <new>
#endif



#include "godot_cpp/classes/node3d.hpp"

#if !defined(__CLAW_API)
#  if defined(_WIN32)
#    define __CLAW_API __declspec(dllexport)
#  elif defined(__GNUC__)
#    define __CLAW_API __attribute__((visibility("default")))
#  else
#    define __CLAW_API
#  endif
#endif

#if defined(__cplusplus)
extern "C" {
#endif


namespace std {
__CLAW_API std::initializer_list<godot::PropertyInfo>::size_type __claw__ZNKSt16initializer_listIN5godot12PropertyInfoEE4sizeEv(std::initializer_list<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char11() {
return sizeof(std::__hash_base<unsigned long,std::basic_string_view<char>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName19is_valid_html_colorEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:339:7
return __claw_this_->is_valid_html_color();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node20set_process_internalEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:210:7
__claw_this_->set_process_internal(enable);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform2DEEaSERKNS_5ArrayE(godot::TypedArray<godot::Transform2D>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:96:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIDsEaSERKS1_(godot::CharProxy<char16>* __claw_this_, const godot::CharProxy<char16>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:78:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMouseButtonMaskR1() {
return alignof(godot::GetTypeInfo<godot::MouseButtonMask&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWCorner1() {
return alignof(godot::VariantCaster<godot::Corner>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis9set_eulerERKNS_7Vector3ENS_10EulerOrderE(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_euler, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:86:7
__claw_this_->set_euler(*p_euler, p_order);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIwE23compare_exchange_strongERwwSt12memory_orderS2_(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiED1Ev(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:247:17
__claw_this_->~CowData();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15KeyModifierMaskEE8set_flagES3_(godot::BitField<const godot::KeyModifierMask&>* __claw_this_, const enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEeOEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIN5godot10StringNameEEC2Ev() {
return sizeof(std::__new_allocator<godot::StringName>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_array_set_typed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:154:46

return godot::internal::gdextension_interface_array_set_typed;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEppEi(std::__atomic_base<short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array8IteratorC1ERKS1_(struct godot::PackedVector3Array::Iterator* __claw_this_, const struct godot::PackedVector3Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:164:3
new (__claw_this_) godot::PackedVector3Array::Iterator(*p_it);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio01W10001() {
return sizeof(std::ratio<1,1000>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt11char_traitsIDiE6assignERDiRKDi(std::char_traits<char32>::char_type* __c1, const std::char_traits<char32>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:899:7
std::char_traits<char32>::assign(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB19bind_virtual_methodERKNS_10StringNameES3_i(const godot::StringName* p_class, const godot::StringName* p_method, int p_call) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:186:14
godot::ClassDB::bind_virtual_method(*p_class, *p_method, p_call);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedInt64ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__do_common_type_impl() {
return sizeof(std::__do_common_type_impl);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot8PtrToArgIRKNS_17PackedStringArrayEE7convertEPKv(godot::PackedStringArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
new (__claw_result_) godot::PackedStringArray(godot::PtrToArg<const godot::PackedStringArray&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWless0godotWStringName11() {
return alignof(std::__type_identity<std::less<godot::StringName>>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__is_charE3EE23W_claw_ctor(std::__is_char<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:415:12
new (__claw_this_) std::__is_char<wchar_t>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_get_class_name(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:165:51

godot::internal::gdextension_interface_object_get_class_name = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot7VariantcvNS_4AABBEEv(struct godot::AABB* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:240:2
new (__claw_result_) godot::AABB(__claw_this_->operator AABB());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName12nocasecmp_toERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:262:10
return __claw_this_->nocasecmp_to(*to);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEppEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_name_new_with_latin1_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:127:61

return godot::internal::gdextension_interface_string_name_new_with_latin1_chars;
}
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZN5godot16PackedColorArrayaSERKS0_(godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:135:20
return (godot::PackedColorArray*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWinput_iterator_tag() {
return alignof(std::input_iterator_tag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0long1() {
return alignof(godot::PtrToArg<long>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_16ClassDBSingletonEEC1Ev(godot::internal::EngineClassRegistration<godot::ClassDBSingleton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:124:2
new (__claw_this_) godot::internal::EngineClassRegistration<godot::ClassDBSingleton>();
}
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_type(struct godot::PropertyInfo* __claw_this_, enum godot::Variant::Type __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->type = __claw_value_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object4freeEPvi(void* data, int ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
godot::Object::free(data, ptr);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot7ClassDB25get_inheriters_from_classERKNS_10StringNameE(godot::PackedStringArray* __claw_result_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::PackedStringArray(godot::ClassDB::get_inheriters_from_class(*_class));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_6StringEE6encodeES1_Pv(godot::String* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
godot::PtrToArg<godot::String>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector2ArrayWConstIterator() {
return sizeof(godot::PackedVector2Array::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Rect2E23v_claw_dtor(godot::GetTypeInfo<const godot::Rect2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPPhE6encodeES2_Pv(uint8_t** p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
godot::PtrToArg<unsigned char**>::encode(p_var, p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_traits0falseWfalseWfalse1() {
return alignof(std::__detail::_Hashtable_traits<false,false,false>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Basis_claw_ctor(godot::PtrToArg<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
new (__claw_this_) godot::PtrToArg<godot::Basis>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWRID11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::RID>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5PlaneEEC1Ev(godot::TypedArray<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:97:1
new (__claw_this_) godot::TypedArray<godot::Plane>();
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB12intersectionERKS0_(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:75:7
new (__claw_result_) godot::AABB(__claw_this_->intersection(*p_aabb));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(std::basic_string<char>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:803:7
__claw_this_->~basic_string();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIlE21compare_exchange_weakERllSt12memory_orderS2_(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWbinary_function0constWvoidPWconstWvoidPWbool1() {
return sizeof(std::binary_function<const void*,const void*,bool>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__false_type_claw_dtor(struct std::__false_type* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:74:10
__claw_this_->~__false_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_16PackedColorArrayEE6encodeES1_Pv(godot::PackedColorArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
godot::PtrToArg<const godot::PackedColorArray&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt21__ctype_abstract_baseIwE5widenEPKcS2_Pw(std::__ctype_abstract_base<wchar_t>* __claw_this_, const char* __lo, const char* __hi, std::__ctype_abstract_base<wchar_t>::char_type* __to) {
// /usr/include/c++/13/bits/locale_facets.h:315:7
return (const char*) __claw_this_->widen(__lo, __hi, __to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedFloat32Array1() {
return sizeof(godot::PtrToArg<godot::PackedFloat32Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261S_claw_dtor(godot::PtrToArg<const short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZN5godot8PtrToArgINS_11Transform2DEE7convertEPKv(struct godot::Transform2D* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
new (__claw_result_) godot::Transform2D(godot::PtrToArg<godot::Transform2D>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedStringArray1() {
return alignof(godot::GetTypeInfo<godot::PackedStringArray>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Plane_claw_dtor(godot::PtrToArg<const godot::Plane&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot7VariantEEC1ERKS1_(std::allocator<godot::Variant>* __claw_this_, const std::allocator<godot::Variant>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<godot::Variant>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4::Axis>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEmIEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat32ArrayWIterator() {
return alignof(godot::PackedFloat32Array::Iterator);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector4i1() {
return alignof(godot::PtrToArg<godot::Vector4i>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEpLEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot11Transform3DcvNS_6StringEEv(godot::String* __claw_result_, struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:126:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0double1() {
return sizeof(godot::GetTypeInfo<double>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node25set_multiplayer_authorityEib(godot::Node* __claw_this_, int32_t id, bool recursive) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:228:7
__claw_this_->set_multiplayer_authority(id, recursive);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_setter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:95:52

return godot::internal::gdextension_interface_variant_get_ptr_setter;
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p1L_claw_ctor(std::common_type<long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2299:12
new (__claw_this_) std::common_type<long>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIiEC2Ev() {
return sizeof(std::atomic<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWSideR1() {
return alignof(godot::GetTypeInfo<godot::Side&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1ERKS2_OS3_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, const std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>::allocator_type* __a, std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:361:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(*__a, std::move(*__x));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_16PackedInt32ArrayEE6encodeES1_Pv(godot::PackedInt32Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
godot::PtrToArg<const godot::PackedInt32Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D16global_translateERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:128:7
__claw_this_->global_translate(*offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ColorEEC1Ev(godot::TypedArray<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:102:1
new (__claw_this_) godot::TypedArray<godot::Color>();
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIyE5storeEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1EOS7_OSaISt13_Rb_tree_nodeIS1_EE(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __x, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Node_allocator* __a) {
// /usr/include/c++/13/bits/stl_tree.h:976:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(std::move(*__x), std::move(*__a));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object12is_connectedERKNS_10StringNameERKNS_8CallableE(godot::Object* __claw_this_, const godot::StringName* signal, const godot::Callable* callable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:124:7
return __claw_this_->is_connected(*signal, *callable);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIcE23compare_exchange_strongERccSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Basis_claw_dtor(godot::TypedArray<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:100:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditMode_claw_ctor(godot::PtrToArg<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::PtrToArg<godot::Node3D::RotationEditMode>();
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZN5godot10DictionaryaSEOS0_(godot::Dictionary* __claw_this_, godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:117:14
return (godot::Dictionary*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedFloat64Array_claw_dtor(godot::PtrToArg<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWunsignedWintR1() {
return alignof(godot::GetTypeInfo<const unsigned int&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection10make_scaleERKNS_7Vector3E(struct godot::Projection* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:131:7
__claw_this_->make_scale(*p_scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWint1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_11OrientationEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Orientation&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Rect2i_claw_ctor(godot::PtrToArg<const godot::Rect2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
new (__claw_this_) godot::PtrToArg<const godot::Rect2i&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40setE3EE23E24E40NE40godotE40SE40StringNameE23E24E40NE40stdE40SE40lessE3EE23S0_E23E24E40NE40stdE40SE40allocatorE3EE23S0__claw_ctor(std::set<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_set.h:96:11
new (__claw_this_) std::set<godot::StringName>();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot7VariantcvNS_5ArrayEEv(godot::Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:253:2
new (__claw_result_) godot::Array(__claw_this_->operator Array());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40ratioE3EE23VL1E23VL1000000000_claw_ctor(std::ratio<1,1000000000>* __claw_this_) {
// /usr/include/c++/13/ratio:266:12
new (__claw_this_) std::ratio<1,1000000000>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0double1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<double>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEmmEi(std::__atomic_base<unsigned long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot6String3ptrEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:465:18
return (const char32*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6StringEEC1ERKNS_5ArrayE(godot::TypedArray<godot::String>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:89:1
new (__claw_this_) godot::TypedArray<godot::String>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_dtor(godot::GetTypeInfo<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_11Transform3DE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Transform3D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:383:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_iter_get(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:74:47

godot::internal::gdextension_interface_variant_iter_get = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node6_readyEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:282:15
__claw_this_->_ready();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object12set_deferredERKNS_10StringNameERKNS_7VariantE(godot::Object* __claw_this_, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:115:7
__claw_this_->set_deferred(*property, *value);
}
}

namespace godot {
namespace internal {
__CLAW_API int* __claw__ZN5godot8internal22create_c_property_listERKNS_4ListINS_12PropertyInfoENS_16DefaultAllocatorEEEPj() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:114:26
return (int*) godot::internal::create_c_property_list();
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array9remove_atEl(godot::PackedFloat64Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:112:7
__claw_this_->remove_at(index);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0constWgodotWStringName1() {
return sizeof(std::__type_identity<const godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector4i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4i::Axis&>();
}
}

namespace godot {
__CLAW_API struct godot::_GlobalNil* __claw_get_godotW_GlobalNil_right(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

return (struct godot::_GlobalNil*)__claw_this_->right;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWlongR1() {
return sizeof(godot::GetTypeInfo<const long&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEmmEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEED1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEpLEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1EPKDi(godot::String* __claw_this_, const char32* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:272:2
new (__claw_this_) godot::String(from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector2i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2i::Axis&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40DefaultAllocator_claw_dtor(godot::DefaultAllocator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:131:7
__claw_this_->~DefaultAllocator();
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZN5godot8PtrToArgINS_10DictionaryEE7convertEPKv(godot::Dictionary* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
new (__claw_result_) godot::Dictionary(godot::PtrToArg<godot::Dictionary>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray4sizeEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:148:10
return __claw_this_->size();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_order(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m) {
// /usr/include/c++/13/atomic:143:5
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6dedentEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:312:9
new (__claw_result_) godot::String(__claw_this_->dedent());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE8fetch_orEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4irmEi(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:111:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator%(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlags_claw_ctor(godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godot8PtrToArgIRKNS_7Vector4EE7convertEPKv(struct godot::Vector4* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
new (__claw_result_) godot::Vector4(godot::PtrToArg<const godot::Vector4&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDiE11eq_int_typeERKjS2_(const std::char_traits<char32>::int_type* __c1, const std::char_traits<char32>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:989:7
return std::char_traits<char32>::eq_int_type(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API godot::CowData<char32>::Size __claw__ZNK5godot7CowDataIDiE4sizeEv(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:187:22
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedByteArray1() {
return sizeof(godot::PtrToArg<godot::PackedByteArray>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIDiEC2Ev() {
return sizeof(std::__atomic_base<char32>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEaSERKS2_(godot::Ref<godot::World3D>* __claw_this_, const godot::Ref<godot::World3D>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:107:7
__claw_this_->operator=(*p_from);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIlE12is_lock_freeEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant11get_indexedElRbS1_(godot::Variant* __claw_result_, godot::Variant* __claw_this_, int64_t index, bool* r_valid, bool* r_oob) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:308:10
new (__claw_result_) godot::Variant(__claw_this_->get_indexed(index, *r_valid, *r_oob));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4iWAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4i::Axis&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector3i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3i::Axis&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWColorR1() {
return sizeof(godot::GetTypeInfo<const godot::Color&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(std::basic_string<char>* __claw_this_, const std::basic_string<char>* __str) {
// /usr/include/c++/13/bits/basic_string.h:547:7
new (__claw_this_) std::basic_string<char>(*__str);
}
}

namespace godot {
__CLAW_API godot::CallableCustom* __claw__ZNK5godot8Callable10get_customEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:100:18
return (godot::CallableCustom*) __claw_this_->get_custom();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEaSEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::ConstIterator* __claw__ZNK5godot16PackedColorArray3endEv(struct godot::PackedColorArray::ConstIterator* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:202:31
new (__claw_result_) godot::PackedColorArray::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWProjectionWPlanes1() {
return alignof(godot::VariantCaster<godot::Projection::Planes>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1EPKDs(godot::String* __claw_this_, const char16* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:271:2
new (__claw_this_) godot::String(from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector2ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedVector2Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:58:16
new (__claw_this_) godot::PackedVector2Array::_MethodBindings();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWlong1() {
return sizeof(std::__hash_base<unsigned long,long>);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::Iterator* __claw__ZN5godot18PackedVector3Array8IteratormmEv(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:154:28
return (struct godot::PackedVector3Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node28is_processing_shortcut_inputEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:194:7
return __claw_this_->is_processing_shortcut_input();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWKey1() {
return sizeof(godot::GetTypeInfo<const godot::Key>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot7VariantcvNS_6StringEEv(godot::String* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:228:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_array_ref(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:153:41

godot::internal::gdextension_interface_array_ref = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7reverseEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:574:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNKSt13__atomic_baseItE4loadESt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0godotWMethodBindP1() {
return alignof(std::__type_identity<godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3dVEf(struct godot::Vector3* __claw_this_, const real_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:164:26
return (struct godot::Vector3*) (&__claw_this_->operator/=(p_scalar));
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::Iterator* __claw__ZN5godot16PackedColorArray8IteratorppEv(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:147:28
return (struct godot::PackedColorArray::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API godot::BitField<godot::Node::ProcessThreadMessages>* __claw__ZN5godot13VariantCasterINS_8BitFieldINS_4Node21ProcessThreadMessagesEEEE4castERKNS_7VariantE(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_result_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::BitField<godot::Node::ProcessThreadMessages>(godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>::cast(*p_variant));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIDsE6lengthEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:115:10
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedByteArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedByteArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:59:16
new (__claw_this_) godot::PackedByteArray::_MethodBindings();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Signal11operatornotEv(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:103:7
return __claw_this_->operatornot();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_(std::basic_string<char>* __claw_this_, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:535:7
new (__claw_this_) std::basic_string<char>(*__a);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Rehash_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return sizeof(std::__detail::_Rehash_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3irMEi(struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:108:27
return (struct godot::Vector3i*) (&__claw_this_->operator%=(p_scalar));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array9remove_atEl(godot::PackedInt64Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:112:7
__claw_this_->remove_at(index);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array4sortEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:121:7
__claw_this_->sort();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdWpair0constWintWint111() {
return alignof(std::__type_identity<std::allocator<std::pair<const int,int>>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNode3DWRotationEditMode1() {
return alignof(godot::PtrToArg<godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot8PtrToArgIRKNS_7Vector3EE7convertEPKv(struct godot::Vector3* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
new (__claw_result_) godot::Vector3(godot::PtrToArg<const godot::Vector3&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node16initialize_classEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
godot::Node::initialize_class();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1Ev(std::basic_string<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:522:7
new (__claw_this_) std::basic_string<wchar_t>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIcEC1ERKS0_(std::__new_allocator<char>* __claw_this_, const std::__new_allocator<char>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<char>(*arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1Ev(std::basic_string<char16>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:522:7
new (__claw_this_) std::basic_string<char16>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7CowDataIwEC2Ev() {
return alignof(godot::CowData<wchar_t>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEeOEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::ConstIterator* __claw__ZNK5godot15PackedByteArray3endEv(struct godot::PackedByteArray::ConstIterator* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:280:31
new (__claw_result_) godot::PackedByteArray::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23i_claw_dtor(godot::PtrToArg<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE4sizeEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:468:21
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB16intersects_planeERKNS_5PlaneE(struct godot::AABB* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:82:7
return __claw_this_->intersects_plane(*p_plane);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDsE21compare_exchange_weakERDsDsSt12memory_orderS2_(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10_exit_treeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:281:15
__claw_this_->_exit_tree();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt6atomicIbEcvbEv(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:89:5
return __claw_this_->operator bool();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array13ConstIteratorC1Ev(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:188:3
new (__claw_this_) godot::PackedVector3Array::ConstIterator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo111() {
return sizeof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray13ConstIteratorC1ERKS1_(struct godot::PackedColorArray::ConstIterator* __claw_this_, const struct godot::PackedColorArray::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:186:3
new (__claw_this_) godot::PackedColorArray::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11CharStringTIcEC2Ev() {
return sizeof(godot::CharStringT<char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_11MethodFlagsEEC1El(godot::BitField<const godot::MethodFlags&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::MethodFlags&>(p_value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_11MethodFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MethodFlags&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::World3D* __claw__ZNK5godot3RefINS_7World3DEEdeEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:91:20
return (godot::World3D*) __claw_this_->operator*();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt4pairIKiiEEC2Ev() {
return alignof(std::allocator<std::pair<const int,int>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWNodePath1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23Vb0_claw_dtor(std::__type_identity<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedInt64Array_claw_ctor(godot::PtrToArg<const godot::PackedInt64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
new (__claw_this_) godot::PtrToArg<const godot::PackedInt64Array&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::BitField<const godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API enum godot::Node3D::RotationEditMode __claw__ZN5godot13VariantCasterINS_6Node3D16RotationEditModeEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
return godot::VariantCaster<godot::Node3D::RotationEditMode>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D14orthonormalizeEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:76:7
__claw_this_->orthonormalize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWStringName1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC1ERKS2_(std::basic_string_view<char16>* __claw_this_, const std::basic_string_view<char16>* arg0) {
// /usr/include/c++/13/string_view:136:17
new (__claw_this_) std::basic_string_view<char16>(*arg0);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot7ClassDB19class_get_enum_listERKNS_10StringNameEb(godot::PackedStringArray* __claw_result_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::PackedStringArray(godot::ClassDB::class_get_enum_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array12append_arrayERKS0_(godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:111:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::Iterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratormmEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:151:28
return (struct godot::List<godot::PropertyInfo>::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot8PtrToArgIRKNS_7Vector2EE7convertEPKv(struct godot::Vector2* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
new (__claw_result_) godot::Vector2(godot::PtrToArg<const godot::Vector2&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Signal12is_connectedERKNS_8CallableE(godot::Signal* __claw_this_, const godot::Callable* callable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:97:7
return __claw_this_->is_connected(*callable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWlongR1() {
return alignof(godot::PtrToArg<const long&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWCorner1() {
return sizeof(godot::PtrToArg<godot::Corner>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWTransform3D11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40ProjectionE40EE40Planes_claw_ctor(godot::VariantCaster<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::VariantCaster<godot::Projection::Planes>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_10QuaternionEE6encodeES1_Pv(struct godot::Quaternion* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
godot::PtrToArg<const godot::Quaternion&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8SafeFlag6set_toEb(godot::SafeFlag* __claw_this_, bool p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:158:23
__claw_this_->set_to(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE9fetch_xorEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D13global_rotateERKNS_7Vector3Ed(godot::Node3D* __claw_this_, const struct godot::Vector3* axis, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:126:7
__claw_this_->global_rotate(*axis, angle);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWBitField0godotWKeyModifierMask11() {
return sizeof(godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_16PackedInt32ArrayEE6encodeES1_Pv(godot::PackedInt32Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
godot::PtrToArg<godot::PackedInt32Array>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::initializer_list<godot::Vector3>::size_type __claw__ZNKSt16initializer_listIN5godot7Vector3EE4sizeEv(std::initializer_list<godot::Vector3>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

__CLAW_API int __claw_cE3AE40FE40getchar_unlocked() {
// /usr/include/stdio.h:586:12
return getchar_unlocked();
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector4i_claw_ctor(godot::PtrToArg<const godot::Vector4i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
new (__claw_this_) godot::PtrToArg<const godot::Vector4i&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type0longWdouble1() {
return alignof(std::common_type<long double>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPropertyUsageFlagsR1() {
return sizeof(godot::GetTypeInfo<godot::PropertyUsageFlags&>);
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot5Rect28get_sizeEv(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:49:17
return (struct godot::Vector2*) (&__claw_this_->get_size());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWSignalR1() {
return sizeof(godot::GetTypeInfo<const godot::Signal&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWMouseButton1() {
return alignof(godot::PtrToArg<godot::MouseButton>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection20set_depth_correctionEb(struct godot::Projection* __claw_this_, bool p_flip_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:73:7
__claw_this_->set_depth_correction(p_flip_y);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array13ConstIteratorC1EPKNS_7Vector3E(struct godot::PackedVector3Array::ConstIterator* __claw_this_, const struct godot::Vector3* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:187:3
new (__claw_this_) godot::PackedVector3Array::ConstIterator(p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIDiEC2Ev() {
return alignof(std::__new_allocator<char32>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEaNEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_6StringEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::String>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8CallableEEC1ERKNS_7VariantE(godot::TypedArray<godot::Callable>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:106:1
new (__claw_this_) godot::TypedArray<godot::Callable>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWBitField0godotWMouseButtonMask11() {
return alignof(godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot18PackedVector3Array13ConstIteratordeEv(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:171:33
return (struct godot::Vector3*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWJoyButton1() {
return alignof(godot::PtrToArg<godot::JoyButton>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantHasher() {
return sizeof(godot::VariantHasher);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot5BasiscvNS_10QuaternionEEv(struct godot::Quaternion* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:225:2
new (__claw_result_) godot::Quaternion(__claw_this_->operator Quaternion());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZNK5godot15PackedByteArray16to_float32_arrayEv(godot::PackedFloat32Array* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:193:21
new (__claw_result_) godot::PackedFloat32Array(__claw_this_->to_float32_array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15KeyModifierMaskEE8set_flagES2_(godot::BitField<godot::KeyModifierMask&>* __claw_this_, enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6SignalneERKNS_7VariantE(godot::Signal* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:102:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIwE5storeEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE9fetch_xorEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWlongP1() {
return alignof(godot::PtrToArg<const long*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWString1() {
return alignof(godot::PtrToArg<godot::String>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWRect2R1() {
return alignof(godot::GetTypeInfo<const godot::Rect2&>);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZN5godot12SafeRefCount8unrefvalEv(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:183:27
return __claw_this_->unrefval();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIbEC1ERKNS_5ArrayE(godot::TypedArray<bool>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:78:1
new (__claw_this_) godot::TypedArray<bool>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_17PackedStringArrayEE6encodeES1_Pv(godot::PackedStringArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
godot::PtrToArg<godot::PackedStringArray>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRKNS_15KeyModifierMaskEE8has_flagES3_(godot::BitField<const godot::KeyModifierMask&>* __claw_this_, const enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4ngEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:122:25
new (__claw_result_) godot::Vector4(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVariantWType1() {
return alignof(godot::GetTypeInfo<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray11operatornotEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:131:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_6StringEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::String>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::Iterator* __claw__ZN5godot16PackedInt64Array8IteratormmEv(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:149:28
return (struct godot::PackedInt64Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPropertyHintR1() {
return alignof(godot::GetTypeInfo<const godot::PropertyHint&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0longW11() {
return sizeof(std::integral_constant<long,1>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Basis_claw_ctor(godot::PtrToArg<const godot::Basis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
new (__claw_this_) godot::PtrToArg<const godot::Basis&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector2i1() {
return alignof(godot::GetTypeInfo<godot::Vector2i>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D17set_disable_scaleEb(godot::Node3D* __claw_this_, bool disable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:104:7
__claw_this_->set_disable_scale(disable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWBasis11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Basis>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D9set_scaleERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:84:7
__claw_this_->set_scale(*p_scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWInlineAlignmentR1() {
return sizeof(godot::GetTypeInfo<godot::InlineAlignment&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Key_claw_dtor(godot::PtrToArg<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector31() {
return alignof(godot::GetTypeInfo<godot::Vector3>);
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::Iterator* __claw__ZN5godot17PackedStringArray8IteratormmEv(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:151:28
return (struct godot::PackedStringArray::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_16PackedColorArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedColorArray>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName17naturalcasecmp_toERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:263:10
return __claw_this_->naturalcasecmp_to(*to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWKeyModifierMask1() {
return alignof(godot::GetTypeInfo<const godot::KeyModifierMask>);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::Object*>>>::size_type __claw__ZNSt16allocator_traitsISaISt4pairIKN5godot10StringNameEPNS1_6ObjectEEEE8max_sizeERKS7_(const std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::Object*>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::Object*>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWchar32R1() {
return alignof(godot::GetTypeInfo<const char32&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ESt16initializer_listIcERKS3_(std::basic_string<char>* __claw_this_, std::initializer_list<char>* __l, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:706:7
new (__claw_this_) std::basic_string<char>(*__l, *__a);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:439:10
return (godot::String*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_List_const_iteratorIN5godot10StringNameEEC1Ev(std::_List_const_iterator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:350:7
new (__claw_this_) std::_List_const_iterator<godot::StringName>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__erased_type_claw_ctor(struct std::__erased_type* __claw_this_) {
// /usr/include/c++/13/bits/uses_allocator.h:46:10
new (__claw_this_) std::__erased_type();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgodot_version() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:44:36

return godot::internal::godot_version;
}
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection14create_for_hmdEifffffff(struct godot::Projection* __claw_result_, int p_eye, real_t p_aspect, real_t p_intraocular_dist, real_t p_display_width, real_t p_display_to_lens, real_t p_oversample, real_t p_z_near, real_t p_z_far) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:89:20
new (__claw_result_) godot::Projection(godot::Projection::create_for_hmd(p_eye, p_aspect, p_intraocular_dist, p_display_width, p_display_to_lens, p_oversample, p_z_near, p_z_far));
return __claw_result_;
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot7VariantcvdEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:226:2
return __claw_this_->operator double();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D12untranslatedEv(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:97:14
new (__claw_result_) godot::Transform2D(__claw_this_->untranslated());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_int64_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:144:67

return godot::internal::gdextension_interface_packed_int64_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWQuaternion1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSC_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, const std::unordered_map<godot::StringName,godot::Object*>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:188:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIiE6encodeEiPv(int32_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
godot::PtrToArg<int>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcEaSEPKc(godot::CharStringT<char>* __claw_this_, const char* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:112:7
__claw_this_->operator=(p_cstr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector4i1() {
return sizeof(godot::GetTypeInfo<godot::Vector4i>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray9encode_u8Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:195:7
__claw_this_->encode_u8(byte_offset, value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWEulerOrder1() {
return sizeof(godot::GetTypeInfo<const godot::EulerOrder>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_5Rect2E(godot::Variant* __claw_this_, const struct godot::Rect2* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:183:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector21() {
return alignof(godot::GetTypeInfo<godot::Vector2>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEaNEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_18PackedVector3ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:437:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D13set_transformERKNS_11Transform3DE(godot::Node3D* __claw_this_, const struct godot::Transform3D* local) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:72:7
__claw_this_->set_transform(*local);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE9fetch_xorEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIDiEaSERKS1_(godot::CharProxy<char32>* __claw_this_, const godot::CharProxy<char32>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:78:22
__claw_this_->operator=(*p_other);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIaED1Ev(std::atomic<char>* __claw_this_) {
// /usr/include/c++/13/atomic:736:7
__claw_this_->~atomic();
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot7Vector2EEC1Ev(std::initializer_list<godot::Vector2>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::Vector2>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWColorR1() {
return sizeof(godot::PtrToArg<const godot::Color&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEC2ERKS5_() {
return sizeof(std::pair<const godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godotneEPKcRKNS_6StringE(const char* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:473:6
return godot::operator!=(p_chr, *p_str);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray8IteratorC1EPNS_5ColorE(struct godot::PackedColorArray::Iterator* __claw_this_, struct godot::Color* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:159:3
new (__claw_this_) godot::PackedColorArray::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array9remove_atEl(godot::PackedVector2Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:116:7
__claw_this_->remove_at(index);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxWchar_traits0char1() {
return alignof(__gnu_cxx::char_traits<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23SE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<short>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11SafeNumericImEC2Em() {
return sizeof(godot::SafeNumeric<unsigned long>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:198:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE9fetch_andEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10DictionaryC1EOS0_(godot::Dictionary* __claw_this_, godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:94:2
new (__claw_this_) godot::Dictionary(std::move(*other));
}
}

namespace std {
__CLAW_API std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>::size_type __claw__ZNKSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEE8max_sizeEv(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev() {
return alignof(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40unrefE23(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDiE21compare_exchange_weakERDiDiSt12memory_orderS2_(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_4Node21ProcessThreadMessagesEEC1El(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::Node::ProcessThreadMessages>(p_value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40JoyAxisE23v_claw_dtor(godot::GetTypeInfo<const godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D7rotatedEf(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:94:14
new (__claw_result_) godot::Transform2D(__claw_this_->rotated(p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1q_claw_ctor(godot::PtrToArg<const char16*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
new (__claw_this_) godot::PtrToArg<const char16*>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWRIDW_MethodBindings() {
return sizeof(godot::RID::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE9fetch_addEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt32ArrayWIterator() {
return alignof(godot::PackedInt32Array::Iterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector3iEE6encodeERKS1_Pv(const struct godot::Vector3i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
godot::PtrToArg<godot::Vector3i>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot6Object15get_signal_listEv(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:119:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->get_signal_list());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_10QuaternionE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Quaternion* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:414:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWchar1() {
return alignof(godot::PtrToArg<unsigned char>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_placeholder_script_instance_create() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:174:64

return godot::internal::gdextension_interface_placeholder_script_instance_create;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array8is_emptyEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:162:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40_GlobalNilClass_claw_dtor(struct godot::_GlobalNilClass* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:211:8
__claw_this_->~_GlobalNilClass();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWchar32P1() {
return sizeof(godot::PtrToArg<const char32*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1ERKS5_RKS6_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, const std::less<godot::StringName>* __comp, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_tree.h:933:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(*__comp, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant11interpolateERKS0_S2_fRS0_(const godot::Variant* a, const godot::Variant* b, float c, godot::Variant* r_dst) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:328:14
godot::Variant::interpolate(*a, *b, c, *r_dst);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40equal_toE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::equal_to<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_function.h:373:12
__claw_this_->~equal_to();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godotneEPKwRKNS_6StringE(const wchar_t* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:474:6
return godot::operator!=(p_chr, *p_str);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWJoyAxis1() {
return alignof(godot::GetTypeInfo<const godot::JoyAxis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4iE23v_claw_dtor(godot::GetTypeInfo<godot::Vector4i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godotmlElRKNS_8Vector4iE(struct godot::Vector4i* __claw_result_, const int64_t p_scalar, const struct godot::Vector4i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:231:25
new (__claw_result_) godot::Vector4i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot5rtossEd(godot::String* __claw_result_, double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:485:8
new (__claw_result_) godot::String(godot::rtoss(p_val));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName11trim_prefixERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:350:9
new (__claw_result_) godot::String(__claw_this_->trim_prefix(*prefix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWboolR1() {
return sizeof(godot::PtrToArg<const bool&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector41() {
return alignof(godot::GetTypeInfo<godot::Vector4>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKDsE6encodeES2_Pv(const char16* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
godot::PtrToArg<const char16*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMask_claw_ctor(godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIlEC2Ev() {
return alignof(std::__atomic_base<long>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName18is_subsequence_ofnERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:281:7
return __claw_this_->is_subsequence_ofn(*text);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedByteArray_claw_dtor(godot::TypedArray<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:110:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6substrEll(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:266:9
new (__claw_result_) godot::String(__claw_this_->substr(from, len));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0godotWVariant11() {
return sizeof(std::allocator_traits<std::allocator<godot::Variant>>);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot16DefaultAllocator5allocEm(size_t p_memory) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:133:31
return (void*) godot::DefaultAllocator::alloc(p_memory);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIwE23compare_exchange_strongERwwSt12memory_orderS2_(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_indexed_getter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:98:59

return godot::internal::gdextension_interface_variant_get_ptr_indexed_getter;
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_indexed_getter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:98:59

godot::internal::gdextension_interface_variant_get_ptr_indexed_getter = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayItEC1ERKNS_7VariantE(godot::TypedArray<unsigned short>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:81:1
new (__claw_this_) godot::TypedArray<unsigned short>(*p_variant);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptrC1EOS0_(std::__exception_ptr::exception_ptr* __claw_this_, std::__exception_ptr::exception_ptr* __o) {
// /usr/include/c++/13/bits/exception_ptr.h:123:7
new (__claw_this_) std::__exception_ptr::exception_ptr(std::move(*__o));
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEaSERKNS_7VariantE(godot::Ref<godot::Tween>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace std {
__CLAW_API void __claw__ZSt17atomic_flag_clearPSt11atomic_flag(struct std::atomic_flag* __a) {
// /usr/include/c++/13/atomic:1255:3
std::atomic_flag_clear(__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWBitField0godotWNodeWProcessThreadMessages11() {
return sizeof(godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWshort1() {
return alignof(std::__hash_base<unsigned long,short>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_18PropertyUsageFlagsEE10clear_flagES3_(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_, const enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEEC1El(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::Node::ProcessThreadMessages&>(p_value);
}
}

namespace godot {
__CLAW_API const uint8_t* __claw__ZNK5godot15PackedByteArray13ConstIteratorptEv(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:249:33
return (const uint8_t*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AI_claw_ctor(godot::PtrToArg<int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
new (__claw_this_) godot::PtrToArg<int*>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedByteArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedByteArray&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwEaSEPKw(godot::CharStringT<wchar_t>* __claw_this_, const wchar_t* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:112:7
__claw_this_->operator=(p_cstr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_7VariantE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:361:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt10bad_typeid4whatEv(std::bad_typeid* __claw_this_) {
// /usr/include/c++/13/typeinfo:247:25
return (const char*) __claw_this_->what();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_evaluate(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:63:48

godot::internal::gdextension_interface_variant_evaluate = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40OrientationE23v_claw_dtor(godot::GetTypeInfo<godot::Orientation&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

__CLAW_API wctype_t __claw__ZZ6wctypeE10(const char* __property) {
// /usr/include/x86_64-linux-gnu/bits/wctype-wchar.h:155:17
return wctype(__property);
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt64ArrayWConstIterator() {
return alignof(godot::PackedInt64Array::ConstIterator);
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot8Vector2i6lengthEv(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:118:9
return __claw_this_->length();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Map_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Map_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIyE21compare_exchange_weakERyySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWArray1() {
return alignof(godot::PtrToArg<godot::Array>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWboolP1() {
return sizeof(godot::PtrToArg<const bool*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat64ArrayWIterator() {
return sizeof(godot::PackedFloat64Array::Iterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedColorArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedColorArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedColorArray&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace std {
__CLAW_API std::basic_string_view<char>::size_type __claw__ZNKSt17basic_string_viewIcSt11char_traitsIcEE8max_sizeEv(std::basic_string_view<char>* __claw_this_) {
// /usr/include/c++/13/string_view:239:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedStringArrayE40SE40Iterator_claw_dtor(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:142:12
__claw_this_->~Iterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7CowDataIDsEC2Ev() {
return alignof(godot::CowData<char16>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt13_Rb_tree_nodeIN5godot10StringNameEEED1Ev(std::allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName16is_relative_pathEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:322:7
return __claw_this_->is_relative_path();
}
}

namespace godot {
__CLAW_API godot::CowData<char32>::Size __claw__ZNK5godot7CowDataIDiE5rfindERKDil(godot::CowData<char32>* __claw_this_, const char32* p_val, godot::CowData<char32>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:243:7
return __claw_this_->rfind(*p_val, p_from);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIbED1Ev(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedFloat32Array>);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot7VariantcvNS_5PlaneEEv(struct godot::Plane* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:238:2
new (__claw_result_) godot::Plane(__claw_this_->operator Plane());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String14to_pascal_caseEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:306:9
new (__claw_result_) godot::String(__claw_this_->to_pascal_case());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1f_claw_ctor(godot::PtrToArg<const float*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
new (__claw_this_) godot::PtrToArg<const float*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object28notify_property_list_changedEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:127:7
__claw_this_->notify_property_list_changed();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2::Axis>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNodeWProcessThreadGroup1() {
return sizeof(godot::PtrToArg<godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot7CowDataIDiE3ptrEv(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:183:26
return (const char32*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIfEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<float>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40NodePathE40SE40_MethodBindings_claw_ctor(struct godot::NodePath::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:54:16
new (__claw_this_) godot::NodePath::_MethodBindings();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZN5godot4Node21get_node_and_resourceERKNS_8NodePathE(godot::Array* __claw_result_, godot::Node* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:159:8
new (__claw_result_) godot::Array(__claw_this_->get_node_and_resource(*path));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Rect2_claw_dtor(godot::PtrToArg<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE9fetch_subEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEaNEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_ctor(godot::GetTypeInfo<const godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::GetTypeInfo<const godot::Variant::Type>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector2R1() {
return sizeof(godot::PtrToArg<const godot::Vector2&>);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE7postaddEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:98:20
return __claw_this_->postadd(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE8fetch_orEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40RIDE23v_claw_ctor(godot::GetTypeInfo<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
new (__claw_this_) godot::GetTypeInfo<godot::RID>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array7reverseEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:118:7
__claw_this_->reverse();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23register_engine_classesEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:120:6
godot::internal::register_engine_classes();
}
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIaE12is_lock_freeEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1ERKNS_7Vector3EfS3_(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:233:2
new (__claw_this_) godot::Basis(*p_axis, p_angle, *p_scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVerticalAlignment1() {
return sizeof(godot::PtrToArg<godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4AABBEE6encodeERKS1_Pv(const struct godot::AABB* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
godot::PtrToArg<godot::AABB>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsE9remove_atEl(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:220:22
__claw_this_->remove_at(p_index);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Rect211distance_toERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:93:16
return __claw_this_->distance_to(*p_point);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_ctor(godot::GetTypeInfo<const godot::Projection::Planes&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<const godot::Projection::Planes&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_11MethodFlagsEE10clear_flagES3_(godot::BitField<const godot::MethodFlags&>* __claw_this_, const enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt32ArrayWConstIterator() {
return alignof(godot::PackedInt32Array::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiE9remove_atEl(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:220:22
__claw_this_->remove_at(p_index);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot5BasiscvNS_6StringEEv(godot::String* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:155:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40JoyAxis_claw_dtor(godot::VariantCaster<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt23_Rb_tree_const_iteratorIN5godot10StringNameEEC2Ev() {
return sizeof(std::_Rb_tree_const_iterator<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4Node12InternalModeEE6encodeES2_Pv(enum godot::Node::InternalMode p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
godot::PtrToArg<godot::Node::InternalMode>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS4_RKS3_(std::basic_string<char32>* __claw_this_, const std::basic_string<char32>* __str, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:711:7
new (__claw_this_) std::basic_string<char32>(*__str, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MIDIMessageE23v_claw_ctor(godot::GetTypeInfo<const godot::MIDIMessage&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::GetTypeInfo<const godot::MIDIMessage&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVariantWType1() {
return sizeof(godot::GetTypeInfo<const godot::Variant::Type>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5_() {
return sizeof(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10QuaternionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Quaternion>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt32Array6resizeEl(godot::PackedInt32Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:115:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40SignalE23v_claw_dtor(godot::GetTypeInfo<const godot::Signal&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat64Array5countEd(godot::PackedFloat64Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:126:10
return __claw_this_->count(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIaE6encodeEaPv(int8_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
godot::PtrToArg<char>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::Object*>>* __l, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:265:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*__l, __n, *__a);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot7Vector210from_angleEf(struct godot::Vector2* __claw_result_, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:156:17
new (__claw_result_) godot::Vector2(godot::Vector2::from_angle(p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWDuplicateFlagsR1() {
return alignof(godot::GetTypeInfo<const godot::Node::DuplicateFlags&>);
}
}

namespace godot {
__CLAW_API godot::Point2i* __claw_get_godotWRect2i_position(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:42:21

return (godot::Point2i*)&__claw_this_->position;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator0void1() {
return alignof(std::allocator<void>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_3RIDEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::RID>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWInternalMode1() {
return sizeof(godot::GetTypeInfo<const godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SignalE40SE40_MethodBindings_claw_ctor(struct godot::Signal::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:55:16
new (__claw_this_) godot::Signal::_MethodBindings();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedVector2ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedVector2Array&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEeOEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot11CharStringTIcEixEl(godot::CharStringT<char>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:98:26
return (char*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEED1Ev(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EOS0_(godot::Variant* __claw_this_, godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:152:2
new (__claw_this_) godot::Variant(std::move(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedInt32Array>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector4WAxis1() {
return sizeof(godot::VariantCaster<godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot18GDExtensionBinding10InitObject20register_initializerEPFvNS_25ModuleInitializationLevelEE(godot::GDExtensionBinding::InitObject* __claw_this_, godot::GDExtensionBinding::Callback p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:240:8
__claw_this_->register_initializer(p_init);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis14set_axis_angleERKNS_7Vector3Ef(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:97:7
__claw_this_->set_axis_angle(*p_axis, p_angle);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot13VariantCasterINS_5ErrorEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
return godot::VariantCaster<godot::Error>::cast(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIcEC2Ev() {
return sizeof(std::__atomic_base<char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D4freeEPvi(void* data, int ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
godot::Node3D::free(data, ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0voidP1() {
return alignof(godot::PtrToArg<void*>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton15can_instantiateERKNS_10StringNameE(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:62:7
return __claw_this_->can_instantiate(*_class);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE8fetch_orExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPropertyInfo() {
return alignof(godot::PropertyInfo);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0char161() {
return alignof(godot::GetTypeInfo<char16>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedColorArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedColorArray&>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1() {
return sizeof(std::__detail::_Hash_node<std::pair<const int,int>,false>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4i3maxERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_vector4i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:80:11
new (__claw_result_) godot::Vector4i(__claw_this_->max(*p_vector4i));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedVector3ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedVector3Array&>);
}
}

namespace godot {
__CLAW_API uint8_t* __claw__ZN5godot15PackedByteArray4ptrwEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:218:11
return (uint8_t*) __claw_this_->ptrw();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_iter_init(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:72:48

godot::internal::gdextension_interface_variant_iter_init = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEaSEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZNK5godot16PackedInt32Array8IteratordeEv(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:141:27
return (int32_t*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40SideE23v_claw_ctor(godot::GetTypeInfo<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<godot::Side>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector33absEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:125:25
new (__claw_result_) godot::Vector3(__claw_this_->abs());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot12PropertyInfoEEC1ERKS2_(std::__new_allocator<godot::PropertyInfo>* __claw_this_, const std::__new_allocator<godot::PropertyInfo>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<godot::PropertyInfo>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedColorArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIN5godot10StringNameEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<godot::StringName>,std::equal_to<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::equal_to<godot::StringName>,std::equal_to<godot::StringName>>();
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector2iEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Vector2i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:91:1
new (__claw_this_) godot::TypedArray<godot::Vector2i>(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Dictionary8is_emptyEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:97:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::StringName>* __claw__ZNK5godot4Node10get_groupsEv(godot::TypedArray<godot::StringName>* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:169:25
new (__claw_result_) godot::TypedArray<godot::StringName>(__claw_this_->get_groups());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEEC2El() {
return alignof(godot::BitField<const godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API godot::MultiplayerAPI* __claw__ZNK5godot3RefINS_14MultiplayerAPIEEdeEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:91:20
return (godot::MultiplayerAPI*) __claw_this_->operator*();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf32_chars_and_len(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:112:62

godot::internal::gdextension_interface_string_new_with_utf32_chars_and_len = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWArrayW_MethodBindings() {
return sizeof(godot::Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot8PtrToArgINS_10ProjectionEE7convertEPKv(struct godot::Projection* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
new (__claw_result_) godot::Projection(godot::PtrToArg<godot::Projection>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPlane1() {
return sizeof(godot::GetTypeInfo<godot::Plane>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBindingE40SE40InitData_claw_dtor(struct godot::GDExtensionBinding::InitData* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:206:9
__claw_this_->~InitData();
}
}

namespace std {
namespace chrono {
__CLAW_API void __claw__ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEED1Ev(std::chrono::duration<long,std::ratio<1,1000000000>>* __claw_this_) {
// /usr/include/c++/13/bits/chrono.h:584:2
__claw_this_->~duration();
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_array_set_typed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:154:46

godot::internal::gdextension_interface_array_set_typed = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector3iE40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::VariantCaster<godot::Vector3i::Axis>();
}
}

namespace std {
__CLAW_API std::char_traits<char>::char_type* __claw__ZNSt11char_traitsIcE4moveEPcPKcm(std::char_traits<char>::char_type* __s1, const std::char_traits<char>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:415:7
return (std::char_traits<char>::char_type*) std::char_traits<char>::move(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIjEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<unsigned int>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_setter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:95:52

godot::internal::gdextension_interface_variant_get_ptr_setter = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array7reverseEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:118:7
__claw_this_->reverse();
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot11CharStringTIDiE8get_dataEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:130:40
return (const char32*) __claw_this_->get_data();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVKSt13__atomic_baseIyE4loadESt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName4lpadElRKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t min_length, const godot::String* character) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:346:9
new (__claw_result_) godot::String(__claw_this_->lpad(min_length, *character));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArrayeqERKNS_7VariantE(godot::PackedColorArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:129:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Dictionary_claw_ctor(godot::PtrToArg<const godot::Dictionary&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
new (__claw_this_) godot::PtrToArg<const godot::Dictionary&>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_callable_custom_create(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:169:53

godot::internal::gdextension_interface_callable_custom_create = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::char_type* __claw__ZNSt11char_traitsIwE4copyEPwPKwm(std::char_traits<wchar_t>::char_type* __s1, const std::char_traits<wchar_t>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:558:7
return (std::char_traits<wchar_t>::char_type*) std::char_traits<wchar_t>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40JoyAxis_claw_dtor(godot::PtrToArg<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBinding_claw_ctor(godot::GDExtensionBinding* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:202:7
new (__claw_this_) godot::GDExtensionBinding();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_7VariantE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:391:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::ConstIterator* __claw__ZN5godot16PackedInt64Array13ConstIteratorppEv(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:170:33
return (struct godot::PackedInt64Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRNS_15MouseButtonMaskEEcvlEv(godot::BitField<godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<const godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<const godot::MouseButtonMask>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1EOS0_(godot::String* __claw_this_, godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:268:2
new (__claw_this_) godot::String(std::move(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedFloat32ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedFloat32Array&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWList0godotWPropertyInfo1WIterator() {
return alignof(godot::List<godot::PropertyInfo>::Iterator);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEoREDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40StringNameE40SE40_MethodBindings_claw_ctor(struct godot::StringName::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:83:16
new (__claw_this_) godot::StringName::_MethodBindings();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEC1ERKSA_(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_, const std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>(*arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWString11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::String>>);
}
}

namespace godot {
__CLAW_API godot::InputEvent* __claw__ZNK5godot3RefINS_10InputEventEE3ptrEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:99:20
return (godot::InputEvent*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWJoyAxis1() {
return sizeof(godot::PtrToArg<godot::JoyAxis>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4AABBEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::AABB>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwED1Ev(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:247:17
__claw_this_->~CowData();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Transform3D_claw_dtor(godot::PtrToArg<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedStringArray_claw_dtor(godot::TypedArray<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:115:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwEC1Ev(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:107:17
new (__claw_this_) godot::CharStringT<wchar_t>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector44lerpERKS0_f(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_to, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:99:10
new (__claw_result_) godot::Vector4(__claw_this_->lerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot5Array6pop_atEl(godot::Variant* __claw_result_, godot::Array* __claw_this_, int64_t position) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:184:10
new (__claw_result_) godot::Variant(__claw_this_->pop_at(position));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorptEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:171:27
return (const struct godot::PropertyInfo*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot7CowDataIDsE3ptrEv(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:183:26
return (const char16*) __claw_this_->ptr();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIaE21compare_exchange_weakERaaSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_constant_value(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:102:56

godot::internal::gdextension_interface_variant_get_constant_value = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_dtor(godot::GetTypeInfo<const godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIjE5storeEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector4iWAxis1() {
return alignof(godot::VariantCaster<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D26_gde_binding_free_callbackEPvS1_S1_(void* p_token, void* p_instance, void* p_binding) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
godot::Node3D::_gde_binding_free_callback(p_token, p_instance, p_binding);
}
}

namespace godot {
__CLAW_API godot::MethodBind* __claw__ZN5godot7ClassDB10get_methodERKNS_10StringNameES3_(const godot::StringName* p_class, const godot::StringName* p_method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:188:21
return (godot::MethodBind*) godot::ClassDB::get_method(*p_class, *p_method);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot4NodeC2EPKc() {
return sizeof(godot::Node);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4AABBEEC1ERKNS_7VariantE(godot::TypedArray<godot::AABB>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:99:1
new (__claw_this_) godot::TypedArray<godot::AABB>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector3iWAxis1() {
return alignof(godot::VariantCaster<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot6Object17get_property_listEv(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:72:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->get_property_list());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo111() {
return sizeof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWTransform2D1() {
return sizeof(godot::PtrToArg<godot::Transform2D>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNodeWProcessThreadGroup1() {
return alignof(godot::PtrToArg<godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWProjectionR1() {
return sizeof(godot::GetTypeInfo<const godot::Projection&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEpLEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEoREs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector2iWAxis1() {
return alignof(godot::VariantCaster<godot::Vector2i::Axis>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_7JoyAxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::JoyAxis>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNKSt13__atomic_baseIcEcvcEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator char();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Variant_claw_ctor(godot::PtrToArg<const godot::Variant&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
new (__claw_this_) godot::PtrToArg<const godot::Variant&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIfEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<float>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseItE5storeEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object10set_scriptERKNS_7VariantE(godot::Object* __claw_this_, const godot::Variant* script) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:79:7
__claw_this_->set_script(*script);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_7Vector3EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_18PropertyUsageFlagsEE10clear_flagES1_(godot::BitField<godot::PropertyUsageFlags>* __claw_this_, enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10Dictionary11_native_ptrEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:91:36
return __claw_this_->_native_ptr();
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::size_type __claw__ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEE8max_sizeERKS6_(const std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot5Color5get_hEv(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:58:8
return __claw_this_->get_h();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40BasisE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Basis>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIDsE4sizeEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:93:25
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_ctor(godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector3Array4findERKNS_7Vector3El(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:128:10
return __claw_this_->find(*value, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWfloatP1() {
return alignof(godot::PtrToArg<const float*>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIwE4sizeEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:93:25
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot7VariantcvjEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:223:2
return __claw_this_->operator unsigned int();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array8is_emptyEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:107:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6formatERKNS_7VariantERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Variant* values, const godot::String* placeholder) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:284:9
new (__claw_result_) godot::String(__claw_this_->format(*values, *placeholder));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_7JoyAxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::JoyAxis&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt4pairIKiiEEC2Ev() {
return alignof(std::__new_allocator<std::pair<const int,int>>);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color5namedERKNS_6StringERKS0_(struct godot::Color* __claw_result_, const godot::String* p_name, const struct godot::Color* p_default) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:194:15
new (__claw_result_) godot::Color(godot::Color::named(*p_name, *p_default));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot7VariantcvNS_11Transform3DEEv(struct godot::Transform3D* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:242:2
new (__claw_result_) godot::Transform3D(__claw_this_->operator Transform3D());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1d_claw_dtor(godot::PtrToArg<const double*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::char_type* __claw__ZNSt11char_traitsIwE6assignEPwmw(std::char_traits<wchar_t>::char_type* __s, std::size_t __n, std::char_traits<wchar_t>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:570:7
return (std::char_traits<wchar_t>::char_type*) std::char_traits<wchar_t>::assign(__s, __n, __a);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot3RID11_native_ptrEv(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:73:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot6Node3D31_gde_binding_reference_callbackEPvS1_i() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
return godot::Node3D::_gde_binding_reference_callback();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ColorneERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:73:7
return __claw_this_->operator!=(*p_color);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot6SignalC2EPKNS_7VariantE() {
return alignof(godot::Signal);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4tanhEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:346:14
return godot::Math::tanh(p_x);
}
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4tanhEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:343:15
return godot::Math::tanh(p_x);
}
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::Iterator* __claw__ZN5godot18PackedFloat32Array8IteratorppEv(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:145:28
return (struct godot::PackedFloat32Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40JoyButtonE23v_claw_dtor(godot::GetTypeInfo<const godot::JoyButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasispLERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:140:22
__claw_this_->operator+=(*p_matrix);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AC_claw_dtor(godot::PtrToArg<char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS4_RKS3_(std::basic_string<char16>* __claw_this_, const std::basic_string<char16>* __str, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:711:7
new (__claw_this_) std::basic_string<char16>(*__str, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEE5unrefEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE4sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:647:7
return __claw_this_->size();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:119:52

return godot::internal::gdextension_interface_string_operator_index;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1EmRKS1_RKS2_(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>::size_type __n, const std::vector<godot::StringName>::value_type* __value, const std::vector<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:569:7
new (__claw_this_) std::vector<godot::StringName>(__n, *__value, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Transform3DE23v_claw_dtor(godot::GetTypeInfo<const godot::Transform3D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
__claw_this_->~GetTypeInfo();
}
}

__CLAW_API unsigned long long __claw_alignof___iseqsig_type0double1() {
return alignof(__iseqsig_type<double>);
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10replace_byEPS0_b(godot::Node* __claw_this_, godot::Node* node, bool keep_groups) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:219:7
__claw_this_->replace_by(node, keep_groups);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColormiERKS0_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:81:8
new (__claw_result_) godot::Color(__claw_this_->operator-(*p_color));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot17PackedStringArray4ptrwEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:140:10
return (godot::String*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8CallableEEC1Ev(godot::TypedArray<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:106:1
new (__claw_this_) godot::TypedArray<godot::Callable>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_16ClassDBSingletonEE8callbackEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:128:14
godot::internal::EngineClassRegistration<godot::ClassDBSingleton>::callback();
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEoREh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWNodePathR1() {
return sizeof(godot::PtrToArg<const godot::NodePath&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15error_conditionC2Ev() {
return alignof(std::error_condition);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot7VariantEEC1Ev(std::allocator<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<godot::Variant>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKsE6encodeEsPv(int16_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
godot::PtrToArg<const short&>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEpLEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40RID_claw_dtor(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:44:7
__claw_this_->~RID();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return alignof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZNK5godot15PackedByteArray14to_int32_arrayEv(godot::PackedInt32Array* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:191:19
new (__claw_result_) godot::PackedInt32Array(__claw_this_->to_int32_array());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_cE3AE40NE40godotE40NE40internalE40SE40EngineClassRegistrationE3EE23E24E40NE40godotE40SE40RefCounted_claw_dtor(godot::internal::EngineClassRegistration<godot::RefCounted>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:123:8
__claw_this_->~EngineClassRegistration();
}
}
}

namespace godot {
__CLAW_API const uint8_t* __claw__ZNK5godot15PackedByteArrayixEl(godot::PackedByteArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:215:17
return (uint8_t*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API enum godot::Node::InternalMode __claw__ZN5godot8PtrToArgINS_4Node12InternalModeEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
return godot::PtrToArg<godot::Node::InternalMode>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_8Vector2iE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector2i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:405:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot7Variant11_native_ptrEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:146:39
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWfloatR1() {
return alignof(godot::PtrToArg<const float&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWPropertyUsageFlags11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw_get_godotWPlane_normal(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:41:21

return (struct godot::Vector3*)&__claw_this_->normal;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Plane>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Plane>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array4fillEl(godot::PackedInt32Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:114:7
__claw_this_->fill(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionmLERKf(struct godot::Quaternion* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:107:22
__claw_this_->operator*=(*s);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String4leftEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:314:9
new (__claw_result_) godot::String(__claw_this_->left(length));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40String_claw_dtor(godot::PtrToArg<const godot::String&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
__claw_this_->~PtrToArg();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return sizeof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot8PtrToArgIRKNS_10StringNameEE7convertEPKv(godot::StringName* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
new (__claw_result_) godot::StringName(godot::PtrToArg<const godot::StringName&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot6Node3D16get_global_basisEv(struct godot::Basis* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:95:8
new (__claw_result_) godot::Basis(__claw_this_->get_global_basis());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23lE23v_claw_dtor(godot::GetTypeInfo<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot8Vector2iixEi(struct godot::Vector2i* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:69:32
return (int32_t*) (&__claw_this_->operator[](p_idx));
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__true_type_claw_ctor(struct std::__true_type* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:73:10
new (__claw_this_) std::__true_type();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_can_convert_strict(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:87:56

godot::internal::gdextension_interface_variant_can_convert_strict = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array11operatornotEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:129:7
return __claw_this_->operatornot();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_6ObjectEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return alignof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23f_claw_ctor(__iseqsig_type<float>* __claw_this_) {
// /usr/include/math.h:1367:19
new (__claw_this_) __iseqsig_type<float>();
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTransform2DR1() {
return alignof(godot::GetTypeInfo<const godot::Transform2D&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect212set_positionERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_pos) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:48:7
__claw_this_->set_position(*p_pos);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::VerticalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<godot::VerticalAlignment&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1EmRKSD_RKSB_RKS7_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt_count_hint, const std::hash<godot::StringName>* __hf, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::key_equal* __eql, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::allocator_type* __a) {
// /usr/include/c++/13/bits/hashtable.h:537:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(__bkt_count_hint, *__hf, *__eql, *__a);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1EOS2_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>::_Tp_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:343:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(std::move(*__a));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ColorE23v_claw_dtor(godot::GetTypeInfo<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ColoreqERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:70:7
return __claw_this_->operator==(*p_color);
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot11Transform2D5xformERKNS_18PackedVector2ArrayE(godot::PackedVector2Array* __claw_result_, struct godot::Transform2D* __claw_this_, const godot::PackedVector2Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:122:36
new (__claw_result_) godot::PackedVector2Array(__claw_this_->xform(*p_array));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector33minERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_vector3) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:81:10
new (__claw_result_) godot::Vector3(__claw_this_->min(*p_vector3));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIN5godot10StringNameEEC2Ev() {
return alignof(std::__new_allocator<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIfEC1ERKNS_5ArrayE(godot::TypedArray<float>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:87:1
new (__claw_this_) godot::TypedArray<float>(*p_array);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot17PackedStringArray7bsearchERKNS_6StringEb(godot::PackedStringArray* __claw_this_, const godot::String* value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:124:10
return __claw_this_->bsearch(*value, before);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE8exchangeEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector2iR1() {
return sizeof(godot::PtrToArg<const godot::Vector2i&>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot16ClassDBSingleton16get_parent_classERKNS_10StringNameE(godot::StringName* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:59:13
new (__claw_result_) godot::StringName(__claw_this_->get_parent_class(*_class));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40operatorE20VariantE231(godot::Variant* __claw_result_, godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt9exceptionD1Ev(std::exception* __claw_this_) {
// /usr/include/c++/13/bits/exception.h:63:13
__claw_this_->~exception();
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1EOS7_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/stl_tree.h:956:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_16PackedColorArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedColorArray>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantHasher_claw_ctor(struct godot::VariantHasher* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:337:8
new (__claw_this_) godot::VariantHasher();
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_(const __gnu_cxx::char_traits<char>::char_type* __c1, const __gnu_cxx::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:136:7
return __gnu_cxx::char_traits<char>::eq(*__c1, *__c2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Node_handleIN5godot10StringNameES1_SaISt13_Rb_tree_nodeIS1_EEEC2Ev() {
return alignof(std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasismLERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:138:22
__claw_this_->operator*=(*p_matrix);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWClassDB() {
return sizeof(godot::ClassDB);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1EOS3_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:338:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23LE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<long>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<long>>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23W_claw_ctor(std::char_traits<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:479:12
new (__claw_this_) std::char_traits<wchar_t>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWArrayR1() {
return alignof(godot::PtrToArg<const godot::Array&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedStringArray1() {
return sizeof(godot::GetTypeInfo<godot::PackedStringArray>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_10ProjectionE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Projection* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:384:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array13ConstIteratorC1ERKS1_(struct godot::PackedVector3Array::ConstIterator* __claw_this_, const struct godot::PackedVector3Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:189:3
new (__claw_this_) godot::PackedVector3Array::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_9JoyButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::JoyButton&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWCallableR1() {
return sizeof(godot::PtrToArg<const godot::Callable&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIcED1Ev(std::allocator<char>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt11atomic_flag12test_and_setESt12memory_order(struct std::atomic_flag* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:232:5
return __claw_this_->test_and_set(__m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat32Array5countEd(godot::PackedFloat32Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:126:10
return __claw_this_->count(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_15PackedByteArrayEE6encodeES1_Pv(godot::PackedByteArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
godot::PtrToArg<const godot::PackedByteArray&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot9CharProxyIcEC2ERKlRNS_7CowDataIcEE() {
return sizeof(godot::CharProxy<char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE9fetch_xorExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ac_claw_ctor(godot::PtrToArg<unsigned char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
new (__claw_this_) godot::PtrToArg<unsigned char*>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40ErrorE23v_claw_ctor(godot::GetTypeInfo<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::GetTypeInfo<godot::Error>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEE5unrefEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace godot {
__CLAW_API godot::CharString* __claw__ZNK5godot6String5asciiEv(godot::CharString* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:383:13
new (__claw_result_) godot::CharString(__claw_this_->ascii());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40InlineAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<const godot::InlineAlignment>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedVector2ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23dE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<double>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection22create_perspective_hmdEffffbiff(struct godot::Projection* __claw_result_, real_t p_fovy_degrees, real_t p_aspect, real_t p_z_near, real_t p_z_far, bool p_flip_fov, int p_eye, real_t p_intraocular_dist, real_t p_convergence_dist) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:88:20
new (__claw_result_) godot::Projection(godot::Projection::create_perspective_hmd(p_fovy_degrees, p_aspect, p_z_near, p_z_far, p_flip_fov, p_eye, p_intraocular_dist, p_convergence_dist));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array3hasERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:181:7
return __claw_this_->has(*value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_11MouseButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MouseButton&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4Node18ProcessThreadGroupEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIN5godot12PropertyInfoEEC2Ev() {
return sizeof(std::allocator<godot::PropertyInfo>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3tanEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:311:14
return godot::Math::tan(p_x);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIyEC2Ev() {
return alignof(std::__atomic_base<unsigned long long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D22set_rotation_and_scaleEfRKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const real_t p_rot, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:72:22
__claw_this_->set_rotation_and_scale(p_rot, *p_scale);
}
}

namespace std {
__CLAW_API void __claw__ZNSt23_Rb_tree_const_iteratorIN5godot10StringNameEEC1EPKSt18_Rb_tree_node_base(std::_Rb_tree_const_iterator<godot::StringName>* __claw_this_, std::_Rb_tree_const_iterator<godot::StringName>::_Base_ptr __x) {
// /usr/include/c++/13/bits/stl_tree.h:347:7
new (__claw_this_) std::_Rb_tree_const_iterator<godot::StringName>(__x);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_5ArrayEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math18bezier_interpolateEfffff(float p_start, float p_control_1, float p_control_2, float p_end, float p_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:530:14
return godot::Math::bezier_interpolate(p_start, p_control_1, p_control_2, p_end, p_t);
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Callable25get_bound_arguments_countEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:110:10
return __claw_this_->get_bound_arguments_count();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7VariantEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:204:29
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Variant&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40ErrorE23v_claw_dtor(godot::GetTypeInfo<const godot::Error&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3tanEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:308:15
return godot::Math::tan(p_x);
}
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0char1Wchar1() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<char>,char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE9fetch_subEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23f_claw_dtor(godot::TypedArray<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:87:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWRIDR1() {
return sizeof(godot::PtrToArg<const godot::RID&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedInt32Array_claw_ctor(godot::PtrToArg<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
new (__claw_this_) godot::PtrToArg<godot::PackedInt32Array>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1EOSJ_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __ht) {
// /usr/include/c++/13/bits/hashtable.h:543:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(std::move(*__ht));
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot5Array20get_typed_class_nameEv(godot::StringName* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:203:13
new (__claw_result_) godot::StringName(__claw_this_->get_typed_class_name());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_string_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:145:63

godot::internal::gdextension_interface_packed_string_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedVector3Array1() {
return alignof(godot::PtrToArg<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsED1Ev(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:247:17
__claw_this_->~CowData();
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot4Node22get_process_delta_timeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:184:9
return __claw_this_->get_process_delta_time();
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::ConstIterator* __claw__ZNK5godot18PackedFloat32Array3endEv(struct godot::PackedFloat32Array::ConstIterator* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:200:31
new (__claw_result_) godot::PackedFloat32Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection11set_frustumEffffff(struct godot::Projection* __claw_this_, real_t p_left, real_t p_right, real_t p_bottom, real_t p_top, real_t p_near, real_t p_far) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:81:7
__claw_this_->set_frustum(p_left, p_right, p_bottom, p_top, p_near, p_far);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWinput_iterator_tag() {
return sizeof(std::input_iterator_tag);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIN5godot12PropertyInfoEEC2Ev() {
return alignof(std::__new_allocator<godot::PropertyInfo>);
}
}

namespace std {
__CLAW_API std::basic_string_view<char32>::size_type __claw__ZNKSt17basic_string_viewIDiSt11char_traitsIDiEE8max_sizeEv(std::basic_string_view<char32>* __claw_this_) {
// /usr/include/c++/13/string_view:239:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0char11() {
return alignof(std::allocator_traits<std::allocator<char>>);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10StringName11_native_ptrEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:251:36
return __claw_this_->_native_ptr();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt6atomicIbE12is_lock_freeEv(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:96:5
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API const godot::List<godot::PropertyInfo>::Element* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE4backEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:270:32
return (const godot::List<godot::PropertyInfo>::Element*) __claw_this_->back();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot5Array8pop_backEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:182:10
new (__claw_result_) godot::Variant(__claw_this_->pop_back());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element3getEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:117:21
return (struct godot::PropertyInfo*) (&__claw_this_->get());
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot14CallableCustom4callEPPKNS_7VariantEiRS1_Ri(godot::CallableCustom* __claw_this_, const godot::Variant** p_arguments, int p_argcount, godot::Variant* r_return_value, int* r_call_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:59:15
__claw_this_->call(p_arguments, p_argcount, *r_return_value, *r_call_error);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseItE21compare_exchange_weakERttSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7CowDataIwEC2Ev() {
return sizeof(godot::CowData<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_4Node21ProcessThreadMessagesEE8set_flagES2_(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_, enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace std {
__CLAW_API std::__ctype_abstract_base<wchar_t>::char_type __claw__ZNKSt21__ctype_abstract_baseIwE7toupperEw(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::__ctype_abstract_base<wchar_t>::char_type __c) {
// /usr/include/c++/13/bits/locale_facets.h:235:7
return __claw_this_->toupper(__c);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot10RefCounted19get_reference_countEv(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:53:10
return __claw_this_->get_reference_count();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8pop_backEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:314:7
__claw_this_->pop_back();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEE6resizeEm(std::basic_string<char16>* __claw_this_, std::basic_string<char16>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:1113:7
__claw_this_->resize(__n);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEEC1Ev(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::_Rb_tree_node<godot::StringName>>();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot7VariantcvNS_5ColorEEv(struct godot::Color* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:244:2
new (__claw_result_) godot::Color(__claw_this_->operator Color());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName9pad_zerosEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t digits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:349:9
new (__claw_result_) godot::String(__claw_this_->pad_zeros(digits));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot9CharProxyIcEC2ERKlRNS_7CowDataIcEE() {
return alignof(godot::CharProxy<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWunsignedWshortR1() {
return sizeof(godot::GetTypeInfo<const unsigned short&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableC1EPNS_14CallableCustomE(godot::Callable* __claw_this_, godot::CallableCustom* p_custom) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:99:2
new (__claw_this_) godot::Callable(p_custom);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Projection13is_orthogonalEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:108:7
return __claw_this_->is_orthogonal();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D15translate_localEfff(struct godot::Transform3D* __claw_this_, real_t p_tx, real_t p_ty, real_t p_tz) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:65:7
__claw_this_->translate_local(p_tx, p_ty, p_tz);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<const godot::MethodFlags&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse111() {
return sizeof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot7Variant4hashEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:321:11
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWKeyModifierMask11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot12PropertyInfoEEC2EPKS1_m() {
return alignof(std::initializer_list<godot::PropertyInfo>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseINSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0ELb0EEEbEC2Ev() {
return alignof(std::__pair_base<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15KeyModifierMaskEEC1El(godot::BitField<const godot::KeyModifierMask&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::KeyModifierMask&>(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE9fetch_xorEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_library_path(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:188:47

godot::internal::gdextension_interface_get_library_path = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RID8is_validEv(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:77:7
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEC1EPS1_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, godot::MultiplayerAPI* p_reference) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:178:2
new (__claw_this_) godot::Ref<godot::MultiplayerAPI>(p_reference);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color13from_rgbe9995Ej(struct godot::Color* __claw_result_, uint32_t p_rgbe) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:201:15
new (__claw_result_) godot::Color(godot::Color::from_rgbe9995(p_rgbe));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWJoyAxis1() {
return sizeof(godot::VariantCaster<godot::JoyAxis>);
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot8Vector3i6lengthEv(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:83:24
return __claw_this_->length();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5remapEfffff(float p_value, float p_istart, float p_istop, float p_ostart, float p_ostop) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:596:14
return godot::Math::remap(p_value, p_istart, p_istop, p_ostart, p_ostop);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNKSt13__atomic_baseIhEcvhEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator unsigned char();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEC1ERKS2_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Ref<godot::Node3DGizmo>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:160:2
new (__claw_this_) godot::Ref<godot::Node3DGizmo>(*p_from);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIbE5storeEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API std::__new_allocator<std::_List_node<godot::StringName>>::size_type __claw__ZNKSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEE8max_sizeEv(std::__new_allocator<std::_List_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWlongP1() {
return sizeof(godot::PtrToArg<const unsigned long*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWKey1() {
return sizeof(godot::PtrToArg<godot::Key>);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameENS0_7ClassDB9ClassInfoESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE4sizeEv(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:317:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16MethodDefinitionC1Ev(struct godot::MethodDefinition* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:69:2
new (__claw_this_) godot::MethodDefinition();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23fE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<float>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot10Dictionary4keysEv(godot::Array* __claw_result_, godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:105:8
new (__claw_result_) godot::Array(__claw_this_->keys());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIjEaSERKNS_5ArrayE(godot::TypedArray<unsigned int>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:83:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNKSt13__atomic_baseIjE4loadESt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName16is_absolute_pathEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:321:7
return __claw_this_->is_absolute_path();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1ERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:254:2
new (__claw_this_) godot::StringName(*from);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4mlERKf(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:123:25
new (__claw_result_) godot::Vector4(__claw_this_->operator*(*s));
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector214length_squaredEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:87:9
return __claw_this_->length_squared();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE8exchangeEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261L_claw_ctor(godot::PtrToArg<const long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
new (__claw_this_) godot::PtrToArg<const long&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_5ColorEE6encodeES3_Pv(const struct godot::Color* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
godot::PtrToArg<const godot::Color&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEmIEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsEC1EPKDs(godot::CharStringT<char16>* __claw_this_, const char16* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:110:17
new (__claw_this_) godot::CharStringT<char16>(p_cstr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_11Transform2DE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Transform2D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:376:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1EOSaISt10_List_nodeIS2_EEOS4_(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_List_base<godot::StringName,std::allocator<godot::StringName>>::_Node_alloc_type* __a, std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __x) {
// /usr/include/c++/13/bits/stl_list.h:559:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*__a), std::move(*__x));
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D13rotated_localEf(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:95:14
new (__claw_result_) godot::Transform2D(__claw_this_->rotated_local(p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:369:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWintR1() {
return alignof(godot::PtrToArg<const int&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3iE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3i&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0int1() {
return sizeof(godot::GetTypeInfo<int>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlags_claw_dtor(godot::PtrToArg<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1ERKNS_6StringEf(struct godot::Color* __claw_this_, const godot::String* p_code, float p_a) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:261:2
new (__claw_this_) godot::Color(*p_code, p_a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Array_claw_dtor(godot::TypedArray<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:109:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIsEaSERKNS_5ArrayE(godot::TypedArray<short>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:82:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8internal23EngineClassRegistrationINS_16ClassDBSingletonEEC2Ev() {
return sizeof(godot::internal::EngineClassRegistration<godot::ClassDBSingleton>);
}
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColorngEv(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:80:8
new (__claw_result_) godot::Color(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVerticalAlignment1() {
return alignof(godot::PtrToArg<godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis16scale_orthogonalERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:105:7
__claw_this_->scale_orthogonal(*p_scale);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_18PackedVector2ArrayE(godot::Array* __claw_this_, const godot::PackedVector2Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:156:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayC1EOS0_(godot::PackedFloat64Array* __claw_this_, godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:104:2
new (__claw_this_) godot::PackedFloat64Array(std::move(*other));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3DC1Ev(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:20
new (__claw_this_) godot::Node3D();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB12set_positionERKNS_7Vector3E(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_pos) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:60:7
__claw_this_->set_position(*p_pos);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIyED1Ev(std::atomic<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/atomic:943:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedVector3ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedVector3Array>();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4idvERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:102:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator/(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1i_claw_ctor(godot::PtrToArg<const unsigned int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
new (__claw_this_) godot::PtrToArg<const unsigned int*>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32ArrayneERKNS_7VariantE(godot::PackedFloat32Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:128:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godotmlEfRKNS_5ColorE(struct godot::Color* __claw_result_, float p_scalar, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:283:22
new (__claw_result_) godot::Color(godot::operator*(p_scalar, *p_color));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array9remove_atEl(godot::PackedFloat32Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:112:7
__claw_this_->remove_at(index);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWlongR1() {
return sizeof(godot::PtrToArg<const unsigned long&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedFloat64ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedFloat64Array&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_14ClockDirectionEE6encodeES1_Pv(enum godot::ClockDirection p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
godot::PtrToArg<godot::ClockDirection>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat32ArrayE40SE40Iterator_claw_dtor(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:140:12
__claw_this_->~Iterator();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ESt16initializer_listIS6_EmRKS1_RKS3_RKS7_(std::unordered_map<int,int>* __claw_this_, std::initializer_list<std::pair<const int,int>>* __l, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::hasher* __hf, const std::unordered_map<int,int>::key_equal* __eql, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:234:7
new (__claw_this_) std::unordered_map<int,int>(*__l, __n, *__hf, *__eql, *__a);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEEC2Ev() {
return alignof(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringplEPKc(godot::String* __claw_result_, godot::String* __claw_this_, const char* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:453:9
new (__claw_result_) godot::String(__claw_this_->operator+(p_str));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseImE21compare_exchange_weakERmmSt12memory_orderS2_(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEC1ERKS3_(godot::List<godot::PropertyInfo>* __claw_this_, const godot::List<godot::PropertyInfo>* p_list) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:748:2
new (__claw_this_) godot::List<godot::PropertyInfo>(*p_list);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot16ClassDBSingleton19class_get_enum_listERKNS_10StringNameEb(godot::PackedStringArray* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:76:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->class_get_enum_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect2C1ERKNS_7Vector2ES3_(struct godot::Rect2* __claw_this_, const godot::Point2* p_pos, const godot::Size2* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:369:2
new (__claw_this_) godot::Rect2(*p_pos, *p_size);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWshortR1() {
return sizeof(godot::PtrToArg<const short&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDsEC1ERKS_(std::allocator<char16>* __claw_this_, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<char16>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWintP1() {
return alignof(godot::PtrToArg<const int*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt9type_infoD1Ev(std::type_info* __claw_this_) {
// /usr/include/c++/13/typeinfo:99:13
__claw_this_->~type_info();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat64ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedFloat64Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_List_const_iteratorIN5godot10StringNameEEC1EPKNSt8__detail15_List_node_baseE(std::_List_const_iterator<godot::StringName>* __claw_this_, const struct std::__detail::_List_node_base* __x) {
// /usr/include/c++/13/bits/stl_list.h:354:7
new (__claw_this_) std::_List_const_iterator<godot::StringName>(__x);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Rect2i_claw_dtor(godot::PtrToArg<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector3i1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0int11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<int>>);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8internal23EngineClassRegistrationINS_4NodeEEC2Ev() {
return alignof(godot::internal::EngineClassRegistration<godot::Node>);
}
}
}

namespace std {
__CLAW_API std::basic_string<char16>::size_type __claw__ZNKSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEE4sizeEv(std::basic_string<char16>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1071:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC1ERKS5_(std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_, const std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>(*__a);
}
}

namespace godot {
__CLAW_API double __claw__ZN5godot8PtrToArgIRKfE10encode_argEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
return godot::PtrToArg<const float&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<godot::Node3D::RotationEditMode>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5Rect2EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Rect2>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot18GDExtensionBinding10InitObject40set_minimum_library_initialization_levelENS_25ModuleInitializationLevelE(godot::GDExtensionBinding::InitObject* __claw_this_, enum godot::ModuleInitializationLevel p_level) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:242:8
__claw_this_->set_minimum_library_initialization_level(p_level);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_dictionary_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:155:56

return godot::internal::gdextension_interface_dictionary_operator_index;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23iE23v_claw_dtor(godot::GetTypeInfo<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPlane() {
return sizeof(godot::Plane);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringplEPKw(godot::String* __claw_result_, godot::String* __claw_this_, const wchar_t* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:454:9
new (__claw_result_) godot::String(__claw_this_->operator+(p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot16PackedColorArray4ptrwEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:140:9
return (struct godot::Color*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameneERKNS_7VariantE(godot::StringName* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:360:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWArray11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Array>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWlongR1() {
return alignof(godot::GetTypeInfo<const long&>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_List_node_base() {
return alignof(std::__detail::_List_node_base);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D9set_basisERKNS_5BasisE(godot::Node3D* __claw_this_, const struct godot::Basis* basis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:88:7
__claw_this_->set_basis(*basis);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant7has_keyERKS0_Pb(godot::Variant* __claw_this_, const godot::Variant* key, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:318:7
return __claw_this_->has_key(*key, r_valid);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWSafeRefCount() {
return alignof(godot::SafeRefCount);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35crossERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_with) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:121:25
new (__claw_result_) godot::Vector3(__claw_this_->cross(*p_with));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWOrientationR1() {
return alignof(godot::GetTypeInfo<godot::Orientation&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_builtin_method(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:91:59

godot::internal::gdextension_interface_variant_get_ptr_builtin_method = __claw_value_;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIcE6lengthEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:115:10
return __claw_this_->length();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_builtin_method() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:91:59

return godot::internal::gdextension_interface_variant_get_ptr_builtin_method;
}
}
}

namespace __gnu_cxx {
__CLAW_API void __claw__ZN9__gnu_cxx11char_traitsIcE6assignERcRKc(__gnu_cxx::char_traits<char>::char_type* __c1, const __gnu_cxx::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:125:7
__gnu_cxx::char_traits<char>::assign(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::Iterator* __claw__ZN5godot15PackedByteArray8IteratormmEv(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:229:28
return (struct godot::PackedByteArray::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::Iterator* __claw__ZN5godot18PackedVector3Array8IteratorppEv(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:150:28
return (struct godot::PackedVector3Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform3DEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Transform3D>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:101:1
new (__claw_this_) godot::TypedArray<godot::Transform3D>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalMode_claw_dtor(godot::PtrToArg<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4i5clampERKS0_S2_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_min, const struct godot::Vector4i* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:91:11
new (__claw_result_) godot::Vector4i(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectIDltERKS0_(godot::ObjectID* __claw_this_, const godot::ObjectID* p_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:50:22
return __claw_this_->operator<(*p_id);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node22is_processing_internalEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:211:7
return __claw_this_->is_processing_internal();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWRID11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::RID>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node3D::RotationEditMode>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String6rfindnERKS0_l(godot::String* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:288:10
return __claw_this_->rfindn(*what, from);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEeOEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWOrientation1() {
return sizeof(godot::PtrToArg<godot::Orientation>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1EPKDimRKS3_(std::basic_string<char32>* __claw_this_, const char32* __s, std::basic_string<char32>::size_type __n, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:619:7
new (__claw_this_) std::basic_string<char32>(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWshortP1() {
return sizeof(godot::PtrToArg<const short*>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName17is_subsequence_ofERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:280:7
return __claw_this_->is_subsequence_of(*text);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23IE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<int>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<int>>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_proc_address(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:40:47

godot::internal::gdextension_interface_get_proc_address = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::char_traits<char>::int_type __claw__ZNSt11char_traitsIcE11to_int_typeERKc(const std::char_traits<char>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:457:7
return std::char_traits<char>::to_int_type(*__c);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0char16P1() {
return alignof(godot::PtrToArg<char16*>);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node30get_process_thread_group_orderEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:207:10
return __claw_this_->get_process_thread_group_order();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEE7is_nullEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace std {
__CLAW_API std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::size_type __claw__ZNKSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8max_sizeEv(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:1037:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array9remove_atEl(godot::PackedInt32Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:112:7
__claw_this_->remove_at(index);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10DictionaryEEC1Ev(godot::TypedArray<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:108:1
new (__claw_this_) godot::TypedArray<godot::Dictionary>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Variant4TypeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Variant::Type&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEEC1ERKS6_(std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_, const std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>(*__a);
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot10Projection11determinantEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:69:8
return __claw_this_->determinant();
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot17PackedStringArray5sliceEll(godot::PackedStringArray* __claw_result_, godot::PackedStringArray* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:121:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldINS_18PropertyUsageFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<char16>::int_type __claw__ZNSt11char_traitsIDsE7not_eofERKt(const std::char_traits<char16>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:869:7
return std::char_traits<char16>::not_eof(*__c);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40hashE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::hash<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:56:13
__claw_this_->~hash();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4mLERKf(struct godot::Vector4* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:116:22
__claw_this_->operator*=(*s);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23fE23v_claw_dtor(godot::GetTypeInfo<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsEC1Ev(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:107:17
new (__claw_this_) godot::CharStringT<char16>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__common_type_impl0longWlongWlongWlong1() {
return alignof(std::__common_type_impl<long,long,long,long>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_18PropertyUsageFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PropertyUsageFlags&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_6SignalEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Signal>);
}
}

namespace godot {
__CLAW_API enum godot::MouseButton __claw__ZN5godot13VariantCasterINS_11MouseButtonEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
return godot::VariantCaster<godot::MouseButton>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedByteArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:245:9
__claw_this_->~ConstIterator();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40Object_claw_ctor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
new (__claw_this_) std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::Object*>>();
}
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot16PackedInt32Array3ptrEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:137:17
return (const int32_t*) __claw_this_->ptr();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return sizeof(std::__detail::_Insert_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC1EPKDs(std::basic_string_view<char16>* __claw_this_, const char16* __str) {
// /usr/include/c++/13/string_view:140:7
new (__claw_this_) std::basic_string_view<char16>(__str);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:242:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(__n, *__a);
}
}

namespace godot {
__CLAW_API godot::CowData<char32>::Size __claw__ZNK5godot7CowDataIDiE5countERKDi(godot::CowData<char32>* __claw_this_, const char32* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:244:7
return __claw_this_->count(*p_val);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EED1Ev(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:367:7
__claw_this_->~_Vector_base();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEaSEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWQuaternionR1() {
return sizeof(godot::PtrToArg<const godot::Quaternion&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEEC2El() {
return sizeof(godot::BitField<const godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB3absEv(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:105:22
new (__claw_result_) godot::AABB(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadMessagesR1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_18PackedVector2ArrayEE6encodeES1_Pv(godot::PackedVector2Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
godot::PtrToArg<godot::PackedVector2Array>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEpLEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIsEC2Ev() {
return alignof(std::atomic<short>);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIlE12is_lock_freeEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8NodePathE(godot::Variant* __claw_this_, const godot::NodePath* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:198:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDsED1Ev(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEED1Ev(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName5matchERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* expr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:276:7
return __claw_this_->match(*expr);
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot11CharStringTIDiEixEl(godot::CharStringT<char32>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:98:26
return (char32*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API std::char_traits<char32>::int_type __claw__ZNSt11char_traitsIDiE7not_eofERKj(const std::char_traits<char32>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:998:7
return std::char_traits<char32>::not_eof(*__c);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIlEC2Ev() {
return sizeof(std::atomic<long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_name(struct godot::MethodInfo* __claw_this_, godot::StringName* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->name = *__claw_value_;
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::Iterator* __claw__ZN5godot16PackedInt64Array8IteratorppEv(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:145:28
return (struct godot::PackedInt64Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API enum godot::MIDIMessage __claw__ZN5godot8PtrToArgINS_11MIDIMessageEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
return godot::PtrToArg<godot::MIDIMessage>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot7ClassDB11instantiateERKNS_10StringNameE(godot::Variant* __claw_result_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::Variant(godot::ClassDB::instantiate(*_class));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector3EEC1ERKNS_7VariantE(godot::TypedArray<godot::Vector3>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:94:1
new (__claw_this_) godot::TypedArray<godot::Vector3>(*p_variant);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIbE12is_lock_freeEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVariant1() {
return alignof(godot::PtrToArg<godot::Variant>);
}
}

namespace std {
__CLAW_API std::unordered_map<int,int>::size_type __claw__ZNKSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE11bucket_sizeEm(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>::size_type __n) {
// /usr/include/c++/13/bits/unordered_map.h:1029:7
return __claw_this_->bucket_size(__n);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray15decode_var_sizeElb(godot::PackedByteArray* __claw_this_, int64_t byte_offset, bool allow_objects) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:190:10
return __claw_this_->decode_var_size(byte_offset, allow_objects);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0bool1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<bool>&>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_callable_custom_create() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:169:53

return godot::internal::gdextension_interface_callable_custom_create;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector2Array7bsearchERKNS_7Vector2Eb(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:126:10
return __claw_this_->bsearch(*value, before);
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE8max_sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:659:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedByteArray1() {
return alignof(godot::GetTypeInfo<godot::PackedByteArray>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_18PackedVector3ArrayEE6encodeES1_Pv(godot::PackedVector3Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
godot::PtrToArg<godot::PackedVector3Array>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayC1Ev(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:143:2
new (__claw_this_) godot::PackedByteArray();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt8ios_baseC2Ev() {
return alignof(std::ios_base);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC2Ev() {
return alignof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayImEC1Ev(godot::TypedArray<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:85:1
new (__claw_this_) godot::TypedArray<unsigned long>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1EOS2_(std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>* __claw_this_, std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>* arg0) {
// /usr/include/c++/13/bits/stl_pair.h:198:17
new (__claw_this_) std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray13ConstIteratoreqERKS1_(struct godot::PackedStringArray::ConstIterator* __claw_this_, const struct godot::PackedStringArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:181:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<const godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<const godot::MouseButtonMask&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_16PackedInt32ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedInt32Array>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot6Signal11_native_ptrEv(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:85:36
return __claw_this_->_native_ptr();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<int>,std::equal_to<int>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23bE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<bool>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i3absEv(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:221:24
new (__claw_result_) godot::Rect2i(__claw_this_->abs());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEEC1Ev(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1940:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC2ENS4_12__sv_wrapperERKS3_() {
return sizeof(std::basic_string<char16>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node4freeEPvi(void* data, int ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
godot::Node::free(data, ptr);
}
}

namespace godot {
__CLAW_API const struct godot::Color* __claw__ZNK5godot16PackedColorArray13ConstIteratorptEv(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:171:31
return (const struct godot::Color*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWHorizontalAlignment1() {
return alignof(godot::GetTypeInfo<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API godot::CowData<char16>::Size __claw__ZNK5godot7CowDataIDsE5rfindERKDsl(godot::CowData<char16>* __claw_this_, const char16* p_val, godot::CowData<char16>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:243:7
return __claw_this_->rfind(*p_val, p_from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray13ConstIteratorC1Ev(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:185:3
new (__claw_this_) godot::PackedStringArray::ConstIterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector21R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcEC1Ev(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:246:17
new (__claw_this_) godot::CowData<char>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array8is_emptyEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:111:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot14CallableCustom8is_validEv(godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:57:15
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedColorArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedColorArray&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNKSt13__atomic_baseIsE4loadESt12memory_order(std::__atomic_base<short>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedByteArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedByteArray&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseImE23compare_exchange_strongERmmSt12memory_orderS2_(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVariantR1() {
return alignof(godot::PtrToArg<const godot::Variant&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEpLEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName13to_snake_caseEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:294:9
new (__claw_result_) godot::String(__claw_this_->to_snake_case());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIKNS_18PropertyUsageFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayC1ERKNS_5ArrayE(godot::PackedFloat32Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:103:2
new (__claw_this_) godot::PackedFloat32Array(*from);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40integral_constantE3EE23bE23Vb1_claw_dtor(std::integral_constant<bool,true>* __claw_this_) {
// /usr/include/c++/13/type_traits:62:12
__claw_this_->~integral_constant();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40PropertyHintE23v_claw_ctor(godot::GetTypeInfo<const godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::GetTypeInfo<const godot::PropertyHint>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIsEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<short>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40StringName_claw_dtor(godot::PtrToArg<const godot::StringName&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWDuplicateFlags1() {
return alignof(godot::GetTypeInfo<godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWColor() {
return alignof(godot::Color);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::Iterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorppEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:147:28
return (struct godot::List<godot::PropertyInfo>::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DC1EfRKNS_7Vector2EfS3_(struct godot::Transform2D* __claw_this_, const real_t p_rot, const godot::Size2* p_scale, const real_t p_skew, const struct godot::Vector2* p_pos) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:144:2
new (__claw_this_) godot::Transform2D(p_rot, *p_scale, p_skew, *p_pos);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiEC1Ev(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:246:17
new (__claw_this_) godot::CowData<char32>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23dE23v_claw_dtor(godot::GetTypeInfo<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWiterator0stdWrandom_access_iterator_tagWbool1() {
return sizeof(std::iterator<std::random_access_iterator_tag,bool>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_11Transform3DE(godot::Variant* __claw_this_, const struct godot::Transform3D* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:194:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB19inside_convex_shapeEPKNS_5PlaneEi(struct godot::AABB* __claw_this_, const struct godot::Plane* p_planes, int p_plane_count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:81:22
return __claw_this_->inside_convex_shape(p_planes, p_plane_count);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3cosEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:301:15
return godot::Math::cos(p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMethodFlags1() {
return sizeof(godot::GetTypeInfo<godot::MethodFlags>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5roundEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:737:14
return godot::Math::round(p_val);
}
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3cosEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:304:14
return godot::Math::cos(p_x);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedColorArrayE40SE40Iterator_claw_dtor(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:142:12
__claw_this_->~Iterator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW_List_node0godotWStringName111() {
return sizeof(std::allocator_traits<std::allocator<std::_List_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot11CharStringTIcE6resizeEl(godot::CharStringT<char>* __claw_this_, int64_t p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:94:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector2EEC1ERKNS_5ArrayE(godot::TypedArray<godot::Vector2>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:90:1
new (__claw_this_) godot::TypedArray<godot::Vector2>(*p_array);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5roundEd(double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:734:15
return godot::Math::round(p_val);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Orientation_claw_dtor(godot::VariantCaster<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__atomic_flag_base() {
return alignof(std::__atomic_flag_base);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_error(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:51:43

godot::internal::gdextension_interface_print_error = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23cE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<unsigned char>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWbinary_function0intWintWbool1() {
return sizeof(std::binary_function<int,int,bool>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_error() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:51:43

return godot::internal::gdextension_interface_print_error;
}
}
}

namespace godot {
__CLAW_API godot::CowData<char>::Size __claw__ZNK5godot7CowDataIcE5countERKc(godot::CowData<char>* __claw_this_, const char* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:244:7
return __claw_this_->count(*p_val);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return sizeof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEppEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5PlaneC1ERKNS_7Vector3ES3_(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_normal, const struct godot::Vector3* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:92:17
new (__claw_this_) godot::Plane(*p_normal, *p_point);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray13ConstIteratorneERKS1_(struct godot::PackedStringArray::ConstIterator* __claw_this_, const struct godot::PackedStringArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:182:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__do_common_type_impl_claw_ctor(struct std::__do_common_type_impl* __claw_this_) {
// /usr/include/c++/13/type_traits:2263:10
new (__claw_this_) std::__do_common_type_impl();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWCorner1() {
return sizeof(godot::GetTypeInfo<godot::Corner>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Color_claw_ctor(godot::PtrToArg<const godot::Color&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
new (__claw_this_) godot::PtrToArg<const godot::Color&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE9fetch_andEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneERKNS_7VariantE(godot::String* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:390:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String10md5_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:330:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->md5_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Callable11operatornotEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:127:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API enum godot::Vector2::Axis __claw__ZNK5godot7Vector214min_axis_indexEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:74:31
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadGroup1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_11Transform3DEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array8is_typedEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:200:7
return __claw_this_->is_typed();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_6SignalE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:427:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEppEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseINSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0ELb0EEEbEC2Ev() {
return sizeof(std::__pair_base<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4fmodEdd(double p_x, double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:224:15
return godot::Math::fmod(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::ConstIterator* __claw__ZN5godot17PackedStringArray13ConstIteratormmEv(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:176:33
return (struct godot::PackedStringArray::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWCallable1() {
return sizeof(godot::PtrToArg<godot::Callable>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ArrayEEC1ERKS1_(godot::TypedArray<godot::Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:109:1
new (__claw_this_) godot::TypedArray<godot::Array>(*p_array);
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZN5godot18PackedFloat64ArrayaSEOS0_(godot::PackedFloat64Array* __claw_this_, godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:134:22
return (godot::PackedFloat64Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRKNS_15KeyModifierMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector26bounceERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:121:10
new (__claw_result_) godot::Vector2(__claw_this_->bounce(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array7reverseEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:190:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__is_charE3EE23W_claw_dtor(std::__is_char<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:415:12
__claw_this_->~__is_char();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEppEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWcharP1() {
return sizeof(godot::PtrToArg<unsigned char*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWCallableCustomMethodPointerBase() {
return sizeof(godot::CallableCustomMethodPointerBase);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot7Wrapped16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:99:27
return (godot::StringName*) (&godot::Wrapped::get_class_static());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector3i1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEppEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Projection10get_z_nearEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:105:9
return __claw_this_->get_z_near();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_arguments(struct godot::MethodInfo* __claw_this_, std::vector<godot::PropertyInfo>* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->arguments = *__claw_value_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRKNS_15MouseButtonMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_7Vector4E(godot::Variant* __claw_this_, const struct godot::Vector4* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:188:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector36bounceERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:144:25
new (__claw_result_) godot::Vector3(__claw_this_->bounce(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZN5godot8PtrToArgINS_5PlaneEE7convertEPKv(struct godot::Plane* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
new (__claw_result_) godot::Plane(godot::PtrToArg<godot::Plane>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23lE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<unsigned long>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D10translatedERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:92:14
new (__claw_result_) godot::Transform2D(__claw_this_->translated(*p_offset));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40KeyE23v_claw_dtor(godot::GetTypeInfo<const godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_mRKS3_(std::basic_string<wchar_t>* __claw_this_, const std::basic_string<wchar_t>* __str, std::basic_string<wchar_t>::size_type __pos, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:564:7
new (__claw_this_) std::basic_string<wchar_t>(*__str, __pos, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ProjectionE23v_claw_ctor(godot::GetTypeInfo<godot::Projection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
new (__claw_this_) godot::GetTypeInfo<godot::Projection>();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIlE23compare_exchange_strongERllSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEaNEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_16PackedInt64ArrayEE6encodeES1_Pv(godot::PackedInt64Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
godot::PtrToArg<const godot::PackedInt64Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API const float* __claw__ZNK5godot18PackedFloat32Array13ConstIteratorptEv(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:169:31
return (const float*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot7Wrapped15get_instance_idEv(godot::Wrapped* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:104:11
return __claw_this_->get_instance_id();
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element4prevEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:85:27
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->prev();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot5ArrayC2EPKNS_7VariantE() {
return sizeof(godot::Array);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector23minERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:90:10
new (__claw_result_) godot::Vector2(__claw_this_->min(*p_vector2));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3::Axis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedFloat64ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS2_7ClassDB9ClassInfoEELb0EEEEC2Ev() {
return sizeof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__success_type0long1() {
return sizeof(std::__success_type<long>);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb0EEEE4sizeEv(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:647:7
return __claw_this_->size();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4fmodEff(float p_x, float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:227:14
return godot::Math::fmod(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::ConstIterator* __claw__ZN5godot18PackedVector3Array13ConstIteratormmEv(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:179:33
return (struct godot::PackedVector3Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4aSERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:151:7
__claw_this_->operator=(*p_vec4);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_new_nil() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:59:46

return godot::internal::gdextension_interface_variant_new_nil;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Mod_range_hashing() {
return sizeof(std::__detail::_Mod_range_hashing);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23bE23v_claw_dtor(godot::GetTypeInfo<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIyEC2Ev() {
return sizeof(std::atomic<unsigned long long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector2WAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector2::Axis>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE9fetch_addEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object26_gde_binding_free_callbackEPvS1_S1_(void* p_token, void* p_instance, void* p_binding) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
godot::Object::_gde_binding_free_callback(p_token, p_instance, p_binding);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>();
}
}

namespace std {
__CLAW_API std::__detail::_Node_iterator<std::pair<const int,int>,false,false>* __claw_get__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5__first(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

return (std::__detail::_Node_iterator<std::pair<const int,int>,false,false>*)&__claw_this_->first;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector3iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3i&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW_Char_types0char1() {
return alignof(__gnu_cxx::_Char_types<char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D12set_rotationERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* euler_radians) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:76:7
__claw_this_->set_rotation(*euler_radians);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_NS1_7ClassDB9ClassInfoEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return sizeof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array8IteratorC1ERKS1_(struct godot::PackedFloat32Array::Iterator* __claw_this_, const struct godot::PackedFloat32Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:159:3
new (__claw_this_) godot::PackedFloat32Array::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7VariantcvNS_7Vector3EEv(struct godot::Vector3* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:233:2
new (__claw_result_) godot::Vector3(__claw_this_->operator Vector3());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RefINS_7World3DEEC2ERKS2_() {
return alignof(godot::Ref<godot::World3D>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWCallableR1() {
return alignof(godot::PtrToArg<const godot::Callable&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEE11instantiateEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWPropertyUsageFlags11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot6StringEEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::String>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWSide1() {
return alignof(godot::VariantCaster<godot::Side>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_ctor(godot::GetTypeInfo<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
new (__claw_this_) godot::GetTypeInfo<godot::Plane>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array4sortEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:125:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_14ClockDirectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::ClockDirection&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE9fetch_andEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldINS_4Node21ProcessThreadMessagesEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node17remove_from_groupERKNS_10StringNameE(godot::Node* __claw_this_, const godot::StringName* group) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:166:7
__claw_this_->remove_from_group(*group);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC2ENS4_12__sv_wrapperERKS3_() {
return sizeof(std::basic_string<wchar_t>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE9fetch_addEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEmmEi(std::__atomic_base<int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE9fetch_xorElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot16PackedColorArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedColorArray);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ab_claw_ctor(godot::PtrToArg<bool*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
new (__claw_this_) godot::PtrToArg<bool*>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Rect2i_claw_dtor(godot::PtrToArg<const godot::Rect2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE9fetch_subEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray7reverseEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:120:7
__claw_this_->reverse();
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8internal23EngineClassRegistrationINS_6ObjectEEC2Ev() {
return alignof(godot::internal::EngineClassRegistration<godot::Object>);
}
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::Object*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE11bucket_sizeEm(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>::size_type __n) {
// /usr/include/c++/13/bits/unordered_map.h:1029:7
return __claw_this_->bucket_size(__n);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_15MouseButtonMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MouseButtonMask&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE9fetch_xorEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWJoyAxis1() {
return sizeof(godot::GetTypeInfo<godot::JoyAxis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedFloat32ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEmmEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40StringE23v_claw_dtor(godot::GetTypeInfo<const godot::String&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRKNS_15KeyModifierMaskEEC2El() {
return sizeof(godot::BitField<const godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVerticalAlignmentR1() {
return alignof(godot::GetTypeInfo<const godot::VerticalAlignment&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2WAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector3_claw_dtor(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:44:21
__claw_this_->~Vector3();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_18PackedVector3ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedVector3Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot5Rect27get_endEv(struct godot::Vector2* __claw_result_, struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:357:25
new (__claw_result_) godot::Vector2(__claw_this_->get_end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_18PackedVector2ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedVector2Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23cE23v_claw_dtor(godot::GetTypeInfo<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMouseButton1() {
return alignof(godot::GetTypeInfo<godot::MouseButton>);
}
}

__CLAW_API int __claw__ZZ25pthread_attr_setstacksizeE6(pthread_attr_t* __attr, size_t __stacksize) {
// /usr/include/pthread.h:373:12
return pthread_attr_setstacksize(__attr, __stacksize);
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>* __l, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:265:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*__l, __n, *__a);
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZN5godot16PackedInt32Array9duplicateEv(godot::PackedInt32Array* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:123:19
new (__claw_result_) godot::PackedInt32Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__truth_typeE3EE23Vb1_claw_ctor(std::__truth_type<true>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:81:12
new (__claw_this_) std::__truth_type<true>();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIsE21compare_exchange_weakERssSt12memory_orderS2_(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot16ClassDBSingleton16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
return (godot::StringName*) (&godot::ClassDBSingleton::get_class_static());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12PropertyInfoC1ENS_7Variant4TypeERKNS_10StringNameENS_12PropertyHintERKNS_6StringEjS5_(struct godot::PropertyInfo* __claw_this_, enum godot::Variant::Type p_type, const godot::StringName* p_name, enum godot::PropertyHint p_hint, const godot::String* p_hint_string, uint32_t p_usage, const godot::StringName* p_class_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:56:2
new (__claw_this_) godot::PropertyInfo(p_type, *p_name, p_hint, *p_hint_string, p_usage, *p_class_name);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>();
}
}

namespace godot {
__CLAW_API bool __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40is_validE231(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::BitField<godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldINS_11MethodFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodDefinition_args(struct godot::MethodDefinition* __claw_this_, std::list<godot::StringName>* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:66:8

__claw_this_->args = *__claw_value_;
}
}

__CLAW_API unsigned long long __claw_sizeof___locale_struct() {
return sizeof(__locale_struct);
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEE7is_nullEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIxE12is_lock_freeEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1s_claw_ctor(godot::PtrToArg<const unsigned short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
new (__claw_this_) godot::PtrToArg<const unsigned short*>();
}
}

namespace godot {
__CLAW_API godot::RID* __claw__ZN5godot3RIDaSERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:88:7
return (godot::RID*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot10MethodBind20get_default_argumentEi(godot::Variant* __claw_result_, godot::MethodBind* __claw_this_, int p_arg) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:90:25
new (__claw_result_) godot::Variant(__claw_this_->get_default_argument(p_arg));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratordeEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:143:21
return (struct godot::PropertyInfo*) (&__claw_this_->operator*());
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE9fetch_xorEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis14orthonormalizeEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:214:7
__claw_this_->orthonormalize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedByteArrayWIterator() {
return sizeof(godot::PackedByteArray::Iterator);
}
}

__CLAW_API int __claw__ZZ25pthread_attr_getstacksizeE6(const pthread_attr_t* __attr, size_t* __stacksize) {
// /usr/include/pthread.h:366:12
return pthread_attr_getstacksize(__attr, __stacksize);
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_7Vector3E(godot::Variant* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:185:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40EulerOrderE23v_claw_dtor(godot::GetTypeInfo<const godot::EulerOrder&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2C1Ev(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:178:17
new (__claw_this_) godot::Vector2();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1EmRKS1_RKS2_(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>::size_type __n, const std::vector<godot::Variant>::value_type* __value, const std::vector<godot::Variant>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:569:7
new (__claw_this_) std::vector<godot::Variant>(__n, *__value, *__a);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0godotWStringName1WgodotWStringName1() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<godot::StringName>,godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMouseButtonMaskR1() {
return sizeof(godot::GetTypeInfo<const godot::MouseButtonMask&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEaNEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40ProjectionE40EE40Planes_claw_dtor(godot::PtrToArg<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection14create_frustumEffffff(struct godot::Projection* __claw_result_, real_t p_left, real_t p_right, real_t p_bottom, real_t p_top, real_t p_near, real_t p_far) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:92:20
new (__claw_result_) godot::Projection(godot::Projection::create_frustum(p_left, p_right, p_bottom, p_top, p_near, p_far));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot7VariantcvNS_5BasisEEv(struct godot::Basis* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:241:2
new (__claw_result_) godot::Basis(__claw_this_->operator Basis());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWQuaternion() {
return sizeof(godot::Quaternion);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array12append_arrayERKS0_(godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:111:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0unsignedWshort1() {
return sizeof(godot::GetTypeInfo<unsigned short>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array4sortEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:121:7
__claw_this_->sort();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE9fetch_andEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWMouseButton1() {
return sizeof(godot::PtrToArg<godot::MouseButton>);
}
}

namespace godot {
__CLAW_API godot::Signal* __claw__ZN5godot8PtrToArgINS_6SignalEE7convertEPKv(godot::Signal* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
new (__claw_result_) godot::Signal(godot::PtrToArg<godot::Signal>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE9fetch_addEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D14affine_inverseEv(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:66:14
new (__claw_result_) godot::Transform2D(__claw_this_->affine_inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D19rotate_object_localERKNS_7Vector3Ed(godot::Node3D* __claw_this_, const struct godot::Vector3* axis, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:129:7
__claw_this_->rotate_object_local(*axis, angle);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4WAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector4::Axis&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedColorArray9push_backERKNS_5ColorE(godot::PackedColorArray* __claw_this_, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:111:7
return __claw_this_->push_back(*value);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot16ClassDBSingleton18class_get_propertyEPNS_6ObjectERKNS_10StringNameE(godot::Variant* __claw_result_, godot::ClassDBSingleton* __claw_this_, godot::Object* object, const godot::StringName* property) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:68:10
new (__claw_result_) godot::Variant(__claw_this_->class_get_property(object, *property));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_value_base0stdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return sizeof(std::__detail::_Hash_node_value_base<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1Ev(std::basic_string<char32>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:522:7
new (__claw_this_) std::basic_string<char32>();
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZN5godot8Callable5bindvERKNS_5ArrayE(godot::Callable* __claw_result_, godot::Callable* __claw_this_, const godot::Array* arguments) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:113:11
new (__claw_result_) godot::Callable(__claw_this_->bindv(*arguments));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_7Vector2E(godot::Variant* __claw_this_, const struct godot::Vector2* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:181:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String12get_basenameEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:321:9
new (__claw_result_) godot::String(__claw_this_->get_basename());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math11snap_scalarEfff(float p_offset, float p_step, float p_target) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:798:14
return godot::Math::snap_scalar(p_offset, p_step, p_target);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_float32_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:137:64

return godot::internal::gdextension_interface_packed_float32_array_operator_index;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedStringArray_claw_ctor(godot::PtrToArg<const godot::PackedStringArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
new (__claw_this_) godot::PtrToArg<const godot::PackedStringArray&>();
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot8Vector2iixEi(struct godot::Vector2i* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:65:26
return (int32_t*) (&__claw_this_->operator[](p_idx));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_18PropertyUsageFlagsEEC1El(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::PropertyUsageFlags&>(p_value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat64ArrayE40SE40Iterator_claw_dtor(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:140:12
__claw_this_->~Iterator();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_7Variant4TypeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Variant::Type&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEeOEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIjED1Ev(std::atomic<unsigned int>* __claw_this_) {
// /usr/include/c++/13/atomic:851:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i12intersectionERKS0_(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:93:16
new (__claw_result_) godot::Rect2i(__claw_this_->intersection(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_15PackedByteArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedByteArray>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVKSt13__atomic_baseIhEcvhEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator unsigned char();
}
}

namespace godot {
__CLAW_API const real_t* __claw__ZNK5godot7Vector2ixEi(struct godot::Vector2* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:69:31
return (real_t*) (&__claw_this_->operator[](p_idx));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEC1Ev(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref<godot::Tween>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15MouseButtonMaskEEC1El(godot::BitField<const godot::MouseButtonMask&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::MouseButtonMask&>(p_value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW_Rb_tree_node0godotWStringName11WgodotWStringName1() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::_Rb_tree_node<godot::StringName>>,godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection8set_zeroEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:71:7
__claw_this_->set_zero();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23i_claw_ctor(godot::PtrToArg<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
new (__claw_this_) godot::PtrToArg<unsigned int>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName5rightEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:302:9
new (__claw_result_) godot::String(__claw_this_->right(length));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot6String7bigramsEv(godot::PackedStringArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:295:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->bigrams());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot10Projection15jitter_offsetedERKNS_7Vector2E(struct godot::Projection* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Vector2* p_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:98:13
new (__claw_result_) godot::Projection(__claw_this_->jitter_offseted(*p_offset));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_18PropertyUsageFlagsEE8set_flagES3_(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_, const enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

__CLAW_API int __claw__ZZ21pthread_setcanceltypeE6(int __type, int* __oldtype) {
// /usr/include/pthread.h:525:12
return pthread_setcanceltype(__type, __oldtype);
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2WAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector2::Axis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIKNS_18PropertyUsageFlagsEEC2El() {
return alignof(godot::BitField<const godot::PropertyUsageFlags>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3WAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector3::Axis&>);
}
}

namespace std {
__CLAW_API std::size_t __claw__ZNKSt9type_info9hash_codeEv(std::type_info* __claw_this_) {
// /usr/include/c++/13/typeinfo:119:12
return __claw_this_->hash_code();
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::Iterator* __claw__ZN5godot16PackedInt32Array8IteratormmEv(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:149:28
return (struct godot::PackedInt32Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11MouseButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MouseButton&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1ESt16initializer_listIS1_ERKS2_(std::vector<godot::Variant>* __claw_this_, std::initializer_list<godot::Variant>* __l, const std::vector<godot::Variant>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:678:7
new (__claw_this_) std::vector<godot::Variant>(*__l, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWNodeWProcessThreadGroup1() {
return alignof(godot::VariantCaster<godot::Node::ProcessThreadGroup>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt5ctypeIwEC1EP15__locale_structm(std::ctype<wchar_t>* __claw_this_, std::__c_locale __cloc, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1238:7
new (__claw_this_) std::ctype<wchar_t>(__cloc, __refs);
}
}

namespace std {
__CLAW_API std::__new_allocator<godot::StringName>::size_type __claw__ZNKSt15__new_allocatorIN5godot10StringNameEE8max_sizeEv(std::__new_allocator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEE11instantiateEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedFloat64Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:114:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat64Array>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D6invertEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:62:7
__claw_this_->invert();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse111() {
return sizeof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6lstripERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:305:9
new (__claw_result_) godot::String(__claw_this_->lstrip(*chars));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot16PackedColorArray8IteratordeEv(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:143:25
return (struct godot::Color*) (&__claw_this_->operator*());
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Mod_range_hashing() {
return alignof(std::__detail::_Mod_range_hashing);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_18PropertyUsageFlagsEEC1El(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::PropertyUsageFlags>(p_value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_call_static(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:62:50

godot::internal::gdextension_interface_variant_call_static = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDB_claw_ctor(godot::ClassDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:83:7
new (__claw_this_) godot::ClassDB();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIDiEC2Ev() {
return sizeof(std::__new_allocator<char32>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMIDIMessage1() {
return sizeof(godot::GetTypeInfo<const godot::MIDIMessage>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDiE23compare_exchange_strongERDiDiSt12memory_orderS2_(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector3iR1() {
return alignof(godot::PtrToArg<const godot::Vector3i&>);
}
}

namespace std {
__CLAW_API std::initializer_list<double>::size_type __claw__ZNKSt16initializer_listIdE4sizeEv(std::initializer_list<double>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector2WAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector2::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector21R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC2Ev() {
return alignof(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API const uint8_t** __claw__ZN5godot8PtrToArgIPPKhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
return (const uint8_t**) godot::PtrToArg<const unsigned char**>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6resizeEmDi(std::basic_string<char32>* __claw_this_, std::basic_string<char32>::size_type __n, char32 __c) {
// /usr/include/c++/13/bits/basic_string.h:1099:7
__claw_this_->resize(__n, __c);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot8Vector4icvNS_7Vector4EEv(struct godot::Vector4* __claw_result_, struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:123:2
new (__claw_result_) godot::Vector4(__claw_this_->operator Vector4());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector3ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:170:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot18PackedVector2ArrayixEl(godot::PackedVector2Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:141:11
return (struct godot::Vector2*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40InlineAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::InlineAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int64_t* __claw__ZN5godot8PtrToArgIPlE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
return (int64_t*) godot::PtrToArg<long*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementdeEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:104:21
return (struct godot::PropertyInfo*) (&__claw_this_->operator*());
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_get_instance_binding() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:161:57

return godot::internal::gdextension_interface_object_get_instance_binding;
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_plus_eq_wcstr() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:124:58

return godot::internal::gdextension_interface_string_operator_plus_eq_wcstr;
}
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector311distance_toERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:132:24
return __claw_this_->distance_to(*p_to);
}
}

namespace godot {
__CLAW_API uint8_t* __claw__ZN5godot8PtrToArgIPhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
return (uint8_t*) godot::PtrToArg<unsigned char*>::convert(p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_set_instance_binding() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:162:57

return godot::internal::gdextension_interface_object_set_instance_binding;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Prime_rehash_policy() {
return alignof(std::__detail::_Prime_rehash_policy);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6vectorIN5godot10StringNameESaIS1_EEC2Ev() {
return alignof(std::vector<godot::StringName>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE8fetch_orExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_12PropertyHintEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PropertyHint>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6rstripERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:306:9
new (__claw_result_) godot::String(__claw_this_->rstrip(*chars));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23iE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<unsigned int>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot6Node3D9get_basisEv(struct godot::Basis* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:89:8
new (__claw_result_) godot::Basis(__claw_this_->get_basis());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EOS4_(std::basic_string<wchar_t>* __claw_this_, std::basic_string<wchar_t>* __str) {
// /usr/include/c++/13/bits/basic_string.h:677:7
new (__claw_this_) std::basic_string<wchar_t>(std::move(*__str));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11MIDIMessageEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MIDIMessage>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector213plane_projectEfRKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t p_d, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:110:10
new (__claw_result_) godot::Vector2(__claw_this_->plane_project(p_d, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::pair<const int,int>>>::size_type __claw__ZNSt16allocator_traitsISaISt4pairIKiiEEE8max_sizeERKS3_(const std::allocator_traits<std::allocator<std::pair<const int,int>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::pair<const int,int>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot12PropertyInfoEEC1Ev(std::allocator<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<godot::PropertyInfo>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Rect2_claw_dtor(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:43:21
__claw_this_->~Rect2();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWDuplicateFlags1() {
return alignof(godot::GetTypeInfo<const godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8CallableneERKNS_7VariantE(godot::Callable* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:126:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_ref_get_object(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:171:45

godot::internal::gdextension_interface_ref_get_object = __claw_value_;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Select1stW__1st_type0stdWpair0constWintWint11() {
return alignof(std::__detail::_Select1st::__1st_type<std::pair<const int,int>>);
}
}
}

namespace godot {
__CLAW_API const std::vector<godot::Variant>* __claw__ZNK5godot10MethodBind21get_default_argumentsEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:79:45
return (std::vector<godot::Variant>*) (&__claw_this_->get_default_arguments());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_5Rect2EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1EOSJ_RKS7_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __ht, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::allocator_type* __a) {
// /usr/include/c++/13/bits/hashtable.h:549:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(std::move(*__ht), *__a);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Quaternion6lengthEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:59:9
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API uint64_t* __claw__ZN5godot8PtrToArgIPmE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
return (uint64_t*) godot::PtrToArg<unsigned long*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE8fetch_orEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_7Vector4EE6encodeES3_Pv(const struct godot::Vector4* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
godot::PtrToArg<const godot::Vector4&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot5ArrayC2EPKNS_7VariantE() {
return alignof(godot::Array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWAABB1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Node_insert_return0stdW__detailW_Node_iterator0stdWpair0constWgodotWStringNameWgodotWMethodBindP1WfalseWfalse1WstdW_Node_handle0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1111() {
return sizeof(std::_Node_insert_return<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,std::_Node_handle<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIN5godot12PropertyInfoEEC2Ev() {
return sizeof(std::__new_allocator<godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1Ev(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:264:2
new (__claw_this_) godot::String();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedVector2Array_claw_ctor(godot::PtrToArg<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
new (__claw_this_) godot::PtrToArg<godot::PackedVector2Array>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIlEC2EPKlm() {
return sizeof(std::initializer_list<long>);
}
}

namespace godot {
__CLAW_API uint16_t* __claw__ZN5godot8PtrToArgIPtE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
return (uint16_t*) godot::PtrToArg<unsigned short*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array3hasERKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:121:7
return __claw_this_->has(*value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Transform3D_claw_dtor(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:42:21
__claw_this_->~Transform3D();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRNS_15MouseButtonMaskEE8has_flagES2_(godot::BitField<godot::MouseButtonMask&>* __claw_this_, enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector2Array4findERKNS_7Vector2El(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:128:10
return __claw_this_->find(*value, from);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_18PackedFloat32ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedFloat32Array>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:151:51

godot::internal::gdextension_interface_array_operator_index = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWunary_function0godotWStringNameWgodotWStringName1() {
return alignof(std::unary_function<godot::StringName,godot::StringName>);
}
}

namespace godot {
__CLAW_API uint32_t* __claw__ZN5godot8PtrToArgIPjE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
return (uint32_t*) godot::PtrToArg<unsigned int*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23Vb0_claw_ctor(std::__type_identity<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEoREi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API double* __claw__ZN5godot8PtrToArgIPdE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
return (double*) godot::PtrToArg<double*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot6String5splitERKS0_bl(godot::PackedStringArray* __claw_result_, godot::String* __claw_this_, const godot::String* delimiter, bool allow_empty, int64_t maxsplit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:308:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->split(*delimiter, allow_empty, maxsplit));
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math17cubic_interpolateEddddd(double p_from, double p_to, double p_pre, double p_post, double p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:417:15
return godot::Math::cubic_interpolate(p_from, p_to, p_pre, p_post, p_weight);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDsEC1Ev(std::__new_allocator<char16>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<char16>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWEulerOrderR1() {
return sizeof(godot::GetTypeInfo<const godot::EulerOrder&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D5scaleERKNS_7Vector3E(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:61:7
__claw_this_->scale(*p_scale);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Node_handleIN5godot10StringNameES1_SaISt13_Rb_tree_nodeIS1_EEEC2Ev() {
return sizeof(std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEpLEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEaNEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_dictionary_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:155:56

godot::internal::gdextension_interface_dictionary_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API float* __claw__ZN5godot8PtrToArgIPfE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
return (float*) godot::PtrToArg<float*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot8PtrToArgIPiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
return (int32_t*) godot::PtrToArg<int*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2ArrayeqERKNS_7VariantE(godot::PackedVector2Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:131:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5ErrorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Error&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot9CharProxyIwEC2ERKlRNS_7CowDataIwEE() {
return alignof(godot::CharProxy<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40JoyAxisE23v_claw_ctor(godot::GetTypeInfo<const godot::JoyAxis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::GetTypeInfo<const godot::JoyAxis&>();
}
}

namespace godot {
__CLAW_API bool* __claw__ZN5godot8PtrToArgIPbE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
return (bool*) godot::PtrToArg<bool*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP111() {
return alignof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::Object*>>>);
}
}

namespace godot {
__CLAW_API char* __claw__ZN5godot8PtrToArgIPcE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
return (char*) godot::PtrToArg<char*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object22can_translate_messagesEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:129:7
return __claw_this_->can_translate_messages();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWMouseButtonMaskR11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>);
}
}

namespace godot {
__CLAW_API int8_t* __claw__ZN5godot8PtrToArgIPaE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
return (int8_t*) godot::PtrToArg<char*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array4sortEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:121:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API enum godot::Vector2::Axis __claw__ZNK5godot7Vector214max_axis_indexEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:78:31
return __claw_this_->max_axis_index();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10RefCounted26_gde_binding_free_callbackEPvS1_S1_(void* p_token, void* p_instance, void* p_binding) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
godot::RefCounted::_gde_binding_free_callback(p_token, p_instance, p_binding);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot8PtrToArgIPvE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
return (void*) godot::PtrToArg<void*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1ERKS_(std::locale* __claw_this_, const std::locale* __other) {
// /usr/include/c++/13/bits/locale_classes.h:130:5
new (__claw_this_) std::locale(*__other);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIlEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<long>>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_NS1_7ClassDB9ClassInfoEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return alignof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40MouseButton_claw_ctor(godot::VariantCaster<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::VariantCaster<godot::MouseButton>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_16PackedInt64ArrayEE6encodeES1_Pv(godot::PackedInt64Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
godot::PtrToArg<godot::PackedInt64Array>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaternionplERKS0_(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* q2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:109:28
new (__claw_result_) godot::Quaternion(__claw_this_->operator+(*q2));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_cast_to(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:166:45

godot::internal::gdextension_interface_object_cast_to = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>::size_type __claw__ZNKSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEE8max_sizeEv(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWRect2R1() {
return sizeof(godot::PtrToArg<const godot::Rect2&>);
}
}

namespace std {
__CLAW_API bool __claw__ZSt33atomic_flag_test_and_set_explicitPVSt11atomic_flagSt12memory_order(struct std::atomic_flag* __a, std::memory_order __m) {
// /usr/include/c++/13/atomic:1213:3
return std::atomic_flag_test_and_set_explicit(__a, __m);
}
}

namespace godot {
__CLAW_API int16_t* __claw__ZN5godot8PtrToArgIPsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
return (int16_t*) godot::PtrToArg<short*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_11MethodFlagsEE8set_flagES1_(godot::BitField<godot::MethodFlags>* __claw_this_, enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API wchar_t* __claw__ZN5godot8PtrToArgIPwE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
return (wchar_t*) godot::PtrToArg<wchar_t*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EED1Ev(std::list<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:903:7
__claw_this_->~list();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_value_base0stdWpair0constWintWint11() {
return sizeof(std::__detail::_Hash_node_value_base<std::pair<const int,int>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0doubleP1() {
return sizeof(godot::PtrToArg<double*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23SE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<short>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<short>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_12PropertyHintEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PropertyHint&>::get_class_info());
return __claw_result_;
}
}

__CLAW_API void __claw_set___locale_struct___ctype_b(struct __locale_struct* __claw_this_, const unsigned short* __claw_value_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

__claw_this_->__ctype_b = __claw_value_;
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5Rect2EEC1ERKNS_5ArrayE(godot::TypedArray<godot::Rect2>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:92:1
new (__claw_this_) godot::TypedArray<godot::Rect2>(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVKSt13__atomic_baseIxE4loadESt12memory_order(std::__atomic_base<long long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt64ArrayE40SE40Iterator_claw_dtor(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:140:12
__claw_this_->~Iterator();
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_6ObjectEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE4sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:647:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<const godot::MethodFlags>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_8Vector3iE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector3i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:409:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Corner_claw_ctor(godot::PtrToArg<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::PtrToArg<godot::Corner>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWMethodBind() {
return alignof(godot::MethodBind);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_18PackedVector3ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedVector3Array>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1q_claw_dtor(godot::PtrToArg<const char16*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_4AABBE(godot::Variant* __claw_this_, const struct godot::AABB* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:192:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_18PackedVector2ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedVector2Array>::get_class_info());
return __claw_result_;
}
}

__CLAW_API int __claw__ZN14__iseqsig_typeIfE6__callEff(float __x, float __y) {
// /usr/include/math.h:1369:14
return __iseqsig_type<float>::__call(__x, __y);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40NodePath_claw_dtor(godot::TypedArray<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:104:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaternionmlERKS0_(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:90:13
new (__claw_result_) godot::Quaternion(__claw_this_->operator*(*p_q));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::RID* __claw__ZN5godot8PtrToArgINS_3RIDEE7convertEPKv(godot::RID* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
new (__claw_result_) godot::RID(godot::PtrToArg<godot::RID>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZN5godot18PackedFloat64Array9duplicateEv(godot::PackedFloat64Array* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:123:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZN5godot8PtrToArgINS_18PackedVector3ArrayEE7convertEPKv(godot::PackedVector3Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
new (__claw_result_) godot::PackedVector3Array(godot::PtrToArg<godot::PackedVector3Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_editor_add_plugin(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:189:48

godot::internal::gdextension_interface_editor_add_plugin = __claw_value_;
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_to_wide_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:118:50

godot::internal::gdextension_interface_string_to_wide_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4C1Effff(struct godot::Vector4* __claw_this_, real_t p_x, real_t p_y, real_t p_z, real_t p_w) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:137:17
new (__claw_this_) godot::Vector4(p_x, p_y, p_z, p_w);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_vector2_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:147:64

return godot::internal::gdextension_interface_packed_vector2_array_operator_index;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8to_lowerEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:313:9
new (__claw_result_) godot::String(__claw_this_->to_lower());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName19naturalnocasecmp_toERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:264:10
return __claw_this_->naturalnocasecmp_to(*to);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node15is_greater_thanEPS0_(godot::Node* __claw_this_, godot::Node* node) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:162:7
return __claw_this_->is_greater_than(node);
}
}

namespace godot {
__CLAW_API const int64_t* __claw__ZNK5godot16PackedInt64ArrayixEl(godot::PackedInt64Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:135:17
return (int64_t*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDiED1Ev(std::atomic<char32>* __claw_this_) {
// /usr/include/c++/13/atomic:1039:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot4AABB12get_positionEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:59:17
return (struct godot::Vector3*) (&__claw_this_->get_position());
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node35get_scene_instance_load_placeholderEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:221:7
return __claw_this_->get_scene_instance_load_placeholder();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC2Ev() {
return alignof(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<const godot::PropertyUsageFlags&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWHorizontalAlignmentR1() {
return alignof(godot::GetTypeInfo<const godot::HorizontalAlignment&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_s16Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:198:7
__claw_this_->encode_s16(byte_offset, value);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectID8is_validEv(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:43:22
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_ctor(godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>();
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3DmlERKS0_(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:107:14
new (__claw_result_) godot::Transform3D(__claw_this_->operator*(*p_transform));
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector25crossERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:105:9
return __claw_this_->cross(*p_other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40OrientationE23v_claw_ctor(godot::GetTypeInfo<const godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<const godot::Orientation>();
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot18PackedVector2ArrayplERKS0_(godot::PackedVector2Array* __claw_result_, godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:137:21
new (__claw_result_) godot::PackedVector2Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot18PackedVector3ArrayplERKS0_(godot::PackedVector3Array* __claw_result_, godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:137:21
new (__claw_result_) godot::PackedVector3Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_6SignalEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Signal>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot5Color13get_luminanceEv(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:100:23
return __claw_this_->get_luminance();
}
}

namespace std {
__CLAW_API std::__ctype_abstract_base<wchar_t>::char_type __claw__ZNKSt21__ctype_abstract_baseIwE7tolowerEw(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::__ctype_abstract_base<wchar_t>::char_type __c) {
// /usr/include/c++/13/bits/locale_facets.h:264:7
return __claw_this_->tolower(__c);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_11MethodFlagsEE8set_flagES3_(godot::BitField<const godot::MethodFlags&>* __claw_this_, const enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray7reverseEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:120:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEppEi(std::__atomic_base<long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldINS_11MethodFlagsEE8has_flagES1_(godot::BitField<godot::MethodFlags>* __claw_this_, enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color14srgb_to_linearEv(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:175:23
new (__claw_result_) godot::Color(__claw_this_->srgb_to_linear());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node12remove_childEPS0_(godot::Node* __claw_this_, godot::Node* node) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:146:7
__claw_this_->remove_child(node);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEC1Ev(godot::TypedArray<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:111:1
new (__claw_this_) godot::TypedArray<godot::PackedInt32Array>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedFloat64ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedFloat64Array&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ColorEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Color>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:102:1
new (__claw_this_) godot::TypedArray<godot::Color>(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWKeyModifierMask11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40unordered_mapE3EE23E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfoE23E24E40NE40stdE40SE40hashE3EE23S0_E23E24E40NE40stdE40SE40equal_toE3EE23S0_E23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231S0_E23S1__claw_dtor(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:109:11
__claw_this_->~unordered_map();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40MouseButton_claw_ctor(godot::PtrToArg<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::PtrToArg<godot::MouseButton>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0long1() {
return alignof(godot::GetTypeInfo<long>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_16PackedInt64ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedInt64Array>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_7Vector2EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEppEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6resizeEm(std::basic_string<char32>* __claw_this_, std::basic_string<char32>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:1113:7
__claw_this_->resize(__n);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicItEC2Ev() {
return sizeof(std::atomic<unsigned short>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_6ObjectEEEC1ERKS6_(std::allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_, const std::allocator<std::pair<const godot::StringName,godot::Object*>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::Object*>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3::Axis>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15MouseButtonMaskEE8set_flagES1_(godot::BitField<const godot::MouseButtonMask>* __claw_this_, const enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRKNS_11MethodFlagsEEC2El() {
return sizeof(godot::BitField<const godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEEltERKS2_(godot::Ref<godot::World3D>* __claw_this_, const godot::Ref<godot::World3D>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:81:22
return __claw_this_->operator<(*p_r);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_get_method_bind() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:177:53

return godot::internal::gdextension_interface_classdb_get_method_bind;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mm(std::basic_string<char>* __claw_this_, const std::basic_string<char>* __str, std::basic_string<char>::size_type __pos, std::basic_string<char>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:581:7
new (__claw_this_) std::basic_string<char>(*__str, __pos, __n);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVariantWType1() {
return sizeof(godot::VariantCaster<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API int64_t* __claw__ZNK5godot16PackedInt64Array8IteratordeEv(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:141:27
return (int64_t*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API enum godot::Node::InternalMode __claw__ZN5godot13VariantCasterINS_4Node12InternalModeEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
return godot::VariantCaster<godot::Node::InternalMode>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWcharR1() {
return sizeof(godot::GetTypeInfo<const char&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1f_claw_dtor(godot::PtrToArg<const float*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::Iterator* __claw__ZN5godot18PackedVector2Array3endEv(struct godot::PackedVector2Array::Iterator* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:198:26
new (__claw_result_) godot::PackedVector2Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RefINS_7World3DEEC2ERKS2_() {
return sizeof(godot::Ref<godot::World3D>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIwEC2Ev() {
return alignof(std::__new_allocator<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKiiEEC1ERKS3_(std::__new_allocator<std::pair<const int,int>>* __claw_this_, const std::__new_allocator<std::pair<const int,int>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::pair<const int,int>>(*arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEmmEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API std::size_t __claw__ZNSt11char_traitsIcE6lengthEPKc(const std::char_traits<char>::char_type* __s) {
// /usr/include/c++/13/bits/char_traits.h:393:7
return std::char_traits<char>::length(__s);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D16set_global_basisERKNS_5BasisE(godot::Node3D* __claw_this_, const struct godot::Basis* basis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:94:7
__claw_this_->set_global_basis(*basis);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEoREt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40NodePathE40SE40_MethodBindings_claw_dtor(struct godot::NodePath::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:54:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_8CallableEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2idVERKi(struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:101:7
__claw_this_->operator/=(*rvalue);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE19exchange_if_greaterEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:111:20
return __claw_this_->exchange_if_greater(p_value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Rect2_claw_ctor(godot::PtrToArg<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
new (__claw_this_) godot::PtrToArg<godot::Rect2>();
}
}

namespace godot {
__CLAW_API enum godot::Key __claw__ZN5godot13VariantCasterINS_3KeyEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
return godot::VariantCaster<godot::Key>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_ctor(godot::GetTypeInfo<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2i>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40VariantE40EE40Type_claw_ctor(godot::PtrToArg<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::PtrToArg<godot::Variant::Type>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMask_claw_ctor(godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10error_codeC1ERKS_(std::error_code* __claw_this_, const std::error_code* arg0) {
// /usr/include/c++/13/system_error:245:5
new (__claw_this_) std::error_code(*arg0);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40equal_toE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::equal_to<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::equal_to<godot::StringName>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::HorizontalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<const godot::HorizontalAlignment&>();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIaE12is_lock_freeEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVerticalAlignment1() {
return sizeof(godot::GetTypeInfo<const godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWMouseButtonMask11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessModeR1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessMode&>);
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::Iterator* __claw__ZN5godot15PackedByteArray3endEv(struct godot::PackedByteArray::Iterator* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:273:26
new (__claw_result_) godot::PackedByteArray::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_16PackedInt32ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedInt32Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector214is_zero_approxEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:125:7
return __claw_this_->is_zero_approx();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWBasisR1() {
return sizeof(godot::GetTypeInfo<const godot::Basis&>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_16PackedColorArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:438:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEmmEi(std::__atomic_base<unsigned short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Callable_claw_dtor(godot::TypedArray<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:106:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis18make_scale_uniformEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:108:7
__claw_this_->make_scale_uniform();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName15to_ascii_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:352:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_ascii_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_5BasisE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Basis* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:382:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_15PackedByteArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedByteArray>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKiiELb0EEEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>, false>>>);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5ColorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Color&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node24set_unique_name_in_ownerEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:235:7
__claw_this_->set_unique_name_in_owner(enable);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEC2Ev() {
return alignof(std::__pair_base<const godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE8fetch_orEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot6String8to_floatEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:357:9
return __claw_this_->to_float();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2iC1ERKNS_8Vector2iES3_(struct godot::Rect2i* __claw_this_, const godot::Point2i* p_pos, const godot::Size2i* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:241:2
new (__claw_this_) godot::Rect2i(*p_pos, *p_size);
}
}

namespace std {
__CLAW_API std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>::size_type __claw__ZNKSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEE8max_sizeEv(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math10smoothstepEddd(double p_from, double p_to, double p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:697:15
return godot::Math::smoothstep(p_from, p_to, p_weight);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEpLEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return sizeof(std::unordered_map<godot::StringName,godot::Object*>);
}
}

namespace godot {
__CLAW_API double* __claw__ZNK5godot18PackedFloat64Array8IteratorptEv(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:144:26
return (double*) __claw_this_->operator->();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEaSEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKDiE6encodeES2_Pv(const char32* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
godot::PtrToArg<const char32*>::encode(p_var, p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_placeholder_script_instance_create(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:174:64

godot::internal::gdextension_interface_placeholder_script_instance_create = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWErrorR1() {
return alignof(godot::GetTypeInfo<const godot::Error&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIsEC2Ev() {
return sizeof(std::__atomic_base<short>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIiEC1ERKNS_5ArrayE(godot::TypedArray<int>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:84:1
new (__claw_this_) godot::TypedArray<int>(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::Iterator* __claw__ZN5godot16PackedInt32Array3endEv(struct godot::PackedInt32Array::Iterator* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:193:26
new (__claw_result_) godot::PackedInt32Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const float* __claw__ZNK5godot5ColorixEi(struct godot::Color* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:66:30
return (float*) (&__claw_this_->operator[](p_idx));
}
}

namespace std {
__CLAW_API std::char_traits<char32>::char_type __claw__ZNSt11char_traitsIDiE12to_char_typeERKj(const std::char_traits<char32>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:981:7
return std::char_traits<char32>::to_char_type(*__c);
}
}

namespace std {
__CLAW_API std::char_traits<char16>::char_type __claw__ZNSt11char_traitsIDsE12to_char_typeERKt(const std::char_traits<char16>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:852:7
return std::char_traits<char16>::to_char_type(*__c);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15error_conditionC1EiRKNSt3_V214error_categoryE(std::error_condition* __claw_this_, int __v, const std::error_category* __cat) {
// /usr/include/c++/13/system_error:366:5
new (__claw_this_) std::error_condition(__v, *__cat);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedFloat64ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedFloat64Array&>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIDiE6lengthEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:115:10
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40VariantE23v_claw_ctor(godot::GetTypeInfo<const godot::Variant&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:201:8
new (__claw_this_) godot::GetTypeInfo<const godot::Variant&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__common_type_implE3EE23LE23LE23LE23L_claw_ctor(std::__common_type_impl<long,long,long,long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2314:12
new (__claw_this_) std::__common_type_impl<long,long,long,long>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40HorizontalAlignment_claw_ctor(godot::PtrToArg<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::PtrToArg<godot::HorizontalAlignment>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2imIERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:93:7
__claw_this_->operator-=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIhE6encodeEhPv(uint8_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
godot::PtrToArg<unsigned char>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray5rfindEll(godot::PackedByteArray* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:166:10
return __claw_this_->rfind(value, from);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE9fetch_xorEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC1Ev(std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEoREs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion13get_euler_xyzEv(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:69:10
new (__claw_result_) godot::Vector3(__claw_this_->get_euler_xyz());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_infoeqERKS_(std::type_info* __claw_this_, const std::type_info* __arg) {
// /usr/include/c++/13/typeinfo:111:10
return __claw_this_->operator==(*__arg);
}
}

namespace godot {
__CLAW_API std::vector<godot::StringName>* __claw__ZNK5godot10MethodBind18get_argument_namesEv(std::vector<godot::StringName>* __claw_result_, godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:111:26
new (__claw_result_) std::vector<godot::StringName>(__claw_this_->get_argument_names());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot5Array5sliceElllb(godot::Array* __claw_result_, godot::Array* __claw_this_, int64_t begin, int64_t end, int64_t step, bool deep) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:192:8
new (__claw_result_) godot::Array(__claw_this_->slice(begin, end, step, deep));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array7bsearchERKNS_7VariantEb(godot::Array* __claw_this_, const godot::Variant* value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:188:10
return __claw_this_->bsearch(*value, before);
}
}

namespace std {
__CLAW_API void __claw_set__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9__first(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_, std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>* __claw_value_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

__claw_this_->first = *__claw_value_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node23is_unique_name_in_ownerEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:236:7
return __claw_this_->is_unique_name_in_owner();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot4NodeC2EPKc() {
return alignof(godot::Node);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_5BasisE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Basis* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:416:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40StringE23v_claw_ctor(godot::GetTypeInfo<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
new (__claw_this_) godot::GetTypeInfo<godot::String>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton15is_parent_classERKNS_10StringNameES3_(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* inherits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:61:7
return __claw_this_->is_parent_class(*_class, *inherits);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEEltERKS2_(godot::Ref<godot::Tween>* __claw_this_, const godot::Ref<godot::Tween>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:81:22
return __claw_this_->operator<(*p_r);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_global_get_singleton() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:160:51

return godot::internal::gdextension_interface_global_get_singleton;
}
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot6StringixEl(godot::String* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:463:18
return (char32*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray15has_encoded_varElb(godot::PackedByteArray* __claw_this_, int64_t byte_offset, bool allow_objects) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:188:7
return __claw_this_->has_encoded_var(byte_offset, allow_objects);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWRIDR1() {
return alignof(godot::PtrToArg<const godot::RID&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8ObjectIDC2Ev() {
return alignof(godot::ObjectID);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVKSt13__atomic_baseIaE4loadESt12memory_order(std::__atomic_base<char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector3Array6insertElRKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, int64_t at_index, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:117:10
return __claw_this_->insert(at_index, *value);
}
}

namespace std {
__CLAW_API std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>::pointer __claw__ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEES9_Lb0EE10pointer_toERS9_(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>::element_type* __r) {
// /usr/include/c++/13/bits/ptr_traits.h:141:7
return std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>::pointer_to(*__r);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDsE2eqERKDsS2_(const std::char_traits<char16>::char_type* __c1, const std::char_traits<char16>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:781:7
return std::char_traits<char16>::eq(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEaSERKNS_7VariantE(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWatomic0unsignedWlong11() {
return alignof(std::__type_identity<std::atomic<unsigned long>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0godotWMethodBindP1() {
return sizeof(std::__type_identity<godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalMode_claw_ctor(godot::VariantCaster<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::VariantCaster<godot::Node::InternalMode>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBind_claw_dtor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace std {
__CLAW_API std::initializer_list<float>::size_type __claw__ZNKSt16initializer_listIfE4sizeEv(std::initializer_list<float>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEC2ERKS3_() {
return alignof(godot::List<godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRNS_15KeyModifierMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10print_treeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:173:7
__claw_this_->print_tree();
}
}

namespace std {
__CLAW_API bool __claw__ZSt24atomic_flag_test_and_setPSt11atomic_flag(struct std::atomic_flag* __a) {
// /usr/include/c++/13/atomic:1247:3
return std::atomic_flag_test_and_set(__a);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIwE23compare_exchange_strongERwwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot8PtrToArgINS_6StringEE7convertEPKv(godot::String* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
new (__claw_result_) godot::String(godot::PtrToArg<godot::String>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw_get_godotWMethodInfo_return_val(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return (struct godot::PropertyInfo*)&__claw_this_->return_val;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_int32_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:142:67

return godot::internal::gdextension_interface_packed_int32_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector2_claw_dtor(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:42:21
__claw_this_->~Vector2();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector47posmodvERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_modv) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:104:10
new (__claw_result_) godot::Vector4(__claw_this_->posmodv(*p_modv));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt20_List_const_iteratorIN5godot10StringNameEEC2Ev() {
return alignof(std::_List_const_iterator<godot::StringName>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0char321Wchar321() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<char32>,char32>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE9fetch_subEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7CowDataIDiE8is_emptyEv(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:197:22
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName6rfindnERKNS_6StringEl(godot::StringName* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:275:10
return __claw_this_->rfindn(*what, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWPropertyUsageFlags11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWProjectionWPlanes1() {
return sizeof(godot::PtrToArg<godot::Projection::Planes>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0wchar_t11() {
return alignof(std::allocator_traits<std::allocator<wchar_t>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node6_inputERKNS_3RefINS_10InputEventEEE(godot::Node* __claw_this_, const godot::Ref<godot::InputEvent>* event) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:284:15
__claw_this_->_input(*event);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_6Node3DEEC1Ev(godot::internal::EngineClassRegistration<godot::Node3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:124:2
new (__claw_this_) godot::internal::EngineClassRegistration<godot::Node3D>();
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayC1ESt16initializer_listINS_7Vector2EE(godot::PackedVector2Array* __claw_this_, std::initializer_list<godot::Vector2>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:210:20
new (__claw_this_) godot::PackedVector2Array(*p_init);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane14intersects_rayERKNS_7Vector3ES3_PS1_(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_dir, struct godot::Vector3* p_intersection) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:63:7
return __claw_this_->intersects_ray(*p_from, *p_dir, p_intersection);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWSide1() {
return sizeof(godot::GetTypeInfo<const godot::Side>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWMIDIMessage1() {
return alignof(godot::PtrToArg<godot::MIDIMessage>);
}
}

namespace godot {
__CLAW_API std::vector<godot::PropertyInfo>* __claw__ZNK5godot10MethodBind23get_arguments_info_listEv(std::vector<godot::PropertyInfo>* __claw_result_, godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:122:28
new (__claw_result_) std::vector<godot::PropertyInfo>(__claw_this_->get_arguments_info_list());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40StringNameE40SE40_MethodBindings_claw_dtor(struct godot::StringName::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:83:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWlongP1() {
return alignof(godot::PtrToArg<const unsigned long*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector4i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ArrayE40SE40_MethodBindings_claw_ctor(struct godot::Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:63:16
new (__claw_this_) godot::Array::_MethodBindings();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4iR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4i&>);
}
}

namespace godot {
__CLAW_API double* __claw__ZN5godot18PackedFloat64ArrayixEl(godot::PackedFloat64Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:136:10
return (double*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7WrappedC2ENS_10StringNameE() {
return alignof(godot::Wrapped);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadGroupR1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_11Transform2DEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Transform2D>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Plane11distance_toERKNS_7Vector3E(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:57:24
return __claw_this_->distance_to(*p_point);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion5slerpERKS0_RKf(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_to, const real_t* p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:73:13
new (__claw_result_) godot::Quaternion(__claw_this_->slerp(*p_to, *p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1r_claw_ctor(godot::PtrToArg<const char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
new (__claw_this_) godot::PtrToArg<const char*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedColorArrayEEC1Ev(godot::TypedArray<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:118:1
new (__claw_this_) godot::TypedArray<godot::PackedColorArray>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName9get_sliceERKNS_6StringEl(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* delimiter, int64_t slice) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:267:9
new (__claw_result_) godot::String(__claw_this_->get_slice(*delimiter, slice));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0char3211() {
return alignof(std::allocator_traits<std::allocator<char32>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray4sortEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:162:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API enum godot::ClockDirection __claw__ZN5godot13VariantCasterINS_14ClockDirectionEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
return godot::VariantCaster<godot::ClockDirection>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ObjectID_claw_dtor(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:38:7
__claw_this_->~ObjectID();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__do_common_type_impl() {
return alignof(std::__do_common_type_impl);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::ConstIterator* __claw__ZNK5godot18PackedVector3Array3endEv(struct godot::PackedVector3Array::ConstIterator* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:205:31
new (__claw_result_) godot::PackedVector3Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector2i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP111() {
return alignof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Transform2D_claw_ctor(godot::PtrToArg<const godot::Transform2D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
new (__claw_this_) godot::PtrToArg<const godot::Transform2D&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector3i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC2Ev() {
return alignof(std::__detail::_Node_iterator<std::pair<const int,int>,false,false>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIN5godot7VariantEEC2Ev() {
return sizeof(std::allocator<godot::Variant>);
}
}

namespace godot {
__CLAW_API enum godot::InlineAlignment __claw__ZN5godot13VariantCasterINS_15InlineAlignmentEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
return godot::VariantCaster<godot::InlineAlignment>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot16PackedInt64ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedInt64Array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldINS_11MethodFlagsEEC2El() {
return alignof(godot::BitField<godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_11Transform3DEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_15PackedByteArrayE(godot::Variant* __claw_this_, const godot::PackedByteArray* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:206:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12ctype_bynameIwEC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(std::ctype_byname<wchar_t>* __claw_this_, const std::string* __s, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1533:7
new (__claw_this_) std::ctype_byname<wchar_t>(*__s, __refs);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWSide1() {
return sizeof(godot::GetTypeInfo<godot::Side>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEmmEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWSide1() {
return sizeof(godot::PtrToArg<godot::Side>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node13is_node_readyEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:227:7
return __claw_this_->is_node_ready();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Array_claw_dtor(godot::PtrToArg<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array11pick_randomEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:177:10
new (__claw_result_) godot::Variant(__claw_this_->pick_random());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot6Rect2icvNS_5Rect2EEv(struct godot::Rect2* __claw_result_, struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:234:2
new (__claw_result_) godot::Rect2(__claw_this_->operator Rect2());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Transform3D_claw_ctor(godot::PtrToArg<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
new (__claw_this_) godot::PtrToArg<godot::Transform3D>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4gtERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:128:22
return __claw_this_->operator>(*p_vec4);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseImE5storeEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3iE40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::PtrToArg<godot::Vector3i::Axis>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__true_type() {
return alignof(std::__true_type);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIwEC1ERKS0_(std::__new_allocator<wchar_t>* __claw_this_, const std::__new_allocator<wchar_t>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<wchar_t>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray13ConstIteratorC1EPKNS_6StringE(struct godot::PackedStringArray::ConstIterator* __claw_this_, const godot::String* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:184:3
new (__claw_this_) godot::PackedStringArray::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot4Node22get_tree_string_prettyEv(godot::String* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:176:9
new (__claw_result_) godot::String(__claw_this_->get_tree_string_pretty());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array4sortEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:125:7
__claw_this_->sort();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEmmEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_new_nil(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:59:46

godot::internal::gdextension_interface_variant_new_nil = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray13ConstIteratorC1ERKS1_(struct godot::PackedByteArray::ConstIterator* __claw_this_, const struct godot::PackedByteArray::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:264:3
new (__claw_this_) godot::PackedByteArray::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayC1ERKNS_5ArrayE(godot::PackedStringArray* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:105:2
new (__claw_this_) godot::PackedStringArray(*from);
}
}

namespace godot {
__CLAW_API godot::ObjectID* __claw__ZNK5godot7VariantcvNS_8ObjectIDEEv(godot::ObjectID* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:248:2
new (__claw_result_) godot::ObjectID(__claw_this_->operator ObjectID());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIwE5storeEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWlongR1() {
return alignof(godot::PtrToArg<const unsigned long&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWClockDirection1() {
return sizeof(godot::GetTypeInfo<const godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_hint_string(struct godot::PropertyInfo* __claw_this_, godot::String* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->hint_string = *__claw_value_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray12append_arrayERKS0_(godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:113:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1Ev(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:120:17
new (__claw_this_) godot::Quaternion();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWStringName1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEED1Ev(std::basic_string<char16>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:803:7
__claw_this_->~basic_string();
}
}

namespace godot {
__CLAW_API godot::CharStringT<wchar_t>* __claw__ZN5godot11CharStringTIwEpLEw(godot::CharStringT<wchar_t>* __claw_this_, wchar_t p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:114:18
return (godot::CharStringT<wchar_t>*) (&__claw_this_->operator+=(p_char));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color6set_a8Ei(struct godot::Color* __claw_this_, int32_t a8) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:213:22
__claw_this_->set_a8(a8);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Node>* __claw__ZNK5godot4Node12get_childrenEb(godot::TypedArray<godot::Node>* __claw_result_, godot::Node* __claw_this_, bool include_internal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:149:19
new (__claw_result_) godot::TypedArray<godot::Node>(__claw_this_->get_children(include_internal));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC2Ev() {
return sizeof(std::_List_base<godot::StringName,std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot16ClassDBSingleton14get_class_listEv(godot::PackedStringArray* __claw_result_, godot::ClassDBSingleton* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:57:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->get_class_list());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail19_Node_iterator_baseISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEC2Ev() {
return sizeof(std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5ColorEE6encodeERKS1_Pv(const struct godot::Color* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
godot::PtrToArg<godot::Color>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIbEaSERKNS_5ArrayE(godot::TypedArray<bool>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:78:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE8fetch_orEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIlE21compare_exchange_weakERllSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWVector3i11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWNodeWInternalMode1() {
return alignof(godot::VariantCaster<godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis29rotref_posscale_decompositionERS0_(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, struct godot::Basis* rotref) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:83:10
new (__claw_result_) godot::Vector3(__claw_this_->rotref_posscale_decomposition(*rotref));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldINS_15MouseButtonMaskEEC2El() {
return sizeof(godot::BitField<godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWint1() {
return sizeof(godot::PtrToArg<unsigned int>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_ctor(struct godot::ClassDB::ClassInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:89:9
new (__claw_this_) godot::ClassDB::ClassInfo();
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math15is_equal_approxEdd(double a, double b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:650:13
return godot::Math::is_equal_approx(a, b);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedColorArray_claw_dtor(godot::PtrToArg<const godot::PackedColorArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array4fillERKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:118:7
__claw_this_->fill(*value);
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math15is_equal_approxEff(float a, float b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:624:13
return godot::Math::is_equal_approx(a, b);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIiEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<int>);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNKSt13__atomic_baseIiE4loadESt12memory_order(std::__atomic_base<int>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3DmlEf(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:109:14
new (__claw_result_) godot::Transform3D(__claw_this_->operator*(p_val));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio01W10000000001() {
return alignof(std::ratio<1,1000000000>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23Vb0_claw_ctor(std::__type_identity<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D6invertEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:46:7
__claw_this_->invert();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type0stdWchronoWduration0longWstdWratio01W100000000011WstdWchronoWduration0longWstdWratio01W1000000000111() {
return sizeof(std::common_type<std::chrono::duration<long,std::ratio<1,1000000000>>,std::chrono::duration<long,std::ratio<1,1000000000>>>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDiE2ltERKDiS2_(const std::char_traits<char32>::char_type* __c1, const std::char_traits<char32>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:914:7
return std::char_traits<char32>::lt(*__c1, *__c2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1EOS3_RKS2_(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>* __rv, const std::allocator<godot::PropertyInfo>* __m) {
// /usr/include/c++/13/bits/stl_vector.h:659:7
new (__claw_this_) std::vector<godot::PropertyInfo>(std::move(*__rv), *__m);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4mlERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:120:25
new (__claw_result_) godot::Vector4(__claw_this_->operator*(*p_vec4));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1Ev(std::vector<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:531:7
new (__claw_this_) std::vector<godot::PropertyInfo>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedVector3ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedVector3Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedVector3Array&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23wE23v_claw_dtor(godot::GetTypeInfo<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWAABB11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::AABB>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot7VariantEED1Ev(std::allocator<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWtoken(void* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:42:18

godot::internal::token = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4ltERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:129:22
return __claw_this_->operator<(*p_vec4);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIDivE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<char32>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4plERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:118:25
new (__claw_result_) godot::Vector4(__claw_this_->operator+(*p_vec4));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMouseButtonR1() {
return alignof(godot::GetTypeInfo<godot::MouseButton&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEC1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDsE5storeEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE9fetch_subEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23rE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<char>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDiED1Ev(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4C1Ev(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:135:17
new (__claw_this_) godot::Vector4();
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIwSt11char_traitsIwEEC1EPKw(std::basic_string_view<wchar_t>* __claw_this_, const wchar_t* __str) {
// /usr/include/c++/13/string_view:140:7
new (__claw_this_) std::basic_string_view<wchar_t>(__str);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot17PackedStringArray13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:122:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0void11() {
return sizeof(std::allocator_traits<std::allocator<void>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1ERKS9_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __x) {
// /usr/include/c++/13/bits/stl_tree.h:676:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>(*__x);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0bool1() {
return alignof(std::__type_identity<bool>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot10Dictionary3getERKNS_7VariantES3_(godot::Variant* __claw_result_, godot::Dictionary* __claw_this_, const godot::Variant* key, const godot::Variant* _default) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:108:10
new (__claw_result_) godot::Variant(__claw_this_->get(*key, *_default));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedFloat32ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedFloat32Array&>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot17PackedStringArray6resizeEl(godot::PackedStringArray* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:117:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEC1Ev(godot::TypedArray<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:116:1
new (__claw_this_) godot::TypedArray<godot::PackedVector2Array>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt64Array5rfindEll(godot::PackedInt64Array* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:125:10
return __claw_this_->rfind(value, from);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3idVEi(struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:106:27
return (struct godot::Vector3i*) (&__claw_this_->operator/=(p_scalar));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D6rotateEf(struct godot::Transform2D* __claw_this_, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:74:7
__claw_this_->rotate(p_angle);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWKeyR1() {
return alignof(godot::GetTypeInfo<godot::Key&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1EOS4_OSaISt10_List_nodeIS2_EE(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __x, std::_List_base<godot::StringName,std::allocator<godot::StringName>>::_Node_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:549:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*__x), std::move(*__a));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Node_insert_return0stdW__detailW_Node_iterator0stdWpair0constWintWint1WfalseWfalse1WstdW_Node_handle0intWstdWpair0constWintWint1WstdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1111() {
return sizeof(std::_Node_insert_return<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,std::_Node_handle<int,std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>>);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZN5godot11Transform3D14xform_inv_fastERKNS_5PlaneERKS0_RKNS_5BasisE(struct godot::Plane* __claw_result_, const struct godot::Plane* p_plane, const struct godot::Transform3D* p_inverse, const struct godot::Basis* p_basis_transpose) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:104:30
new (__claw_result_) godot::Plane(godot::Transform3D::xform_inv_fast(*p_plane, *p_inverse, *p_basis_transpose));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIbED1Ev(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:71:5
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15KeyModifierMaskEE10clear_flagES3_(godot::BitField<const godot::KeyModifierMask&>* __claw_this_, const enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_3RIDEEC1ERKNS_7VariantE(godot::TypedArray<godot::RID>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:105:1
new (__claw_this_) godot::TypedArray<godot::RID>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ColorE23v_claw_ctor(godot::GetTypeInfo<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
new (__claw_this_) godot::GetTypeInfo<godot::Color>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot6StringC2EPKNS_7VariantE() {
return alignof(godot::String);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE9fetch_addEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWCallable1() {
return sizeof(godot::GetTypeInfo<godot::Callable>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIsE21compare_exchange_weakERssSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot7VariantcvfEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:227:2
return __claw_this_->operator float();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hashtable_baseIiSt4pairIKiiENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return alignof(std::__detail::_Hashtable_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE9fetch_andEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWless0godotWStringName1() {
return alignof(std::less<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWProjectionR1() {
return alignof(godot::PtrToArg<const godot::Projection&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMethodFlagsR1() {
return sizeof(godot::GetTypeInfo<const godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40ErrorE23v_claw_dtor(godot::GetTypeInfo<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>, false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_11Transform2DE(godot::Variant* __claw_this_, const struct godot::Transform2D* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:187:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return sizeof(std::unordered_map<godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot15PackedByteArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedByteArray);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWOrientation1() {
return alignof(godot::VariantCaster<godot::Orientation>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant5blendERKS0_S2_fRS0_(const godot::Variant* a, const godot::Variant* b, float c, godot::Variant* r_dst) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:327:14
godot::Variant::blend(*a, *b, c, *r_dst);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11CharStringTIwEC2Ev() {
return alignof(godot::CharStringT<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AS_claw_ctor(godot::PtrToArg<short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
new (__claw_this_) godot::PtrToArg<short*>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1EPKc(std::locale* __claw_this_, const char* __s) {
// /usr/include/c++/13/bits/locale_classes.h:141:5
new (__claw_this_) std::locale(__s);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane13is_point_overERKNS_7Vector3E(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:56:22
return __claw_this_->is_point_over(*p_point);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIDiEC2Ev() {
return alignof(std::__atomic_base<char32>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23sE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<unsigned short>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector4iWAxis1() {
return sizeof(godot::PtrToArg<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node11find_parentERKNS_6StringE(godot::Node* __claw_this_, const godot::String* pattern) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:157:8
return (godot::Node*) __claw_this_->find_parent(*pattern);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Plane_claw_dtor(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:41:21
__claw_this_->~Plane();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIiEC2Ev() {
return alignof(std::__atomic_base<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector3iWAxis1() {
return sizeof(godot::PtrToArg<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40CornerE23v_claw_ctor(godot::GetTypeInfo<const godot::Corner&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<const godot::Corner&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1ERKS_S1_i(std::locale* __claw_this_, const std::locale* __base, const std::locale* __add, std::locale::category __cat) {
// /usr/include/c++/13/bits/locale_classes.h:196:5
new (__claw_this_) std::locale(*__base, *__add, __cat);
}
}

__CLAW_API void __claw_cE3AE40UE40pthread_attr_t_claw_ctor(union pthread_attr_t* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:7
new (__claw_this_) pthread_attr_t();
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_vector3_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:149:64

return godot::internal::gdextension_interface_packed_vector3_array_operator_index;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector2iWAxis1() {
return sizeof(godot::PtrToArg<godot::Vector2i::Axis>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse111() {
return alignof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEppEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIDsvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<char16>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8ObjectIDaSEl(godot::ObjectID* __claw_this_, int64_t p_int64) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:52:22
__claw_this_->operator=(p_int64);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_16PackedInt64ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedInt64Array&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIcEC2Ev() {
return sizeof(std::atomic<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23dE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<double>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<double>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKtvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const unsigned short&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8ObjectIDaSEm(godot::ObjectID* __claw_this_, uint64_t p_uint64) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:53:22
__claw_this_->operator=(p_uint64);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZNK5godot10MethodInfocvNS_10DictionaryEEv(godot::Dictionary* __claw_result_, struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:75:2
new (__claw_result_) godot::Dictionary(__claw_this_->operator Dictionary());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZNK5godot16PackedInt32Array5sliceEll(godot::PackedInt32Array* __claw_result_, godot::PackedInt32Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:119:19
new (__claw_result_) godot::PackedInt32Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_5PlaneE(godot::Variant* __claw_this_, const struct godot::Plane* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:190:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat64ArrayWConstIterator() {
return alignof(godot::PackedFloat64Array::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIlE23compare_exchange_strongERllSt12memory_orderS2_(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0godotWStringName11() {
return alignof(std::allocator_traits<std::allocator<godot::StringName>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEppEi(std::__atomic_base<unsigned long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect214grow_side_bindEjf(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, uint32_t p_side, real_t p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:239:15
new (__claw_result_) godot::Rect2(__claw_this_->grow_side_bind(p_side, p_amount));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8to_upperEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:312:9
new (__claw_result_) godot::String(__claw_this_->to_upper());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_RKS3_(std::basic_string<wchar_t>* __claw_this_, const std::basic_string<wchar_t>* __str, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:711:7
new (__claw_this_) std::basic_string<wchar_t>(*__str, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsEC1Ev(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:246:17
new (__claw_this_) godot::CowData<char16>();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i15grow_individualEiiii(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, int p_left, int p_top, int p_right, int p_bottom) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:178:16
new (__claw_result_) godot::Rect2i(__claw_this_->grow_individual(p_left, p_top, p_right, p_bottom));
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math8pingpongEff(float value, float length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:759:14
return godot::Math::pingpong(value, length);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf16_chars_and_len() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:111:62

return godot::internal::gdextension_interface_string_new_with_utf16_chars_and_len;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11CharStringTIDsEC2Ev() {
return alignof(godot::CharStringT<char16>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE8exchangeEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdW_Rb_tree_node0godotWStringName111() {
return sizeof(std::__type_identity<std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0char1Wchar1() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<char>,char>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_18PackedFloat64ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedFloat64Array>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt4pairIKN5godot10StringNameEPNS0_10MethodBindEEEC2Ev() {
return sizeof(std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWInlineAlignment1() {
return sizeof(godot::VariantCaster<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API godot::RID* __claw__ZNK5godot7VariantcvNS_3RIDEEv(godot::RID* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:247:2
new (__claw_result_) godot::RID(__claw_this_->operator RID());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array8IteratorC1ERKS1_(struct godot::PackedVector2Array::Iterator* __claw_this_, const struct godot::PackedVector2Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:164:3
new (__claw_this_) godot::PackedVector2Array::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node13is_processingEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:190:7
return __claw_this_->is_processing();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWObjectP11() {
return sizeof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::Object*>>);
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math6is_infEd(double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:612:13
return godot::Math::is_inf(p_val);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedFloat32Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedFloat32Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<const godot::HorizontalAlignment>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWCornerR1() {
return sizeof(godot::GetTypeInfo<godot::Corner&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldINS_11MethodFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot6Rect2i8get_areaEv(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:51:6
return __claw_this_->get_area();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat32ArrayWConstIterator() {
return alignof(godot::PackedFloat32Array::ConstIterator);
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math6is_infEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:608:13
return godot::Math::is_inf(p_val);
}
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIwE11eq_int_typeERKmS3_(const __gnu_cxx::char_traits<wchar_t>::int_type* __c1, const __gnu_cxx::char_traits<wchar_t>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:170:7
return __gnu_cxx::char_traits<wchar_t>::eq_int_type(*__c1, *__c2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWrandom_access_iterator_tag() {
return alignof(std::random_access_iterator_tag);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED1Ev(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:985:7
__claw_this_->~_Rb_tree();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEC2Ev() {
return sizeof(std::__pair_base<const godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot16ClassDBSingleton11instantiateERKNS_10StringNameE(godot::Variant* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:63:10
new (__claw_result_) godot::Variant(__claw_this_->instantiate(*_class));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC1EPKDi(std::basic_string_view<char32>* __claw_this_, const char32* __str) {
// /usr/include/c++/13/string_view:140:7
new (__claw_this_) std::basic_string_view<char32>(__str);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot5Color6get_a8Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:214:25
return __claw_this_->get_a8();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_PNS1_10MethodBindEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return sizeof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessMode __claw__ZNK5godot4Node16get_process_modeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:200:20
return __claw_this_->get_process_mode();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection14set_orthogonalEffffb(struct godot::Projection* __claw_this_, real_t p_size, real_t p_aspect, real_t p_znear, real_t p_zfar, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:80:7
__claw_this_->set_orthogonal(p_size, p_aspect, p_znear, p_zfar, p_flip_fov);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_8CallableE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:426:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object8is_classERKNS_6StringE(godot::Object* __claw_this_, const godot::String* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:67:7
return __claw_this_->is_class(*_class);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_7Vector2EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEED1Ev(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23rE23v_claw_dtor(godot::GetTypeInfo<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1EPKDsmRKS3_(std::basic_string<char16>* __claw_this_, const char16* __s, std::basic_string<char16>::size_type __n, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:619:7
new (__claw_this_) std::basic_string<char16>(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot4Node28_gde_binding_create_callbackEPvS1_(void* p_token, void* p_instance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
return (void*) godot::Node::_gde_binding_create_callback(p_token, p_instance);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DC1Ev(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:128:2
new (__claw_this_) godot::Transform3D();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23l_claw_ctor(std::__success_type<unsigned long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
new (__claw_this_) std::__success_type<unsigned long>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEoREa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40AABBE23v_claw_ctor(godot::GetTypeInfo<const godot::AABB&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
new (__claw_this_) godot::GetTypeInfo<const godot::AABB&>();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot5Color9to_rgba64Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:54:11
return __claw_this_->to_rgba64();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion3logEv(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:64:13
new (__claw_result_) godot::Quaternion(__claw_this_->log());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40ClockDirection_claw_ctor(godot::PtrToArg<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::PtrToArg<godot::ClockDirection>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWchar1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEm(std::basic_string<wchar_t>* __claw_this_, std::basic_string<wchar_t>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:1113:7
__claw_this_->resize(__n);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE231E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<const godot::StringName>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc(std::basic_string<char>* __claw_this_, std::basic_string<char>::size_type __n, char __c) {
// /usr/include/c++/13/bits/basic_string.h:1099:7
__claw_this_->resize(__n, __c);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot7Vector2cvNS_8Vector2iEEv(struct godot::Vector2i* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:176:2
new (__claw_result_) godot::Vector2i(__claw_this_->operator Vector2i());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIwED1Ev(std::__new_allocator<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot8ObjectIDcvmEv(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:45:17
return __claw_this_->operator unsigned long();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWchar_traits0char1() {
return sizeof(std::char_traits<char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEmIEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math8pingpongEdd(double value, double length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:763:15
return godot::Math::pingpong(value, length);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot8PtrToArgINS_17PackedStringArrayEE7convertEPKv(godot::PackedStringArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
new (__claw_result_) godot::PackedStringArray(godot::PtrToArg<godot::PackedStringArray>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_to_utf8_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:115:50

godot::internal::gdextension_interface_string_to_utf8_chars = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio01W11() {
return sizeof(std::ratio<1,1>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String10casecmp_toERKS0_(godot::String* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:274:10
return __claw_this_->casecmp_to(*to);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3i_claw_dtor(godot::TypedArray<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:95:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String5countERKS0_ll(godot::String* __claw_this_, const godot::String* what, int64_t from, int64_t to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:284:10
return __claw_this_->count(*what, from, to);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKsvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const short&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String13sha256_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:332:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->sha256_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWInlineAlignment1() {
return sizeof(godot::GetTypeInfo<const godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23fE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<float>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<float>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTransform2D1() {
return sizeof(godot::GetTypeInfo<godot::Transform2D>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE8exchangeEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23sE23v_claw_dtor(godot::GetTypeInfo<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11SafeNumericIjEC2Ej() {
return alignof(godot::SafeNumeric<unsigned int>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_6ObjectEELb0EEEEC2Ev() {
return alignof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5PlaneEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Plane>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector27posmodvERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_modv) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:107:10
new (__claw_result_) godot::Vector2(__claw_this_->posmodv(*p_modv));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNode3DWRotationEditMode1() {
return sizeof(godot::PtrToArg<godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot8PtrToArgIRKNS_7VariantEE7convertEPKv(godot::Variant* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
new (__claw_result_) godot::Variant(godot::PtrToArg<const godot::Variant&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB21add_property_subgroupERKNS_10StringNameERKNS_6StringES6_(const godot::StringName* p_class, const godot::String* p_name, const godot::String* p_prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:182:14
godot::ClassDB::add_property_subgroup(*p_class, *p_name, *p_prefix);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array6appendERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:168:7
__claw_this_->append(*value);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D14orthogonalizedEv(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:79:14
new (__claw_result_) godot::Transform3D(__claw_this_->orthogonalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261L_claw_dtor(godot::PtrToArg<const long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWdoubleP1() {
return alignof(godot::PtrToArg<const double*>);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameENS0_7ClassDB9ClassInfoESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE8max_sizeEv(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:322:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>::size_type __claw__ZNSt16allocator_traitsISaISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEE8max_sizeERKS7_(const std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node17print_tree_prettyEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:174:7
__claw_this_->print_tree_pretty();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_set_named() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:65:48

return godot::internal::gdextension_interface_variant_set_named;
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseItE21compare_exchange_weakERttSt12memory_orderS2_(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB12get_endpointEi(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_, int p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:99:25
new (__claw_result_) godot::Vector3(__claw_this_->get_endpoint(p_point));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0long1() {
return sizeof(godot::GetTypeInfo<long>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64ArrayneERKNS_7VariantE(godot::PackedFloat64Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:128:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessMode>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIhEC2Ev() {
return alignof(std::atomic<unsigned char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEaSEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayC1ESt16initializer_listINS_7Vector3EE(godot::PackedVector3Array* __claw_this_, std::initializer_list<godot::Vector3>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:210:20
new (__claw_this_) godot::PackedVector3Array(*p_init);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array13ConstIteratorC1ERKS1_(struct godot::PackedFloat64Array::ConstIterator* __claw_this_, const struct godot::PackedFloat64Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:184:3
new (__claw_this_) godot::PackedFloat64Array::ConstIterator(*p_it);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt13_Rb_tree_nodeIN5godot10StringNameEEEC1Ev(std::allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::_Rb_tree_node<godot::StringName>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiE3setElRKDi(godot::CharStringT<char32>* __claw_this_, int64_t p_index, const char32* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:97:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray21get_string_from_utf16Ev(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:170:9
new (__claw_result_) godot::String(__claw_this_->get_string_from_utf16());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIjEC1Ev(godot::TypedArray<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:83:1
new (__claw_this_) godot::TypedArray<unsigned int>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermEb(godot::String* __claw_result_, godot::StringName* __claw_this_, bool other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:363:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Array_claw_ctor(godot::PtrToArg<const godot::Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
new (__claw_this_) godot::PtrToArg<const godot::Array&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1EOS8_(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:191:7
new (__claw_this_) std::unordered_map<int,int>(std::move(*arg0));
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEC1Ev(std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:433:7
new (__claw_this_) std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>();
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVKSt13__atomic_baseItE4loadESt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWQuaternion1() {
return alignof(godot::PtrToArg<godot::Quaternion>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDiE21compare_exchange_weakERDiDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_dtor(godot::GetTypeInfo<const godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1i_claw_dtor(godot::PtrToArg<const unsigned int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37posmodvERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_modv) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:136:25
new (__claw_result_) godot::Vector3(__claw_this_->posmodv(*p_modv));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7WrappedC2ENS_10StringNameE() {
return sizeof(godot::Wrapped);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot7Variant14recursive_hashEi(godot::Variant* __claw_this_, int recursion_count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:322:11
return __claw_this_->recursive_hash(recursion_count);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0char1611() {
return sizeof(std::allocator_traits<std::allocator<char16>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EED1Ev(std::vector<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:733:7
__claw_this_->~vector();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hashtable_baseIiSt4pairIKiiENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb0EEEEC2Ev() {
return alignof(std::__detail::_Hashtable_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,false>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEmmEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0float1() {
return sizeof(godot::PtrToArg<float>);
}
}

namespace godot {
__CLAW_API godot::String* __claw_get_godotWPropertyInfo_hint_string(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return (godot::String*)&__claw_this_->hint_string;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261c_claw_ctor(godot::PtrToArg<const unsigned char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
new (__claw_this_) godot::PtrToArg<const unsigned char&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40CallableE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Callable>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Callable>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWDictionaryR1() {
return alignof(godot::GetTypeInfo<const godot::Dictionary&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector4iWAxis1() {
return sizeof(godot::VariantCaster<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object10has_signalERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:118:7
return __claw_this_->has_signal(*signal);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedVector3Array_claw_ctor(godot::PtrToArg<const godot::PackedVector3Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
new (__claw_this_) godot::PtrToArg<const godot::PackedVector3Array&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4E40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::PtrToArg<godot::Vector4::Axis>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:364:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWdoubleR1() {
return alignof(godot::PtrToArg<const double&>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10xml_escapeEb(godot::String* __claw_result_, godot::StringName* __claw_this_, bool escape_quotes) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:326:9
new (__claw_result_) godot::String(__claw_this_->xml_escape(escape_quotes));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector3iWAxis1() {
return sizeof(godot::VariantCaster<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Key_claw_ctor(godot::VariantCaster<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::VariantCaster<godot::Key>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_16PackedInt32ArrayE(godot::Array* __claw_this_, const godot::PackedInt32Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:151:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1EPKw(godot::StringName* __claw_this_, const wchar_t* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:257:2
new (__claw_this_) godot::StringName(from);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdW_List_node0godotWStringName111() {
return alignof(std::__type_identity<std::allocator<std::_List_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot17PackedStringArray9duplicateEv(godot::PackedStringArray* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:125:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector2iWAxis1() {
return sizeof(godot::VariantCaster<godot::Vector2i::Axis>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermEd(godot::String* __claw_result_, godot::StringName* __claw_this_, double other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:365:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIN5godot10StringNameEEC2Ev() {
return sizeof(std::allocator<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RefINS_11Node3DGizmoEEC2ERKS2_() {
return alignof(godot::Ref<godot::Node3DGizmo>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array13ConstIteratorC1ERKS1_(struct godot::PackedInt64Array::ConstIterator* __claw_this_, const struct godot::PackedInt64Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:184:3
new (__claw_this_) godot::PackedInt64Array::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector417cubic_interpolateERKS0_S2_S2_f(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_b, const struct godot::Vector4* p_pre_a, const struct godot::Vector4* p_post_b, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:100:10
new (__claw_result_) godot::Vector4(__claw_this_->cubic_interpolate(*p_b, *p_pre_a, *p_post_b, p_weight));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_string_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:145:63

return godot::internal::gdextension_interface_packed_string_array_operator_index;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5ErrorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Error>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName9ends_withERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:279:7
return __claw_this_->ends_with(*text);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEeOEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWCornerR1() {
return alignof(godot::GetTypeInfo<const godot::Corner&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayImEC1ERKNS_5ArrayE(godot::TypedArray<unsigned long>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:85:1
new (__claw_this_) godot::TypedArray<unsigned long>(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector317cubic_interpolateERKS0_S2_S2_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_b, const struct godot::Vector3* p_pre_a, const struct godot::Vector3* p_post_b, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:110:25
new (__claw_result_) godot::Vector3(__claw_this_->cubic_interpolate(*p_b, *p_pre_a, *p_post_b, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector217cubic_interpolateERKS0_S2_S2_f(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_b, const struct godot::Vector2* p_pre_a, const struct godot::Vector2* p_post_b, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:114:25
new (__claw_result_) godot::Vector2(__claw_this_->cubic_interpolate(*p_b, *p_pre_a, *p_post_b, p_weight));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIN5godot7VariantEEC2Ev() {
return sizeof(std::__new_allocator<godot::Variant>);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::Iterator* __claw__ZN5godot16PackedInt32Array8IteratorppEv(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:145:28
return (struct godot::PackedInt32Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40hashE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::hash<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:56:13
new (__claw_this_) std::hash<godot::StringName>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type0longWlong1() {
return sizeof(std::common_type<long,long>);
}
}

namespace godot {
__CLAW_API godot::CowData<wchar_t>::Size __claw__ZNK5godot7CowDataIwE5countERKw(godot::CowData<wchar_t>* __claw_this_, const wchar_t* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:244:7
return __claw_this_->count(*p_val);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVKSt13__atomic_baseItEcvtEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator unsigned short();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2_claw_ctor(godot::PtrToArg<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
new (__claw_this_) godot::PtrToArg<godot::Vector2>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWBitField0godotWPropertyUsageFlags11() {
return sizeof(godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace std {
__CLAW_API std::set<godot::StringName>::size_type __claw__ZNKSt3setIN5godot10StringNameESt4lessIS1_ESaIS1_EE4sizeEv(std::set<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_set.h:421:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw_set__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9__second(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_, bool __claw_value_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

__claw_this_->second = __claw_value_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23I_claw_ctor(std::__type_identity<std::allocator<std::pair<const int,int>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::pair<const int,int>>>();
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot4AABB8get_sizeEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:61:17
return (struct godot::Vector3*) (&__claw_this_->get_size());
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE9fetch_subEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EED1Ev(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:367:7
__claw_this_->~_Vector_base();
}
}

__CLAW_API size_t __claw_cE3AE40FE40__ctype_get_mb_cur_max() {
// /usr/include/stdlib.h:98:15
return __ctype_get_mb_cur_max();
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEoREDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40JoyAxis_claw_ctor(godot::VariantCaster<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::VariantCaster<godot::JoyAxis>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node28set_physics_process_internalEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:212:7
__claw_this_->set_physics_process_internal(enable);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_cE3AE40NE40godotE40NE40internalE40SE40EngineClassRegistrationE3EE23E24E40NE40godotE40SE40ClassDBSingleton_claw_dtor(godot::internal::EngineClassRegistration<godot::ClassDBSingleton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:123:8
__claw_this_->~EngineClassRegistration();
}
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot6Object5callvERKNS_10StringNameERKNS_5ArrayE(godot::Variant* __claw_result_, godot::Object* __claw_this_, const godot::StringName* method, const godot::Array* arg_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:116:10
new (__claw_result_) godot::Variant(__claw_this_->callv(*method, *arg_array));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWProjectionWPlanesR1() {
return alignof(godot::GetTypeInfo<const godot::Projection::Planes&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKdvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const double&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3WAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godoteqEPKDsRKNS_6StringE(const char16* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:471:6
return godot::operator==(p_chr, *p_str);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptrC1ERKS0_(std::__exception_ptr::exception_ptr* __claw_this_, const std::__exception_ptr::exception_ptr* arg0) {
// /usr/include/c++/13/bits/exception_ptr.h:116:7
new (__claw_this_) std::__exception_ptr::exception_ptr(*arg0);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6Rect2iEEaSERKNS_5ArrayE(godot::TypedArray<godot::Rect2i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:93:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String5utf16EPKDsl(godot::String* __claw_result_, const char16* from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:380:16
new (__claw_result_) godot::String(godot::String::utf16(from, len));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40JoyButton_claw_dtor(godot::PtrToArg<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEeOEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node14propagate_callERKNS_10StringNameERKNS_5ArrayEb(godot::Node* __claw_this_, const godot::StringName* method, const godot::Array* args, bool parent_first) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:180:7
__claw_this_->propagate_call(*method, *args, parent_first);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10DictionaryC1Ev(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:92:2
new (__claw_this_) godot::Dictionary();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector2iEEaSERKNS_5ArrayE(godot::TypedArray<godot::Vector2i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:91:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23qE23v_claw_dtor(godot::GetTypeInfo<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godoteqEPKDiRKNS_6StringE(const char32* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:472:6
return godot::operator==(p_chr, *p_str);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse111() {
return sizeof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot5Basis11diagonalizeEv(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:223:8
new (__claw_result_) godot::Basis(__claw_this_->diagonalize());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_11MouseButtonEE6encodeES1_Pv(enum godot::MouseButton p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
godot::PtrToArg<godot::MouseButton>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIiEC2EPKim() {
return sizeof(std::initializer_list<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRKNS_18PropertyUsageFlagsEEC2El() {
return sizeof(godot::BitField<const godot::PropertyUsageFlags&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_7Vector3EEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Vector3>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D4hideEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:120:7
__claw_this_->hide();
}
}

namespace godot {
__CLAW_API float* __claw__ZNK5godot18PackedFloat32Array8IteratorptEv(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:144:25
return (float*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEED1Ev(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_wide_chars_and_len(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:113:61

godot::internal::gdextension_interface_string_new_with_wide_chars_and_len = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_6SignalEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Signal>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::Iterator* __claw__ZN5godot18PackedFloat64Array8IteratormmEv(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:149:28
return (struct godot::PackedFloat64Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKfvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const float&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const float* __claw__ZNK5godot18PackedFloat32ArrayixEl(godot::PackedFloat32Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:135:15
return (float*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWchar1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10StringNameEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::StringName>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedVector2Array1() {
return alignof(godot::GetTypeInfo<godot::PackedVector2Array>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDiEC1EDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<char32>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40PropertyHintE23v_claw_dtor(godot::GetTypeInfo<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_mm(std::basic_string<wchar_t>* __claw_this_, const std::basic_string<wchar_t>* __str, std::basic_string<wchar_t>::size_type __pos, std::basic_string<wchar_t>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:581:7
new (__claw_this_) std::basic_string<wchar_t>(*__str, __pos, __n);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D22set_rotation_edit_modeENS0_16RotationEditModeE(godot::Node3D* __claw_this_, enum godot::Node3D::RotationEditMode edit_mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:82:7
__claw_this_->set_rotation_edit_mode(edit_mode);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10Projection6PlanesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Projection::Planes&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIjE12is_lock_freeEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_float32_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:138:69

return godot::internal::gdextension_interface_packed_float32_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector25angleEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:155:9
return __claw_this_->angle();
}
}

namespace std {
namespace chrono {
__CLAW_API void __claw__ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1Ev(std::chrono::duration<long,std::ratio<1,1000000000>>* __claw_this_) {
// /usr/include/c++/13/bits/chrono.h:564:12
new (__claw_this_) std::chrono::duration<long,std::ratio<1,1000000000>>();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ad_claw_ctor(godot::PtrToArg<double*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
new (__claw_this_) godot::PtrToArg<double*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB8quantizeEf(struct godot::AABB* __claw_this_, real_t p_unit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:112:22
__claw_this_->quantize(p_unit);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorC1ERKS4_(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:186:18
new (__claw_this_) godot::List<godot::PropertyInfo>::ConstIterator(*p_it);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1EmRKS2_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, std::size_t __n, const std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:333:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(__n, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector4WAxis1() {
return alignof(godot::VariantCaster<godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKavE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const char&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7CowDataIDsEC2Ev() {
return sizeof(godot::CowData<char16>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D19set_global_positionERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* position) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:92:7
__claw_this_->set_global_position(*position);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1() {
return alignof(std::__detail::_Hash_node<std::pair<const int,int>,false>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWKey1() {
return sizeof(godot::GetTypeInfo<godot::Key>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWJoyButtonR1() {
return alignof(godot::GetTypeInfo<const godot::JoyButton&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPropertyUsageFlags1() {
return alignof(godot::GetTypeInfo<const godot::PropertyUsageFlags>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE9fetch_xorElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIwEC2Ev() {
return alignof(std::allocator<wchar_t>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_color_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:136:67

godot::internal::gdextension_interface_packed_color_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB8enclosesERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:71:22
return __claw_this_->encloses(*p_aabb);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE8fetch_orEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API std::initializer_list<unsigned char>::size_type __claw__ZNKSt16initializer_listIhE4sizeEv(std::initializer_list<unsigned char>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIcEC1Ec(std::atomic<char>* __claw_this_, std::atomic<char>::__integral_type __i) {
// /usr/include/c++/13/atomic:718:17
new (__claw_this_) std::atomic<char>(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_stringify() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:80:49

return godot::internal::gdextension_interface_variant_stringify;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray8IteratorC1Ev(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:160:3
new (__claw_this_) godot::PackedStringArray::Iterator();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE9fetch_subEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_editor_remove_plugin() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:190:51

return godot::internal::gdextension_interface_editor_remove_plugin;
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIsE21compare_exchange_weakERssSt12memory_orderS2_(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIDsEC2Ev() {
return sizeof(std::__new_allocator<char16>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0char321() {
return alignof(godot::GetTypeInfo<char32>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::KeyModifierMask>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray13ConstIteratorC1EPKh(struct godot::PackedByteArray::ConstIterator* __claw_this_, const uint8_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:262:3
new (__claw_this_) godot::PackedByteArray::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23c_claw_dtor(godot::TypedArray<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:79:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API wchar_t* __claw__ZN5godot11CharStringTIwE4ptrwEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:91:20
return (wchar_t*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray8IteratorC1EPh(struct godot::PackedByteArray::Iterator* __claw_this_, uint8_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:237:3
new (__claw_this_) godot::PackedByteArray::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot11Transform2D17basis_determinantEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:81:9
return __claw_this_->basis_determinant();
}
}

namespace godot {
__CLAW_API void __claw__ZZN5godot3RefC1ERKNS_7VariantEE9(godot::Ref* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D6rotateERKNS_7Vector3Ef(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:55:7
__claw_this_->rotate(*p_axis, p_angle);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKbvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const bool&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt64ArrayW_MethodBindings() {
return alignof(godot::PackedInt64Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40EulerOrderE23v_claw_ctor(godot::GetTypeInfo<godot::EulerOrder&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::GetTypeInfo<godot::EulerOrder&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEmmEi(std::__atomic_base<long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEmmEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1ERKS2_OS3_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, const std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>::allocator_type* __a, std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:361:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(*__a, std::move(*__x));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Basis13is_orthogonalEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:147:7
return __claw_this_->is_orthogonal();
}
}

namespace std {
__CLAW_API long long __claw__ZSt17__size_to_integerd(double __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1052:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis7inverseEv(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:57:8
new (__claw_result_) godot::Basis(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRNS_18PropertyUsageFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEmmEi(std::__atomic_base<char32>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEaSEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot5Color5get_vEv(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:60:8
return __claw_this_->get_v();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotW_GlobalNilClass() {
return alignof(godot::_GlobalNilClass);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWdoubleR1() {
return alignof(godot::GetTypeInfo<const double&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind21set_default_argumentsERKSt6vectorINS_7VariantESaIS2_EE(godot::MethodBind* __claw_this_, const std::vector<godot::Variant>* p_default_arguments) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:112:7
__claw_this_->set_default_arguments(*p_default_arguments);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEE8is_validEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_call() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:61:44

return godot::internal::gdextension_interface_variant_call;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEmIEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array5clearEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:120:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ColorE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node11set_processEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:185:7
__claw_this_->set_process(enable);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::char_type* __claw__ZN9__gnu_cxx11char_traitsIcE6assignEPcmc(__gnu_cxx::char_traits<char>::char_type* __s, std::size_t __n, __gnu_cxx::char_traits<char>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:159:7
return (__gnu_cxx::char_traits<char>::char_type*) __gnu_cxx::char_traits<char>::assign(__s, __n, __a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23bE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<bool>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<bool>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_dtor(godot::GetTypeInfo<godot::Projection::Planes&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKlvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const long&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array8IteratorC1EPNS_7Vector3E(struct godot::PackedVector3Array::Iterator* __claw_this_, struct godot::Vector3* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:162:3
new (__claw_this_) godot::PackedVector3Array::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKmvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const unsigned long&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE8exchangeExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::MethodDefinition* __claw__ZN5godot8D_METHODENS_10StringNameE(struct godot::MethodDefinition* __claw_result_, godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:74:18
new (__claw_result_) godot::MethodDefinition(godot::D_METHOD(*p_name));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIcEC1Ev(std::atomic<char>* __claw_this_) {
// /usr/include/c++/13/atomic:712:7
new (__claw_this_) std::atomic<char>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array5clearEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:120:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::BitField<godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40AABB_claw_dtor(godot::TypedArray<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:99:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPlane1() {
return alignof(godot::GetTypeInfo<godot::Plane>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldINS_15KeyModifierMaskEEC2El() {
return alignof(godot::BitField<godot::KeyModifierMask>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat32Array4sizeEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:106:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API godot::CallableCustom::CompareLessFunc __claw__ZNK5godot14CallableCustom21get_compare_less_funcEv(godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:56:26
return __claw_this_->get_compare_less_func();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EOS4_RKS3_(std::basic_string<wchar_t>* __claw_this_, std::basic_string<wchar_t>* __str, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:716:7
new (__claw_this_) std::basic_string<wchar_t>(std::move(*__str), *__a);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWlongWlong1() {
return sizeof(std::__hash_base<unsigned long,long long>);
}
}

namespace std {
__CLAW_API unsigned long __claw__ZSt17__size_to_integerm(unsigned long __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1018:3
return std::__size_to_integer(__n);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEeOEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10uri_encodeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:342:9
new (__claw_result_) godot::String(__claw_this_->uri_encode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray8IteratorC1ERKS1_(struct godot::PackedColorArray::Iterator* __claw_this_, const struct godot::PackedColorArray::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:161:3
new (__claw_this_) godot::PackedColorArray::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot5Basis17get_uniform_scaleEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:109:8
return __claw_this_->get_uniform_scale();
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_6ObjectEEEC1Ev(std::allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::Object*>>();
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE7postaddEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:98:20
return __claw_this_->postadd(p_value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot18PackedVector3ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedVector3Array);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis13get_scale_absEv(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:112:10
new (__claw_result_) godot::Vector3(__claw_this_->get_scale_abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWRect2() {
return alignof(godot::Rect2);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIwE6lengthEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:115:10
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Transform2DE23v_claw_dtor(godot::GetTypeInfo<const godot::Transform2D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_17PackedStringArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedStringArray>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:115:1
new (__claw_this_) godot::TypedArray<godot::PackedStringArray>(*p_variant);
}
}

namespace std {
__CLAW_API long __claw__ZSt17__size_to_integerl(long __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1016:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWCornerR1() {
return alignof(godot::GetTypeInfo<godot::Corner&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array13ConstIteratorC1Ev(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:188:3
new (__claw_this_) godot::PackedVector2Array::ConstIterator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant10booleanizeEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:324:7
return __claw_this_->booleanize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIKNS_11MethodFlagsEEC2El() {
return sizeof(godot::BitField<const godot::MethodFlags>);
}
}

namespace std {
__CLAW_API int __claw__ZSt17__size_to_integeri(int __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1012:3
return std::__size_to_integer(__n);
}
}

namespace std {
__CLAW_API unsigned int __claw__ZSt17__size_to_integerj(unsigned int __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1014:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4Node12InternalModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::InternalMode>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API long long __claw__ZSt17__size_to_integere(long double* __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1054:3
return std::__size_to_integer(*__n);
}
}

namespace std {
__CLAW_API long long __claw__ZSt17__size_to_integerf(float __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1050:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8NodePathEEC1ERKNS_5ArrayE(godot::TypedArray<godot::NodePath>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:104:1
new (__claw_this_) godot::TypedArray<godot::NodePath>(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedFloat32ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedFloat32Array&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw__ZSt17__size_to_integery(unsigned long long __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1022:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringpLEPKDi(godot::String* __claw_this_, const char32* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:462:10
return (godot::String*) (&__claw_this_->operator+=(p_str));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0unsignedWintW11() {
return sizeof(std::integral_constant<unsigned int,1>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKhvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const unsigned char&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API long long __claw__ZSt17__size_to_integerx(long long __n) {
// /usr/include/c++/13/bits/stl_algobase.h:1020:3
return std::__size_to_integer(__n);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray21get_string_from_wcharEv(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:172:9
new (__claw_result_) godot::String(__claw_this_->get_string_from_wchar());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWMethodFlags11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23cE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<unsigned char>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<unsigned char>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char1611() {
return alignof(std::__hash_base<unsigned long,std::basic_string_view<char16>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIfEaSERKNS_5ArrayE(godot::TypedArray<float>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:87:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API int __claw_get_godotWMethodInfo_id(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return __claw_this_->id;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect215is_equal_approxERKS0_(struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:211:7
return __claw_this_->is_equal_approx(*p_rect);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Side_claw_dtor(godot::VariantCaster<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40JoyButton_claw_ctor(godot::VariantCaster<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::VariantCaster<godot::JoyButton>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot7VariantEEC1Ev(std::initializer_list<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::Variant>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIiEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<int>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15error_conditionC2Ev() {
return sizeof(std::error_condition);
}
}

namespace godot {
__CLAW_API int16_t __claw__ZNK5godot7VariantcvsEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:220:2
return __claw_this_->operator short();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_6StringEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::String>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40PropertyHint_claw_dtor(godot::VariantCaster<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23LE23v_claw_dtor(godot::GetTypeInfo<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKivE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const int&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEppEi(std::__atomic_base<short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZN5godot18PackedFloat32ArrayaSEOS0_(godot::PackedFloat32Array* __claw_this_, godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:134:22
return (godot::PackedFloat32Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_u32El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:181:10
return __claw_this_->decode_u32(byte_offset);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNKSt13__atomic_baseIiEcviEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator int();
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEppEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4Node14DuplicateFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::DuplicateFlags&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMethodFlagsR1() {
return alignof(godot::GetTypeInfo<const godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWNodeWProcessThreadMessages11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

__CLAW_API const unsigned short* __claw_get___locale_struct___ctype_b(struct __locale_struct* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

return (const unsigned short*)__claw_this_->__ctype_b;
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKjvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const unsigned int&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot10Projection9xform_invERKNS_7Vector4E(struct godot::Vector4* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:125:10
new (__claw_result_) godot::Vector4(__claw_this_->xform_inv(*p_vec4));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12ctype_bynameIwEC2EPKcm() {
return sizeof(std::ctype_byname<wchar_t>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray21get_string_from_asciiEv(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:168:9
new (__claw_result_) godot::String(__claw_this_->get_string_from_ascii());
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot4AABB10get_volumeEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:50:9
return __claw_this_->get_volume();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedColorArray6insertElRKNS_5ColorE(godot::PackedColorArray* __claw_this_, int64_t at_index, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:115:10
return __claw_this_->insert(at_index, *value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector4iC1Ev(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:125:17
new (__claw_this_) godot::Vector4i();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::BitField<godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String11trim_prefixERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:364:9
new (__claw_result_) godot::String(__claw_this_->trim_prefix(*prefix));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0unsignedWintW01() {
return sizeof(std::integral_constant<unsigned int,0>);
}
}

namespace std {
__CLAW_API bool __claw_get__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5__second(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

return __claw_this_->second;
}
}

namespace godot {
__CLAW_API godot::Window* __claw__ZNK5godot4Node25get_last_exclusive_windowEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:215:10
return (godot::Window*) __claw_this_->get_last_exclusive_window();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIhEC2EPKhm() {
return sizeof(std::initializer_list<unsigned char>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEC1ERKSA_(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_, const std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>(*arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDsED1Ev(std::atomic<char16>* __claw_this_) {
// /usr/include/c++/13/atomic:1015:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2::Axis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40VerticalAlignment_claw_dtor(godot::VariantCaster<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRNS_18PropertyUsageFlagsEEcvlEv(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23lE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<unsigned long>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<unsigned long>>();
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::Iterator* __claw__ZN5godot17PackedStringArray5beginEv(struct godot::PackedStringArray::Iterator* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:192:26
new (__claw_result_) godot::PackedStringArray::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwE3setElRKw(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_index, const wchar_t* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:199:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::BitField<godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot10RefCounted16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
return (godot::StringName*) (&godot::RefCounted::get_class_static());
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godotmlEdRKNS_8Vector4iE(struct godot::Vector4i* __claw_result_, const double p_scalar, const struct godot::Vector4i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:239:25
new (__claw_result_) godot::Vector4i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE8fetch_orEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC1ERKS3_(std::_Rb_tree_key_compare<std::less<godot::StringName>>* __claw_this_, const std::less<godot::StringName>* __comp) {
// /usr/include/c++/13/bits/stl_tree.h:152:7
new (__claw_this_) std::_Rb_tree_key_compare<std::less<godot::StringName>>(*__comp);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldINS_11MethodFlagsEEcvlEv(godot::BitField<godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName15to_utf32_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:355:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf32_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_16PackedColorArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedColorArray>);
}
}

namespace godot {
__CLAW_API struct godot::MethodDefinition* __claw__ZN5godot8D_METHODENS_10StringNameES0_(struct godot::MethodDefinition* __claw_result_, godot::StringName* p_name, godot::StringName* p_arg1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:75:18
new (__claw_result_) godot::MethodDefinition(godot::D_METHOD(*p_name, *p_arg1));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis7rotatedERKNS_10QuaternionE(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:74:8
new (__claw_result_) godot::Basis(__claw_this_->rotated(*p_quaternion));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_15InlineAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::InlineAlignment>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ai_claw_dtor(godot::PtrToArg<unsigned int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API enum godot::Vector3::Axis __claw__ZN5godot8PtrToArgINS_7Vector34AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
return godot::PtrToArg<godot::Vector3::Axis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40InlineAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::InlineAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRKNS_11MethodFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEmIEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_call(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:61:44

godot::internal::gdextension_interface_variant_call = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedFloat64ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedFloat64Array>();
}
}

namespace godot {
__CLAW_API enum godot::Side __claw__ZN5godot8PtrToArgINS_4SideEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
return godot::PtrToArg<godot::Side>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot7VariantcvNS_10ProjectionEEv(struct godot::Projection* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:243:2
new (__claw_result_) godot::Projection(__claw_this_->operator Projection());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRKNS_18PropertyUsageFlagsEEC2El() {
return alignof(godot::BitField<const godot::PropertyUsageFlags&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:220:17
new (__claw_this_) godot::Color();
}
}

namespace godot {
__CLAW_API godot::Window* __claw__ZNK5godot4Node10get_windowEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:214:10
return (godot::Window*) __claw_this_->get_window();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10ProjectionneERKS0_(struct godot::Projection* __claw_this_, const struct godot::Projection* p_cam) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:148:7
return __claw_this_->operator!=(*p_cam);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot10RefCounted28_gde_binding_create_callbackEPvS1_(void* p_token, void* p_instance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
return (void*) godot::RefCounted::_gde_binding_create_callback(p_token, p_instance);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Orientation_claw_ctor(godot::PtrToArg<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::PtrToArg<godot::Orientation>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayC1ERKNS_5ArrayE(godot::PackedFloat64Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:103:2
new (__claw_this_) godot::PackedFloat64Array(*from);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail19_Node_iterator_baseISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEC2Ev() {
return alignof(std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector3ArrayWConstIterator() {
return alignof(godot::PackedVector3Array::ConstIterator);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot7Vector2EEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::Vector2>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5fractEf(float value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:751:14
return godot::Math::fract(value);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIhED1Ev(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5fractEd(double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:755:15
return godot::Math::fract(value);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWJoyAxis1() {
return alignof(godot::GetTypeInfo<godot::JoyAxis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion5xformERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:92:25
new (__claw_result_) godot::Vector3(__claw_this_->xform(*v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::BitField<godot::PropertyUsageFlags>* __claw__ZN5godot8PtrToArgINS_8BitFieldINS_18PropertyUsageFlagsEEEE7convertEPKv(godot::BitField<godot::PropertyUsageFlags>* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::BitField<godot::PropertyUsageFlags>(godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt64ArrayWIterator() {
return sizeof(godot::PackedInt64Array::Iterator);
}
}

namespace std {
__CLAW_API bool __claw_get__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9__second(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

return __claw_this_->second;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot3RefINS_14MultiplayerAPIEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6Object4tr_nERKNS_10StringNameES3_iS3_(godot::String* __claw_result_, godot::Object* __claw_this_, const godot::StringName* message, const godot::StringName* plural_message, int32_t n, const godot::StringName* context) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:131:9
new (__claw_result_) godot::String(__claw_this_->tr_n(*message, *plural_message, n, *context));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_set__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5__second(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_, bool __claw_value_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

__claw_this_->second = __claw_value_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB10add_signalERKNS_10StringNameERKNS_10MethodInfoE(const godot::StringName* p_class, const struct godot::MethodInfo* p_signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:184:14
godot::ClassDB::add_signal(*p_class, *p_signal);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7VariantcvNS_7Vector4EEv(struct godot::Vector4* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:236:2
new (__claw_result_) godot::Vector4(__claw_this_->operator Vector4());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Variant::Type __claw__ZNK5godot7Variant8get_typeEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:316:16
return __claw_this_->get_type();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWEulerOrder1() {
return alignof(godot::PtrToArg<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D14orthonormalizeEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:136:7
__claw_this_->orthonormalize();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIyE21compare_exchange_weakERyySt12memory_orderS2_(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>();
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot10MethodBind7ptrcallEiPKii(godot::MethodBind* __claw_this_, int p_instance, const int* p_args, int r_return) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:142:15
__claw_this_->ptrcall(p_instance, p_args, r_return);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWSignal1() {
return sizeof(godot::GetTypeInfo<godot::Signal>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array3maxEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:198:10
new (__claw_result_) godot::Variant(__claw_this_->max());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::ConstIterator* __claw__ZN5godot15PackedByteArray13ConstIteratorppEv(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:250:33
return (struct godot::PackedByteArray::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector2iWAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector2i::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWOrientation1() {
return alignof(godot::PtrToArg<godot::Orientation>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_5ColorE(godot::Variant* __claw_this_, const struct godot::Color* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:196:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API std::initializer_list<int>::size_type __claw__ZNKSt16initializer_listIiE4sizeEv(std::initializer_list<int>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector3iWAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40SideE23v_claw_dtor(godot::GetTypeInfo<godot::Side&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWiterator0stdWoutput_iterator_tagWvoidWvoidWvoidWvoid1() {
return alignof(std::iterator<std::output_iterator_tag,void,void,void,void>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector4iWAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPlane1() {
return sizeof(godot::PtrToArg<godot::Plane>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10ProjectioneqERKS0_(struct godot::Projection* __claw_this_, const struct godot::Projection* p_cam) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:137:7
return __claw_this_->operator==(*p_cam);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40InlineAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::_List_node<godot::StringName>>>::size_type __claw__ZNSt16allocator_traitsISaISt10_List_nodeIN5godot10StringNameEEEE8max_sizeERKS4_(const std::allocator_traits<std::allocator<std::_List_node<godot::StringName>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::_List_node<godot::StringName>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40RIDE40SE40_MethodBindings_claw_dtor(struct godot::RID::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:50:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_6CornerEE6encodeES1_Pv(enum godot::Corner p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
godot::PtrToArg<godot::Corner>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayImEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<unsigned long>);
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE4backEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:277:26
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->back();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray12append_arrayERKS0_(godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:113:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10uri_encodeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:328:9
new (__claw_result_) godot::String(__claw_this_->uri_encode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection15create_fit_aabbERKNS_4AABBE(struct godot::Projection* __claw_result_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:94:20
new (__claw_result_) godot::Projection(godot::Projection::create_fit_aabb(*p_aabb));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedFloat32ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedFloat32Array>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40JoyButtonE23v_claw_ctor(godot::GetTypeInfo<godot::JoyButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::GetTypeInfo<godot::JoyButton&>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot5Color20get_named_color_nameEi(godot::String* __claw_result_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:197:16
new (__claw_result_) godot::String(godot::Color::get_named_color_name(p_idx));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEEC1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot5Array3mapERKNS_8CallableE(godot::Array* __claw_result_, godot::Array* __claw_this_, const godot::Callable* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:194:8
new (__claw_result_) godot::Array(__claw_this_->map(*method));
return __claw_result_;
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot5Color9to_rgba32Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:51:11
return __claw_this_->to_rgba32();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Corner_claw_ctor(godot::VariantCaster<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::VariantCaster<godot::Corner>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIDsEC2Ev() {
return alignof(std::atomic<char16>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdW_List_node0godotWStringName111() {
return sizeof(std::__type_identity<std::allocator<std::_List_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1C_claw_ctor(godot::PtrToArg<const char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
new (__claw_this_) godot::PtrToArg<const char*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1Effff(struct godot::Color* __claw_this_, float p_r, float p_g, float p_b, float p_a) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:226:17
new (__claw_this_) godot::Color(p_r, p_g, p_b, p_a);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseIKN5godot10StringNameEPNS0_10MethodBindEEC2Ev() {
return alignof(std::__pair_base<const godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10DictionaryEEaSERKNS_5ArrayE(godot::TypedArray<godot::Dictionary>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:108:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot8Vector3icvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:120:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_byte_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:133:61

godot::internal::gdextension_interface_packed_byte_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector2EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Vector4i::Axis __claw__ZN5godot13VariantCasterINS_8Vector4i4AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
return godot::VariantCaster<godot::Vector4i::Axis>::cast(*p_variant);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_iter_next(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:73:48

godot::internal::gdextension_interface_variant_iter_next = __claw_value_;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array14bsearch_customERKNS_7VariantERKNS_8CallableEb(godot::Array* __claw_this_, const godot::Variant* value, const godot::Callable* func, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:189:10
return __claw_this_->bsearch_custom(*value, *func, before);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWInlineAlignment1() {
return alignof(godot::PtrToArg<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array5clearEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:163:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray13ConstIteratoreqERKS1_(struct godot::PackedColorArray::ConstIterator* __claw_this_, const struct godot::PackedColorArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:181:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API godot::CharStringT<char16>* __claw__ZN5godot11CharStringTIDsEpLEDs(godot::CharStringT<char16>* __claw_this_, char16 p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:114:18
return (godot::CharStringT<char16>*) (&__claw_this_->operator+=(p_char));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1s_claw_dtor(godot::PtrToArg<const unsigned short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKsE6encodeES2_Pv(const int16_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
godot::PtrToArg<const short*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot12SafeRefCount3getEv(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:187:27
return __claw_this_->get();
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot7VariantcvNS_18PackedVector3ArrayEEv(godot::PackedVector3Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:261:2
new (__claw_result_) godot::PackedVector3Array(__claw_this_->operator PackedVector3Array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10StringNameC2EPKNS_7VariantE() {
return sizeof(godot::StringName);
}
}

namespace std {
__CLAW_API std::__new_allocator<std::__detail::_Hash_node_base*>::size_type __claw__ZNKSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv(std::__new_allocator<std::__detail::_Hash_node_base*>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWfloatR1() {
return sizeof(godot::PtrToArg<const float&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot10MethodBind4callEiPKiiRi(godot::Variant* __claw_result_, godot::MethodBind* __claw_this_, int p_instance, const int* p_args, int p_argument_count, int* r_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:141:18
new (__claw_result_) godot::Variant(__claw_this_->call(p_instance, p_args, p_argument_count, *r_error));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDiE2eqERKDiS2_(const std::char_traits<char32>::char_type* __c1, const std::char_traits<char32>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:910:7
return std::char_traits<char32>::eq(*__c1, *__c2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1EmRKS2_(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>::size_type __n, const std::vector<godot::PropertyInfo>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:556:7
new (__claw_this_) std::vector<godot::PropertyInfo>(__n, *__a);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptr4swapERS0_(std::__exception_ptr::exception_ptr* __claw_this_, std::__exception_ptr::exception_ptr* arg0) {
// /usr/include/c++/13/bits/exception_ptr.h:150:7
__claw_this_->swap(*arg0);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5BasisEEC1Ev(godot::TypedArray<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:100:1
new (__claw_this_) godot::TypedArray<godot::Basis>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0unsignedWlongW21() {
return sizeof(std::integral_constant<unsigned long,2>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector2WAxis1() {
return alignof(godot::PtrToArg<godot::Vector2::Axis>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWhash0godotWStringName1() {
return sizeof(std::hash<godot::StringName>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math9linear2dbEd(double p_linear) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:720:15
return godot::Math::linear2db(p_linear);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>();
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot9CharProxyIDiEadEv(godot::CharProxy<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:70:26
return (const char32*) __claw_this_->operator&();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedColorArrayWConstIterator() {
return sizeof(godot::PackedColorArray::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17_err_flush_stdoutEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:50:6
godot::_err_flush_stdout();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIfEC2EPKfm() {
return sizeof(std::initializer_list<float>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE8fetch_orEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratordeEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:168:27
return (struct godot::PropertyInfo*) (&__claw_this_->operator*());
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40_Char_typesE3EE23C_claw_dtor(__gnu_cxx::_Char_types<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:84:12
__claw_this_->~_Char_types();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math9linear2dbEf(float p_linear) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:723:14
return godot::Math::linear2db(p_linear);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PlaneE23v_claw_ctor(godot::GetTypeInfo<const godot::Plane&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
new (__claw_this_) godot::GetTypeInfo<const godot::Plane&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BasisE23v_claw_ctor(godot::GetTypeInfo<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
new (__claw_this_) godot::GetTypeInfo<godot::Basis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3E40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::PtrToArg<godot::Vector3::Axis>();
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot6String4ptrwEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:466:12
return (char32*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API const struct godot::Color* __claw__ZNK5godot16PackedColorArray13ConstIteratordeEv(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:168:31
return (struct godot::Color*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_6Rect2iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedInt32Array6appendEl(godot::PackedInt32Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:110:7
return __claw_this_->append(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D12clear_gizmosEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:113:7
__claw_this_->clear_gizmos();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIaEC2Ev() {
return alignof(std::__atomic_base<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedStringArrayWConstIterator() {
return sizeof(godot::PackedStringArray::ConstIterator);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4Node18ProcessThreadGroupEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2i_claw_dtor(godot::TypedArray<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:93:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedVector3Array9push_backERKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:113:7
return __claw_this_->push_back(*value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array12append_arrayERKS0_(godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:111:7
__claw_this_->append_array(*array);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0unsignedWlongW01() {
return sizeof(std::integral_constant<unsigned long,0>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABBC1Ev(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:129:17
new (__claw_this_) godot::AABB();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWClassDB() {
return alignof(godot::ClassDB);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEpLEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEEC2Ev() {
return sizeof(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSJ_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* arg0) {
// /usr/include/c++/13/bits/hashtable.h:532:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(*arg0);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_property_indexed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:183:77

return godot::internal::gdextension_interface_classdb_register_extension_class_property_indexed;
}
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIwE12is_lock_freeEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform3DEEaSERKNS_5ArrayE(godot::TypedArray<godot::Transform3D>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:101:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8CallableEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Callable&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray13ConstIteratorneERKS1_(struct godot::PackedColorArray::ConstIterator* __claw_this_, const struct godot::PackedColorArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:182:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedFloat32Array1() {
return alignof(godot::GetTypeInfo<godot::PackedFloat32Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
new (__claw_this_) godot::GetTypeInfo<const godot::Array&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE8exchangeEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwE3setElRKw(godot::CharStringT<wchar_t>* __claw_this_, int64_t p_index, const wchar_t* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:97:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array5clearEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:116:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15KeyModifierMaskEE8set_flagES1_(godot::BitField<godot::KeyModifierMask>* __claw_this_, enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNameplERKS0_(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:392:9
new (__claw_result_) godot::String(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_5ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:399:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6locale5facetC2Em() {
return sizeof(std::locale::facet);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIcE5storeEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

__CLAW_API const int* __claw_get___locale_struct___ctype_tolower(struct __locale_struct* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

return (const int*)__claw_this_->__ctype_tolower;
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWfloatP1() {
return sizeof(godot::PtrToArg<const float*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedColorArray1() {
return sizeof(godot::PtrToArg<godot::PackedColorArray>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIwED1Ev(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4Node11ProcessModeEE6encodeES2_Pv(enum godot::Node::ProcessMode p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
godot::PtrToArg<godot::Node::ProcessMode>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWQuaternionR1() {
return alignof(godot::PtrToArg<const godot::Quaternion&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23l_claw_dtor(godot::PtrToArg<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNode3DWRotationEditMode1() {
return alignof(godot::GetTypeInfo<const godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedVector2ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedVector2Array&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB20intersects_inclusiveERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:70:22
return __claw_this_->intersects_inclusive(*p_aabb);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5ErrorEE6encodeES1_Pv(enum godot::Error p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
godot::PtrToArg<godot::Error>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt21__ctype_abstract_baseIwEC2Em() {
return sizeof(std::__ctype_abstract_base<wchar_t>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedVector3ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedVector3Array&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Basis15is_equal_approxERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_basis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:130:7
return __claw_this_->is_equal_approx(*p_basis);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6locale2idC2ERKS0_() {
return sizeof(std::locale::id);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodInfoC1ENS_7Variant4TypeENS_10StringNameE(struct godot::MethodInfo* __claw_this_, enum godot::Variant::Type ret, godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:84:2
new (__claw_this_) godot::MethodInfo(ret, *p_name);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedFloat32Array_claw_dtor(godot::PtrToArg<const godot::PackedFloat32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWbinary_function0godotWStringNameWgodotWStringNameWbool1() {
return sizeof(std::binary_function<godot::StringName,godot::StringName,bool>);
}
}

namespace godot {
__CLAW_API char __claw__ZNK5godot11CharStringTIcE3getEl(godot::CharStringT<char>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:96:19
return __claw_this_->get(p_index);
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC1ERKS4_(std::_Rb_tree_key_compare<std::less<godot::StringName>>* __claw_this_, const std::_Rb_tree_key_compare<std::less<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/stl_tree.h:158:7
new (__claw_this_) std::_Rb_tree_key_compare<std::less<godot::StringName>>(*arg0);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP111() {
return sizeof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::Object*>>>);
}
}

namespace godot {
__CLAW_API godot::Object* __claw__ZNK5godot7VariantcvPNS_6ObjectEEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:249:2
return (godot::Object*) __claw_this_->operator godot::Object *();
}
}

namespace godot {
__CLAW_API enum godot::Variant::Type __claw__ZN5godot13VariantCasterINS_7Variant4TypeEE4castERKS1_(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
return godot::VariantCaster<godot::Variant::Type>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23IE23v_claw_dtor(godot::GetTypeInfo<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::BitField<godot::KeyModifierMask>* __claw__ZN5godot13VariantCasterINS_8BitFieldINS_15KeyModifierMaskEEEE4castERKNS_7VariantE(godot::BitField<godot::KeyModifierMask>* __claw_result_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::BitField<godot::KeyModifierMask>(godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>::cast(*p_variant));
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Quaternion3dotERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:66:24
return __claw_this_->dot(*p_q);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40equal_toE3EE23I_claw_ctor(std::__type_identity<std::equal_to<int>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::equal_to<int>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt8ios_baseD1Ev(std::ios_base* __claw_this_) {
// /usr/include/c++/13/bits/ios_base.h:889:13
__claw_this_->~ios_base();
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::Iterator* __claw__ZN5godot17PackedStringArray8IteratorppEv(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:147:28
return (struct godot::PackedStringArray::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API real_t __claw__ZN5godot8vec3_dotERKNS_7Vector3ES2_(const struct godot::Vector3* p_a, const struct godot::Vector3* p_b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:458:23
return godot::vec3_dot(*p_a, *p_b);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot15PackedByteArray5sliceEll(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:161:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40QuaternionE23v_claw_ctor(godot::GetTypeInfo<const godot::Quaternion&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
new (__claw_this_) godot::GetTypeInfo<const godot::Quaternion&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_18PackedFloat32ArrayE(godot::Variant* __claw_this_, const godot::PackedFloat32Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:209:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10bad_typeidC2Ev() {
return sizeof(std::bad_typeid);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261b_claw_ctor(godot::PtrToArg<const bool&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
new (__claw_this_) godot::PtrToArg<const bool&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE11move_beforeEPNS3_7ElementES5_(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* value, godot::List<godot::PropertyInfo>::Element* where) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:611:7
__claw_this_->move_before(value, where);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40CornerE23v_claw_dtor(godot::GetTypeInfo<const godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot7ClassDB16get_virtual_funcEPvi() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:190:37
return godot::ClassDB::get_virtual_func();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE8fetch_orEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIbEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<bool>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW_List_node0godotWStringName111() {
return alignof(std::allocator_traits<std::allocator<std::_List_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D10set_originERKNS_7Vector3E(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_origin) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:74:7
__claw_this_->set_origin(*p_origin);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC2Ev() {
return alignof(std::__detail::_Node_iterator_base<std::pair<const int,int>,false>);
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String13humanize_sizeEl(godot::String* __claw_result_, int64_t size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:377:16
new (__claw_result_) godot::String(godot::String::humanize_size(size));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String15to_utf32_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:369:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf32_buffer());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEmIEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWPropertyUsageFlagsR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot8Vector2icvNS_7Vector2EEv(struct godot::Vector2* __claw_result_, struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:126:2
new (__claw_result_) godot::Vector2(__claw_this_->operator Vector2());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::basic_string<wchar_t>::size_type __claw__ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE8max_sizeEv(std::basic_string<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1084:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessMode __claw__ZN5godot13VariantCasterINS_4Node11ProcessModeEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
return godot::VariantCaster<godot::Node::ProcessMode>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot5Rect211get_supportERKNS_7Vector2E(struct godot::Vector2* __claw_result_, struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:290:10
new (__claw_result_) godot::Vector2(__claw_this_->get_support(*p_normal));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEoREy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot4AABB23intersects_segment_bindERKNS_7Vector3ES3_(godot::Variant* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:109:10
new (__claw_result_) godot::Variant(__claw_this_->intersects_segment_bind(*p_from, *p_to));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2imlERKi(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:96:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator*(*rvalue));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Projection_claw_dtor(godot::PtrToArg<const godot::Projection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1EOSaISt10_List_nodeIS2_EE(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_List_base<godot::StringName,std::allocator<godot::StringName>>::_Node_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:564:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*__a));
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2DD_claw_ctor(std::common_type<long double,long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2324:12
new (__claw_this_) std::common_type<long double,long double>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23iE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<unsigned int>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<unsigned int>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEpLEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_ref_set_object(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:172:45

godot::internal::gdextension_interface_ref_set_object = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEaSEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10get_slicecEll(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t delimiter, int64_t slice) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:268:9
new (__claw_result_) godot::String(__claw_this_->get_slicec(delimiter, slice));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_18PackedVector2ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:436:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3imLEi(struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:104:27
return (struct godot::Vector3i*) (&__claw_this_->operator*=(p_scalar));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector44AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKtE6encodeES2_Pv(const uint16_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
godot::PtrToArg<const unsigned short*>::encode(p_var, p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIN5godot10StringNameEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<1,std::hash<godot::StringName>,std::hash<godot::StringName>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot15PackedByteArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedByteArray);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNamegtERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:390:7
return __claw_this_->operator>(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWMethodFlags11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40MIDIMessage_claw_ctor(godot::VariantCaster<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::VariantCaster<godot::MIDIMessage>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector24AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40ClockDirectionE23v_claw_ctor(godot::GetTypeInfo<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<godot::ClockDirection>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3_claw_ctor(godot::PtrToArg<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
new (__claw_this_) godot::PtrToArg<godot::Vector3>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector213is_normalizedEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:84:7
return __claw_this_->is_normalized();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector34AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot12SafeRefCount3refEv(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:171:23
return __claw_this_->ref();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4iWAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIaEC1ERKNS_5ArrayE(godot::TypedArray<char>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:80:1
new (__claw_this_) godot::TypedArray<char>(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::ConstIterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorppEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:172:33
return (struct godot::List<godot::PropertyInfo>::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String13get_extensionEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:320:9
new (__claw_result_) godot::String(__claw_this_->get_extension());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ListE3EE23E24E40NE40godotE40SE40PropertyInfoE23E24E40NE40godotE40SE40DefaultAllocatorE40FTE40E3E1E23Tsort_customE23vE23(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:705:7
__claw_this_->sort_custom();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40CornerE23v_claw_dtor(godot::GetTypeInfo<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNKSt13__atomic_baseIsEcvsEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator short();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWKeyModifierMaskR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Variant_claw_dtor(godot::PtrToArg<godot::Variant>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedStringArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:167:9
__claw_this_->~ConstIterator();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>>);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23Vb0_claw_dtor(std::__type_identity<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3iWAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector3i::Axis>);
}
}

namespace std {
__CLAW_API const std::ctype_base::mask* __claw__ZNSt5ctypeIcE13classic_tableEv() {
// /usr/include/c++/13/bits/locale_facets.h:996:7
return (const std::ctype_base::mask*) std::ctype<char>::classic_table();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DmLEf(struct godot::Transform2D* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:111:7
__claw_this_->operator*=(p_val);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40JoyAxisE23v_claw_dtor(godot::GetTypeInfo<const godot::JoyAxis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/atomic:148:5
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot6Node3DC2EPKc() {
return alignof(godot::Node3D);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2iWAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector2i::Axis>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIlEC1Ev(std::atomic<long>* __claw_this_) {
// /usr/include/c++/13/atomic:873:7
new (__claw_this_) std::atomic<long>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE8fetch_orEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array7shuffleEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:187:7
__claw_this_->shuffle();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt19_Node_handle_commonISt4pairIKN5godot10StringNameEPNS1_10MethodBindEESaINSt8__detail10_Hash_nodeIS6_Lb0EEEEEC2Ev() {
return alignof(std::_Node_handle_common<std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array4sortEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:121:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_8NodePathE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:424:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEmIEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node16get_node_or_nullERKNS_8NodePathE(godot::Node* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:153:8
return (godot::Node*) __claw_this_->get_node_or_null(*path);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt21__ctype_abstract_baseIwE2isEtw(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::ctype_base::mask __m, std::__ctype_abstract_base<wchar_t>::char_type __c) {
// /usr/include/c++/13/bits/locale_facets.h:172:7
return __claw_this_->is(__m, __c);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String4findERKS0_l(godot::String* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:283:10
return __claw_this_->find(*what, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4R1() {
return alignof(godot::GetTypeInfo<const godot::Vector4&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIlEC1El(std::atomic<long>* __claw_this_, std::atomic<long>::__integral_type __i) {
// /usr/include/c++/13/atomic:879:17
new (__claw_this_) std::atomic<long>(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIbEC1Ev(godot::TypedArray<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:78:1
new (__claw_this_) godot::TypedArray<bool>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40RID_claw_ctor(godot::PtrToArg<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
new (__claw_this_) godot::PtrToArg<godot::RID>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEaSEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPropertyHint1() {
return alignof(godot::PtrToArg<godot::PropertyHint>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRNS_11MethodFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array13ConstIteratorneERKS1_(struct godot::PackedFloat64Array::ConstIterator* __claw_this_, const struct godot::PackedFloat64Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:180:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWProjection() {
return sizeof(godot::Projection);
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot7VariantcvNS_18PackedVector2ArrayEEv(godot::PackedVector2Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:260:2
new (__claw_result_) godot::PackedVector2Array(__claw_this_->operator PackedVector2Array());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEEC2Ev() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE9fetch_xorEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10DictionaryEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Dictionary&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIhEC2Ev() {
return sizeof(std::__atomic_base<unsigned char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKwE6encodeES2_Pv(const wchar_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
godot::PtrToArg<const wchar_t*>::encode(p_var, p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_construct(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:94:49

godot::internal::gdextension_interface_variant_construct = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEE8is_validEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector4_claw_dtor(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:41:21
__claw_this_->~Vector4();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameltERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:388:7
return __claw_this_->operator<(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEaNEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String14to_utf8_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:367:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf8_buffer());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDsED1Ev(std::allocator<char16>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API wchar_t __claw__ZNK5godot11CharStringTIwE3getEl(godot::CharStringT<wchar_t>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:96:19
return __claw_this_->get(p_index);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Rb_tree_node_base() {
return sizeof(std::_Rb_tree_node_base);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharProxyE3EE23q_claw_dtor(godot::CharProxy<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:45:7
__claw_this_->~CharProxy();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE9fetch_andEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::Iterator* __claw__ZN5godot16PackedColorArray8IteratormmEv(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:151:28
return (struct godot::PackedColorArray::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16ClassDBSingleton26class_get_integer_constantERKNS_10StringNameES3_(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:74:10
return __claw_this_->class_get_integer_constant(*_class, *name);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array13ConstIteratoreqERKS1_(struct godot::PackedInt64Array::ConstIterator* __claw_this_, const struct godot::PackedInt64Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:179:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMouseButtonMask1() {
return alignof(godot::GetTypeInfo<godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect27grow_byEf(struct godot::Rect2* __claw_this_, real_t p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:223:14
__claw_this_->grow_by(p_amount);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot6Node3D13get_transformEv(struct godot::Transform3D* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:73:14
new (__claw_result_) godot::Transform3D(__claw_this_->get_transform());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1ESt16initializer_listIS1_ERKS2_(std::vector<godot::PropertyInfo>* __claw_this_, std::initializer_list<godot::PropertyInfo>* __l, const std::vector<godot::PropertyInfo>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:678:7
new (__claw_this_) std::vector<godot::PropertyInfo>(*__l, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(godot::TypedArray<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:103:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot12PropertyInfoEEC1Ev(std::__new_allocator<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<godot::PropertyInfo>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D13affine_invertEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:49:7
__claw_this_->affine_invert();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE9fetch_addEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array5clearEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:116:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector2ArrayW_MethodBindings() {
return alignof(godot::PackedVector2Array::_MethodBindings);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_callable_custom_get_userdata() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:170:58

return godot::internal::gdextension_interface_callable_custom_get_userdata;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector31() {
return alignof(godot::PtrToArg<godot::Vector3>);
}
}

namespace godot {
__CLAW_API int8_t __claw__ZNK5godot7VariantcvaEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:221:2
return __claw_this_->operator signed char();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessMode&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array13ConstIteratoreqERKS1_(struct godot::PackedFloat64Array::ConstIterator* __claw_this_, const struct godot::PackedFloat64Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:179:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godot8PtrToArgIRKNS_8Vector2iEE7convertEPKv(struct godot::Vector2i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
new (__claw_result_) godot::Vector2i(godot::PtrToArg<const godot::Vector2i&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40SignalE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Signal>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableC1ERKS0_(godot::Callable* __claw_this_, const godot::Callable* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:96:2
new (__claw_this_) godot::Callable(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23b_claw_dtor(godot::TypedArray<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:78:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKS0_lRKNS_10StringNameERKNS_7VariantE(godot::Array* __claw_this_, const godot::Array* base, int64_t type, const godot::StringName* class_name, const godot::Variant* script) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:149:2
new (__claw_this_) godot::Array(*base, type, *class_name, *script);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_set_keyed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:66:48

godot::internal::gdextension_interface_variant_set_keyed = __claw_value_;
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_construct_object() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:176:55

return godot::internal::gdextension_interface_classdb_construct_object;
}
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::Iterator* __claw__ZN5godot18PackedVector2Array8IteratormmEv(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:154:28
return (struct godot::PackedVector2Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CallableE40SE40_MethodBindings_claw_ctor(struct godot::Callable::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:55:16
new (__claw_this_) godot::Callable::_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::InternalMode>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_8Vector4iEE6encodeES3_Pv(const struct godot::Vector4i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
godot::PtrToArg<const godot::Vector4i&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWDictionary11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::BitField<const godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWEulerOrder1() {
return alignof(godot::GetTypeInfo<const godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKjE6encodeEjPv(uint32_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
godot::PtrToArg<const unsigned int&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40EulerOrder_claw_dtor(godot::VariantCaster<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKvE6encodeES2_Pv(const void* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
godot::PtrToArg<const void*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector21() {
return alignof(godot::PtrToArg<godot::Vector2>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringpLERKS0_(godot::String* __claw_this_, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:458:10
return (godot::String*) (&__claw_this_->operator+=(*p_str));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0char1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<char>&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldINS_18PropertyUsageFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray4fillERKNS_5ColorE(godot::PackedColorArray* __claw_this_, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:116:7
__claw_this_->fill(*value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node11add_siblingEPS0_b(godot::Node* __claw_this_, godot::Node* sibling, bool force_readable_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:142:7
__claw_this_->add_sibling(sibling, force_readable_name);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedByteArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedByteArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedByteArray&>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_construct_object(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:176:55

godot::internal::gdextension_interface_classdb_construct_object = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::Node3D* __claw__ZNK5godot6Node3D18get_parent_node_3dEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:100:10
return (godot::Node3D*) __claw_this_->get_parent_node_3d();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEeOEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_native_struct_size(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:57:52

godot::internal::gdextension_interface_get_native_struct_size = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEEED1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayC1ESt16initializer_listINS_5ColorEE(godot::PackedColorArray* __claw_this_, std::initializer_list<godot::Color>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:207:20
new (__claw_this_) godot::PackedColorArray(*p_init);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_int64_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:144:67

godot::internal::gdextension_interface_packed_int64_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6Rect2iEEC1ERKNS_7VariantE(godot::TypedArray<godot::Rect2i>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:93:1
new (__claw_this_) godot::TypedArray<godot::Rect2i>(*p_variant);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array13ConstIteratorneERKS1_(struct godot::PackedInt64Array::ConstIterator* __claw_this_, const struct godot::PackedInt64Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:180:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB8set_sizeERKNS_7Vector3E(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:62:7
__claw_this_->set_size(*p_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4::Axis>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWTransform2D1() {
return alignof(godot::PtrToArg<godot::Transform2D>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_18PackedFloat64ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:404:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40OrientationE23v_claw_ctor(godot::GetTypeInfo<const godot::Orientation&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<const godot::Orientation&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWNodeWProcessMode1() {
return sizeof(godot::VariantCaster<godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWTransform3D11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>);
}
}

namespace std {
__CLAW_API std::char_traits<char>::char_type __claw__ZNSt11char_traitsIcE12to_char_typeERKi(const std::char_traits<char>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:451:7
return std::char_traits<char>::to_char_type(*__c);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return alignof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1EOS3_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:338:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector2EEaSERKNS_5ArrayE(godot::TypedArray<godot::Vector2>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:90:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_plus_eq_char() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:122:57

return godot::internal::gdextension_interface_string_operator_plus_eq_char;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1EOS4_RKS3_(std::basic_string<char16>* __claw_this_, std::basic_string<char16>* __str, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:716:7
new (__claw_this_) std::basic_string<char16>(std::move(*__str), *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Rect2_claw_dtor(godot::PtrToArg<const godot::Rect2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>::size_type __claw__ZNSt16allocator_traitsISaISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEEE8max_sizeERKS7_(const std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector41() {
return alignof(godot::PtrToArg<godot::Vector4>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZN5godot8PtrToArgIRKNS_15PackedByteArrayEE7convertEPKv(godot::PackedByteArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
new (__claw_result_) godot::PackedByteArray(godot::PtrToArg<const godot::PackedByteArray&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AL_claw_ctor(godot::PtrToArg<long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
new (__claw_this_) godot::PtrToArg<long*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6SignalC1ERKS0_(godot::Signal* __claw_this_, const godot::Signal* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:87:2
new (__claw_this_) godot::Signal(*from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWHorizontalAlignmentR1() {
return sizeof(godot::GetTypeInfo<const godot::HorizontalAlignment&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__is_char0wchar_t1() {
return alignof(std::__is_char<wchar_t>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmEPNS_6ObjectE(godot::String* __claw_result_, godot::String* __claw_this_, godot::Object* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:425:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWequal_to0int1() {
return alignof(std::equal_to<int>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEmIEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1EOS2_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>::_Tp_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:343:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*__a));
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_script_error_with_message() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:56:60

return godot::internal::gdextension_interface_print_script_error_with_message;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0unsignedWchar11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<unsigned char>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array3hasEd(godot::PackedFloat32Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:117:7
return __claw_this_->has(value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Orientation_claw_ctor(godot::VariantCaster<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::VariantCaster<godot::Orientation>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:198:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*__a);
}
}

__CLAW_API int __claw__ZZ25pthread_mutexattr_gettypeE6(const pthread_mutexattr_t* __attr, int* __kind) {
// /usr/include/pthread.h:894:12
return pthread_mutexattr_gettype(__attr, __kind);
}

namespace godot {
__CLAW_API enum godot::EulerOrder __claw__ZN5godot8PtrToArgINS_10EulerOrderEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
return godot::PtrToArg<godot::EulerOrder>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot6Object11get_indexedERKNS_8NodePathE(godot::Variant* __claw_result_, godot::Object* __claw_this_, const godot::NodePath* property_path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:71:10
new (__claw_result_) godot::Variant(__claw_this_->get_indexed(*property_path));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseImE21compare_exchange_weakERmmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIcSt11char_traitsIcEEC1ERKS2_(std::basic_string_view<char>* __claw_this_, const std::basic_string_view<char>* arg0) {
// /usr/include/c++/13/string_view:136:17
new (__claw_this_) std::basic_string_view<char>(*arg0);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot8Vector3icvNS_7Vector3EEv(struct godot::Vector3* __claw_result_, struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:121:2
new (__claw_result_) godot::Vector3(__claw_this_->operator Vector3());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB19smits_intersect_rayERKNS_7Vector3ES3_ff(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_dir, real_t t0, real_t t1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:78:22
return __claw_this_->smits_intersect_ray(*p_from, *p_dir, t0, t1);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D17is_scale_disabledEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:105:7
return __claw_this_->is_scale_disabled();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis15set_euler_scaleERKNS_7Vector3ES3_NS_10EulerOrderE(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_euler, const struct godot::Vector3* p_scale, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:116:7
__claw_this_->set_euler_scale(*p_euler, *p_scale, p_order);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3gtERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:173:22
return __claw_this_->operator>(*p_v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWboolR1() {
return alignof(godot::PtrToArg<const bool&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt9exceptionC2Ev() {
return alignof(std::exception);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8internal23EngineClassRegistrationINS_6Node3DEEC2Ev() {
return sizeof(godot::internal::EngineClassRegistration<godot::Node3D>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNKSt13__atomic_baseIhE4loadESt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName5findnERKNS_6StringEl(godot::StringName* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:273:10
return __claw_this_->findn(*what, from);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZNK5godot7VariantcvNS_10DictionaryEEv(godot::Dictionary* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:252:2
new (__claw_result_) godot::Dictionary(__claw_this_->operator Dictionary());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt64ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:165:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11CharStringTIcEltERKS1_(godot::CharStringT<char>* __claw_this_, const godot::CharStringT<char>* p_right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:113:7
return __claw_this_->operator<(*p_right);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector2Array5rfindERKNS_7Vector2El(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:129:10
return __claw_this_->rfind(*value, from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedVector2Array_claw_dtor(godot::TypedArray<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:116:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZN5godot8PtrToArgINS_4AABBEE7convertEPKv(struct godot::AABB* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
new (__claw_result_) godot::AABB(godot::PtrToArg<godot::AABB>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color5namedERKNS_6StringE(struct godot::Color* __claw_result_, const godot::String* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:193:15
new (__claw_result_) godot::Color(godot::Color::named(*p_name));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEoREc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW__detailW_Node_iterator0stdWpair0constWintWint1WfalseWfalse11() {
return alignof(std::__type_identity<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane15is_equal_approxERKS0_(struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:78:7
return __claw_this_->is_equal_approx(*p_plane);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldINS_4Node21ProcessThreadMessagesEEcvlEv(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8NodePathC2EPKNS_7VariantE() {
return alignof(godot::NodePath);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot12PropertyInfoEEC1ERKS1_(std::allocator<godot::PropertyInfo>* __claw_this_, const std::allocator<godot::PropertyInfo>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<godot::PropertyInfo>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0short11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<short>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type0longWlong1() {
return alignof(std::common_type<long,long>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW_Rb_tree_node_baseP1() {
return alignof(std::__type_identity<std::_Rb_tree_node_base*>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseINSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEEbEC2Ev() {
return alignof(std::__pair_base<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godot8PtrToArgINS_8Vector2iEE7convertEPKv(struct godot::Vector2i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
new (__claw_result_) godot::Vector2i(godot::PtrToArg<godot::Vector2i>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB23intersects_convex_shapeEPKNS_5PlaneEiPKNS_7Vector3Ei(struct godot::AABB* __claw_this_, const struct godot::Plane* p_planes, int p_plane_count, const struct godot::Vector3* p_points, int p_point_count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:80:22
return __claw_this_->intersects_convex_shape(p_planes, p_plane_count, p_points, p_point_count);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40PropertyHint_claw_dtor(godot::PtrToArg<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i6expandERKNS_8Vector2iE(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, const struct godot::Vector2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:188:24
new (__claw_result_) godot::Rect2i(__claw_this_->expand(*p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot16ClassDBSingleton24class_get_enum_constantsERKNS_10StringNameES3_b(godot::PackedStringArray* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* _enum, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:77:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->class_get_enum_constants(*_class, *_enum, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB7grow_byEf(struct godot::AABB* __claw_this_, real_t p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:96:22
__claw_this_->grow_by(p_amount);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedVector3ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedVector3Array&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodePathE23v_claw_ctor(godot::GetTypeInfo<const godot::NodePath&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
new (__claw_this_) godot::GetTypeInfo<const godot::NodePath&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector23absEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:158:25
new (__claw_result_) godot::Vector2(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6formatERKNS_7VariantERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Variant* values, const godot::String* placeholder) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:297:9
new (__claw_result_) godot::String(__claw_this_->format(*values, *placeholder));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40equal_toE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::equal_to<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4Node18ProcessThreadGroupEE6encodeES2_Pv(enum godot::Node::ProcessThreadGroup p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
godot::PtrToArg<godot::Node::ProcessThreadGroup>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedInt32ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedInt32Array&>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8ObjectIDcvlEv(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:46:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedVector2ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedVector2Array&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3i3maxERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_vector3i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:78:11
new (__claw_result_) godot::Vector3i(__claw_this_->max(*p_vector3i));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEEC1El(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::Node::ProcessThreadMessages&>(p_value);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSEPKw(godot::String* __claw_this_, const wchar_t* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:442:10
return (godot::String*) (&__claw_this_->operator=(p_str));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldINS_15MouseButtonMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWCallable1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW_Rb_tree_node0godotWStringName111() {
return sizeof(std::allocator_traits<std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot6Node3D23get_parent_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
return (godot::StringName*) (&godot::Node3D::get_parent_class_static());
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_library_path() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:188:47

return godot::internal::gdextension_interface_get_library_path;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3ArrayneERKNS_7VariantE(godot::PackedVector3Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:132:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3mlERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:158:25
new (__claw_result_) godot::Vector3(__claw_this_->operator*(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWMethodFlagsR11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIdEC2EPKdm() {
return sizeof(std::initializer_list<double>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTransform3D1() {
return sizeof(godot::GetTypeInfo<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWQuaternion1() {
return sizeof(godot::PtrToArg<godot::Quaternion>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWboolP1() {
return alignof(godot::PtrToArg<const bool*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector2i1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNKSt13__atomic_baseIDsE4loadESt12memory_order(std::__atomic_base<char16>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPropertyUsageFlags1() {
return alignof(godot::GetTypeInfo<godot::PropertyUsageFlags>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String19naturalnocasecmp_toERKS0_(godot::String* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:277:10
return __claw_this_->naturalnocasecmp_to(*to);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector3EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RIDC2EPKNS_7VariantE() {
return sizeof(godot::RID);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1EOS4_(std::basic_string<char16>* __claw_this_, std::basic_string<char16>* __str) {
// /usr/include/c++/13/bits/basic_string.h:677:7
new (__claw_this_) std::basic_string<char16>(std::move(*__str));
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVKSt13__atomic_baseIiEcviEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator int();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_(std::basic_string<wchar_t>* __claw_this_, const std::basic_string<wchar_t>* __str) {
// /usr/include/c++/13/bits/basic_string.h:547:7
new (__claw_this_) std::basic_string<wchar_t>(*__str);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_script_error_with_message(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:56:60

godot::internal::gdextension_interface_print_script_error_with_message = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::char_type __claw__ZNSt11char_traitsIwE12to_char_typeERKj(const std::char_traits<wchar_t>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:582:7
return std::char_traits<wchar_t>::to_char_type(*__c);
}
}

namespace godot {
__CLAW_API godot::BitField<godot::MouseButtonMask>* __claw__ZN5godot8PtrToArgINS_8BitFieldINS_15MouseButtonMaskEEEE7convertEPKv(godot::BitField<godot::MouseButtonMask>* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::BitField<godot::MouseButtonMask>(godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node8reparentEPS0_b(godot::Node* __claw_this_, godot::Node* new_parent, bool keep_global_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:147:7
__claw_this_->reparent(new_parent, keep_global_transform);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_to_utf8_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:115:50

return godot::internal::gdextension_interface_string_to_utf8_chars;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedInt64ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedInt64Array&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal38add_engine_class_registration_callbackEPFvvE(godot::internal::EngineClassRegistrationCallback p_callback) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:118:6
godot::internal::add_engine_class_registration_callback(p_callback);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1EmRKS3_(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>::size_type __n, const std::list<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:772:7
new (__claw_this_) std::list<godot::StringName>(__n, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWQuaternion1() {
return sizeof(godot::GetTypeInfo<godot::Quaternion>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVerticalAlignment1() {
return alignof(godot::GetTypeInfo<const godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40JoyAxisE23v_claw_dtor(godot::GetTypeInfo<godot::JoyAxis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_17PackedStringArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedStringArray>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot10StringNameEEC1Ev(std::__new_allocator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<godot::StringName>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3ltERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:171:22
return __claw_this_->operator<(*p_v);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSEPKc(godot::String* __claw_this_, const char* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:441:10
return (godot::String*) (&__claw_this_->operator=(p_str));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWError1() {
return sizeof(godot::GetTypeInfo<godot::Error>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS3_(std::basic_string<wchar_t>* __claw_this_, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:535:7
new (__claw_this_) std::basic_string<wchar_t>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWDuplicateFlagsR1() {
return sizeof(godot::GetTypeInfo<godot::Node::DuplicateFlags&>);
}
}

namespace std {
__CLAW_API bool __claw__ZSt24atomic_flag_test_and_setPVSt11atomic_flag(struct std::atomic_flag* __a) {
// /usr/include/c++/13/atomic:1251:3
return std::atomic_flag_test_and_set(__a);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Plane19intersects_ray_bindERKNS_7Vector3ES3_(godot::Variant* __claw_result_, struct godot::Plane* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_dir) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:68:10
new (__claw_result_) godot::Variant(__claw_this_->intersects_ray_bind(*p_from, *p_dir));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC2Ev() {
return sizeof(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String19is_valid_html_colorEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:353:7
return __claw_this_->is_valid_html_color();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8BitFieldINS_4Node21ProcessThreadMessagesEEEE6encodeES4_Pv(godot::BitField<godot::Node::ProcessThreadMessages>* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4SideEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Side&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNKSt13__atomic_baseIxEcvxEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator long long();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1Ev(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:536:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS4_(std::basic_string<char32>* __claw_this_, const std::basic_string<char32>* __str) {
// /usr/include/c++/13/bits/basic_string.h:547:7
new (__claw_this_) std::basic_string<char32>(*__str);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array3setElRKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, int64_t index, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:112:7
__claw_this_->set(index, *value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16DefaultAllocator4freeEPv(void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:134:30
godot::DefaultAllocator::free(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot11Transform2DcvNS_6StringEEv(godot::String* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:125:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWPlane11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Plane>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWiterator0stdWrandom_access_iterator_tagWbool1() {
return alignof(std::iterator<std::random_access_iterator_tag,bool>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3plERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:154:25
new (__claw_result_) godot::Vector3(__claw_this_->operator+(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot6Object15get_method_listEv(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:73:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->get_method_list());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3idvEi(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:107:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator/(p_scalar));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_float32_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:137:64

godot::internal::gdextension_interface_packed_float32_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D16translated_localERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:93:14
new (__claw_result_) godot::Transform2D(__claw_this_->translated_local(*p_offset));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::size_type __claw__ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEE8max_sizeERKSA_(const std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharProxyE3EE23C_claw_dtor(godot::CharProxy<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:45:7
__claw_this_->~CharProxy();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEEC2Ev() {
return alignof(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0unsignedWint1() {
return sizeof(godot::GetTypeInfo<unsigned int>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Node_insert_return0stdW__detailW_Node_iterator0stdWpair0constWgodotWStringNameWgodotWMethodBindP1WfalseWfalse1WstdW_Node_handle0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1111() {
return alignof(std::_Node_insert_return<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,std::_Node_handle<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2E40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::PtrToArg<godot::Vector2::Axis>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0longP1() {
return sizeof(godot::PtrToArg<long*>);
}
}

namespace std {
__CLAW_API std::basic_string_view<char>::size_type __claw__ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv(std::basic_string_view<char>* __claw_this_) {
// /usr/include/c++/13/string_view:229:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEC1ERKS2_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Ref<godot::MultiplayerAPI>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:160:2
new (__claw_this_) godot::Ref<godot::MultiplayerAPI>(*p_from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6ObjectD1Ev(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:145:10
__claw_this_->~Object();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect210intersectsERKS0_b(struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect, const bool p_include_borders) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:56:14
return __claw_this_->intersects(*p_rect, p_include_borders);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMouseButtonMaskR1() {
return alignof(godot::GetTypeInfo<const godot::MouseButtonMask&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKbE6encodeEbPv(bool p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
godot::PtrToArg<const bool&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray13ConstIteratorC1EPKNS_5ColorE(struct godot::PackedColorArray::ConstIterator* __claw_this_, const struct godot::Color* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:184:3
new (__claw_this_) godot::PackedColorArray::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40StringNameE23v_claw_ctor(godot::GetTypeInfo<const godot::StringName&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
new (__claw_this_) godot::GetTypeInfo<const godot::StringName&>();
}
}

namespace godot {
__CLAW_API enum godot::EulerOrder __claw__ZN5godot13VariantCasterINS_10EulerOrderEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
return godot::VariantCaster<godot::EulerOrder>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18GDExtensionBinding16initialize_levelEPvi(void* p_userdata, int p_level) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:228:14
godot::GDExtensionBinding::initialize_level(p_userdata, p_level);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__truth_typeE3EE23Vb1_claw_dtor(std::__truth_type<true>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:81:12
__claw_this_->~__truth_type();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0short1() {
return alignof(godot::GetTypeInfo<short>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWRIDR1() {
return alignof(godot::GetTypeInfo<const godot::RID&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color5set_hEf(struct godot::Color* __claw_this_, float p_h) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:216:22
__claw_this_->set_h(p_h);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__atomic_flag_base_claw_dtor(struct std::__atomic_flag_base* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:200:10
__claw_this_->~__atomic_flag_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7JoyAxisEE6encodeES1_Pv(enum godot::JoyAxis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
godot::PtrToArg<godot::JoyAxis>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSC_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, const std::unordered_map<godot::StringName,godot::MethodBind*>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:188:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*arg0);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector325cubic_interpolate_in_timeERKS0_S2_S2_fRKfS4_S4_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_b, const struct godot::Vector3* p_pre_a, const struct godot::Vector3* p_post_b, const real_t p_weight, const real_t* p_b_t, const real_t* p_pre_a_t, const real_t* p_post_b_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:111:25
new (__claw_result_) godot::Vector3(__claw_this_->cubic_interpolate_in_time(*p_b, *p_pre_a, *p_post_b, p_weight, *p_b_t, *p_pre_a_t, *p_post_b_t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedFloat64Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:114:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind18set_instance_classENS_10StringNameE(godot::MethodBind* __claw_this_, godot::StringName* p_class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:101:22
__claw_this_->set_instance_class(*p_class);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNKSt13__atomic_baseIDiEcvDiEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator char32_t();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::DuplicateFlags>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKiE6encodeEiPv(int32_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
godot::PtrToArg<const int&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1r_claw_dtor(godot::PtrToArg<const char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot11Transform3D5xformERKNS_4AABBE(struct godot::AABB* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:87:22
new (__claw_result_) godot::AABB(__claw_this_->xform(*p_aabb));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIiEC2EPKim() {
return alignof(std::initializer_list<int>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EE6resizeEmRKS1_(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>::size_type __new_size, const std::vector<godot::StringName>::value_type* __x) {
// /usr/include/c++/13/bits/stl_vector.h:1034:7
__claw_this_->resize(__new_size, *__x);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40Object_claw_dtor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::Object*>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Aq_claw_dtor(godot::PtrToArg<char16*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Quaternion_claw_ctor(godot::PtrToArg<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
new (__claw_this_) godot::PtrToArg<godot::Quaternion>();
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot4Node31_gde_binding_reference_callbackEPvS1_i() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
return godot::Node::_gde_binding_reference_callback();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1Ev(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:530:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRKNS_15MouseButtonMaskEEC2El() {
return sizeof(godot::BitField<const godot::MouseButtonMask&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_latin1_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:104:57

godot::internal::gdextension_interface_string_new_with_latin1_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWQuaternion1() {
return alignof(godot::GetTypeInfo<godot::Quaternion>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Transform2D_claw_dtor(godot::PtrToArg<const godot::Transform2D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color5set_sEf(struct godot::Color* __claw_this_, float p_s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:217:22
__claw_this_->set_s(p_s);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIsE23compare_exchange_strongERssSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5eraseERKS1_(godot::List<godot::PropertyInfo>* __claw_this_, const struct godot::PropertyInfo* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:447:7
return __claw_this_->erase(*value);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColorplERKS0_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:77:8
new (__claw_result_) godot::Color(__claw_this_->operator+(*p_color));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::InputEvent* __claw__ZNK5godot3RefINS_10InputEventEEdeEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:91:20
return (godot::InputEvent*) __claw_this_->operator*();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node15_shortcut_inputERKNS_3RefINS_10InputEventEEE(godot::Node* __claw_this_, const godot::Ref<godot::InputEvent>* event) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:285:15
__claw_this_->_shortcut_input(*event);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWDictionary11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_7Vector3EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot12PropertyInfo9from_dictERKNS_10DictionaryE(struct godot::PropertyInfo* __claw_result_, const godot::Dictionary* p_dict) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:86:22
new (__claw_result_) godot::PropertyInfo(godot::PropertyInfo::from_dict(*p_dict));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE8fetch_orElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0godotWStringName11() {
return sizeof(std::__type_identity<std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayC1Ev(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:101:2
new (__claw_this_) godot::PackedFloat32Array();
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot8NodePath11get_subnameEl(godot::StringName* __claw_result_, godot::NodePath* __claw_this_, int64_t idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:100:13
new (__claw_result_) godot::StringName(__claw_this_->get_subname(idx));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEeOEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Array_claw_ctor(godot::PtrToArg<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
new (__claw_this_) godot::PtrToArg<godot::Array>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE8fetch_orElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEED1Ev(std::basic_string<char32>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:803:7
__claw_this_->~basic_string();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWlongWlong1() {
return alignof(std::__hash_base<unsigned long,long long>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIjEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot7VariantEED1Ev(std::__new_allocator<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ColorltERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:203:22
return __claw_this_->operator<(*p_color);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array7reverseEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:118:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIcEC2Ev() {
return sizeof(std::allocator<char>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40Variant_claw_ctor(std::__type_identity<std::allocator<godot::Variant>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<godot::Variant>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1ERKS2_(std::vector<godot::StringName>* __claw_this_, const std::vector<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:542:7
new (__claw_this_) std::vector<godot::StringName>(*__a);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColormlERKS0_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:84:8
new (__claw_result_) godot::Color(__claw_this_->operator*(*p_color));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedFloat32Array1() {
return alignof(godot::PtrToArg<godot::PackedFloat32Array>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1ERKS3_(std::vector<godot::StringName>* __claw_this_, const std::vector<godot::StringName>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:601:7
new (__claw_this_) std::vector<godot::StringName>(*__x);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEEneEPKS1_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Node3DGizmo* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:77:22
return __claw_this_->operator!=(p_ptr);
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZNK5godot7VariantcvNS_8CallableEEv(godot::Callable* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:250:2
new (__claw_result_) godot::Callable(__claw_this_->operator Callable());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC2Ev() {
return sizeof(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12ctype_bynameIcEC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm(std::ctype_byname<char>* __claw_this_, const std::string* __s, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1515:7
new (__claw_this_) std::ctype_byname<char>(*__s, __refs);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_14ClockDirectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::ClockDirection>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node19set_scene_file_pathERKNS_6StringE(godot::Node* __claw_this_, const godot::String* scene_file_path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:177:7
__claw_this_->set_scene_file_path(*scene_file_path);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5Rect2EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Rect2&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiEC1Ev(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:107:17
new (__claw_this_) godot::CharStringT<char32>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::PropertyUsageFlags&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p0_claw_ctor(std::common_type* __claw_this_) {
// /usr/include/c++/13/type_traits:2294:12
new (__claw_this_) std::common_type();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2gtERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:151:7
return __claw_this_->operator>(*p_vec2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIaEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<char>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return alignof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_dtor(struct godot::ClassDB::ClassInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:89:9
__claw_this_->~ClassInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_recursive_hash(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:76:53

godot::internal::gdextension_interface_variant_recursive_hash = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40pairE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23Vb0E23b_claw_dtor(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12
__claw_this_->~pair();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math31cubic_interpolate_angle_in_timeEdddddddd(double p_from, double p_to, double p_pre, double p_post, double p_weight, double p_to_t, double p_pre_t, double p_post_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:487:15
return godot::Math::cubic_interpolate_angle_in_time(p_from, p_to, p_pre, p_post, p_weight, p_to_t, p_pre_t, p_post_t);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNodeWProcessMode1() {
return sizeof(godot::PtrToArg<godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0shortP1() {
return sizeof(godot::PtrToArg<short*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS3_(std::basic_string<char32>* __claw_this_, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:535:7
new (__claw_this_) std::basic_string<char32>(*__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEoREj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API std::vector<godot::Variant>* __claw_get_godotWMethodInfo_default_arguments(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return (std::vector<godot::Variant>*)&__claw_this_->default_arguments;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_18PackedFloat64ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:434:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23s_claw_dtor(godot::PtrToArg<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::initializer_list<long>::size_type __claw__ZNKSt16initializer_listIlE4sizeEv(std::initializer_list<long>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_5PlaneEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MouseButtonE23v_claw_dtor(godot::GetTypeInfo<godot::MouseButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedColorArray_claw_ctor(godot::PtrToArg<const godot::PackedColorArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
new (__claw_this_) godot::PtrToArg<const godot::PackedColorArray&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEmIEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZN5godot16PackedInt64ArrayaSEOS0_(godot::PackedInt64Array* __claw_this_, godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:134:20
return (godot::PackedInt64Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array4fillERKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:118:7
__claw_this_->fill(*value);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVKSt13__atomic_baseIwE4loadESt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWEulerOrderR1() {
return alignof(godot::GetTypeInfo<const godot::EulerOrder&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal20free_c_property_listEPi(int* plist) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:115:6
godot::internal::free_c_property_list(plist);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2iC1Ev(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:236:2
new (__claw_this_) godot::Rect2i();
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot11CharStringTIDsEixEl(godot::CharStringT<char16>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:98:26
return (char16*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWOrientationR1() {
return sizeof(godot::GetTypeInfo<godot::Orientation&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEaSEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector2iE40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeD1Ev(std::locale* __claw_this_) {
// /usr/include/c++/13/bits/locale_classes.h:213:5
__claw_this_->~locale();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array4sizeEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:161:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_14ClockDirectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::ClockDirection>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector3i_claw_dtor(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:42:21
__claw_this_->~Vector3i();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWPlane11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Plane>>);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot10ProjectioncvNS_11Transform3DEEv(struct godot::Transform3D* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:133:2
new (__claw_result_) godot::Transform3D(__claw_this_->operator Transform3D());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Dictionary7has_allERKNS_5ArrayE(godot::Dictionary* __claw_this_, const godot::Array* keys) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:101:7
return __claw_this_->has_all(*keys);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt32ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedInt32Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:55:16
new (__claw_this_) godot::PackedInt32Array::_MethodBindings();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13unordered_mapIN5godot10StringNameENS0_7ClassDB9ClassInfoESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return sizeof(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector4iR1() {
return alignof(godot::PtrToArg<const godot::Vector4i&>);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::ConstIterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratormmEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:176:33
return (struct godot::List<godot::PropertyInfo>::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWchar32R1() {
return sizeof(godot::GetTypeInfo<const char32&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWSignal1() {
return alignof(godot::PtrToArg<godot::Signal>);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZN5godot7ClassDB16class_get_signalERKNS_10StringNameES3_(godot::Dictionary* __claw_result_, const godot::StringName* _class, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::Dictionary(godot::ClassDB::class_get_signal(*_class, *signal));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEmmEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array12append_arrayERKS0_(godot::Array* __claw_this_, const godot::Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:169:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_18PropertyUsageFlagsEE10clear_flagES2_(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_, enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEmmEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot6MemoryC2Ev() {
return alignof(godot::Memory);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWSide1() {
return sizeof(godot::VariantCaster<godot::Side>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23rE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<char>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<char>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasismIERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:142:22
__claw_this_->operator-=(*p_matrix);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iS1_RKNS_6StringEbb(const char* p_function, const char* p_file, int p_line, const char* p_error, const godot::String* p_message, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:46:6
godot::_err_print_error(p_function, p_file, p_line, p_error, *p_message, p_editor_notify, p_is_warning);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_4AABBE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::AABB* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:415:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot16ClassDBSingletonC2EPKc() {
return alignof(godot::ClassDBSingleton);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5Rect2EEaSERKNS_5ArrayE(godot::TypedArray<godot::Rect2>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:92:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt11atomic_flagD1Ev(struct std::atomic_flag* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:215:5
__claw_this_->~atomic_flag();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseImE21compare_exchange_weakERmmSt12memory_orderS2_(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKiiEEC1Ev(std::__new_allocator<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::pair<const int,int>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicImEC2Ev() {
return alignof(std::atomic<unsigned long>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2mlERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:132:10
new (__claw_result_) godot::Vector2(__claw_this_->operator*(*p_v1));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array7reverseEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:118:7
__claw_this_->reverse();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB16class_has_methodERKNS_10StringNameES3_b(const godot::StringName* _class, const godot::StringName* method, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_has_method(*_class, *method, no_inheritance);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector2i1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect218intersects_segmentERKNS_7Vector2ES3_PS1_S4_(struct godot::Rect2* __claw_this_, const godot::Point2* p_from, const godot::Point2* p_to, godot::Point2* r_pos, godot::Point2* r_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:132:7
return __claw_this_->intersects_segment(*p_from, *p_to, r_pos, r_normal);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2ltERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:150:7
return __claw_this_->operator<(*p_vec2);
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5frontEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:263:26
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->front();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC2ENS4_12__sv_wrapperERKS3_() {
return alignof(std::basic_string<char32>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4_claw_ctor(godot::PtrToArg<godot::Vector4>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
new (__claw_this_) godot::PtrToArg<godot::Vector4>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt13_Rb_tree_nodeIN5godot10StringNameEEEC2Ev() {
return sizeof(std::allocator<std::_Rb_tree_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector3iEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Vector3i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:95:1
new (__claw_this_) godot::TypedArray<godot::Vector3i>(*p_array);
}
}

namespace godot {
__CLAW_API uint32_t __claw_get_godotWPropertyInfo_usage(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return __claw_this_->usage;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0char161Wchar161() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<char16>,char16>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind18set_argument_namesERKSt6vectorINS_10StringNameESaIS2_EE(godot::MethodBind* __claw_this_, const std::vector<godot::StringName>* p_names) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:110:7
__claw_this_->set_argument_names(*p_names);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_4NodeEEC1Ev(godot::internal::EngineClassRegistration<godot::Node>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:124:2
new (__claw_this_) godot::internal::EngineClassRegistration<godot::Node>();
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB10get_centerEv(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:123:25
new (__claw_result_) godot::Vector3(__claw_this_->get_center());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Vector4i::Axis __claw__ZNK5godot8Vector4i14min_axis_indexEv(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:73:17
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWTransform3D_basis(struct godot::Transform3D* __claw_this_, struct godot::Basis* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:42:21

__claw_this_->basis = *__claw_value_;
}
}

namespace godot {
__CLAW_API enum godot::Vector2i::Axis __claw__ZNK5godot8Vector2i14min_axis_indexEv(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:74:32
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2plERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:128:10
new (__claw_result_) godot::Vector2(__claw_this_->operator+(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWJoyAxisR1() {
return sizeof(godot::GetTypeInfo<godot::JoyAxis&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23sE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<unsigned short>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<unsigned short>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEEeqEPKS1_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Node3DGizmo* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:74:22
return __claw_this_->operator==(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringplEDi(godot::String* __claw_result_, godot::String* __claw_this_, char32 p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:457:9
new (__claw_result_) godot::String(__claw_this_->operator+(p_char));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_10QuaternionEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Quaternion>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot15PackedByteArray18decompress_dynamicEll(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_, int64_t max_output_size, int64_t compression_mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:176:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->decompress_dynamic(max_output_size, compression_mode));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_file_access_get_buffer(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:130:52

godot::internal::gdextension_interface_file_access_get_buffer = __claw_value_;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC2ERNS_16_Hashtable_allocIS6_EE() {
return sizeof(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIcEC1Ev(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<char>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEEneEPKS1_(godot::Ref<godot::Tween>* __claw_this_, const godot::Tween* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:77:22
return __claw_this_->operator!=(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node26_gde_binding_free_callbackEPvS1_S1_(void* p_token, void* p_instance, void* p_binding) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
godot::Node::_gde_binding_free_callback(p_token, p_instance, p_binding);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4Node18ProcessThreadGroupEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessThreadGroup>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant5callpERKNS_10StringNameEPPKS0_iRS0_Ri(godot::Variant* __claw_this_, const godot::StringName* method, const godot::Variant** args, int argcount, godot::Variant* r_ret, int* r_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:270:7
__claw_this_->callp(*method, args, argcount, *r_ret, *r_error);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1() {
return sizeof(std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayC1ERKS0_(godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:102:2
new (__claw_this_) godot::PackedFloat64Array(*from);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZN5godotmlERKfRKNS_10QuaternionE(struct godot::Quaternion* __claw_result_, const real_t* p_real, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:232:27
new (__claw_result_) godot::Quaternion(godot::operator*(*p_real, *p_quaternion));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color11from_stringERKNS_6StringERKS0_(struct godot::Color* __claw_result_, const godot::String* p_string, const struct godot::Color* p_default) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:199:15
new (__claw_result_) godot::Color(godot::Color::from_string(*p_string, *p_default));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName19is_valid_ip_addressEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:340:7
return __claw_this_->is_valid_ip_address();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0char1() {
return sizeof(godot::PtrToArg<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWvoidP1() {
return sizeof(godot::PtrToArg<const void*>);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE9decrementEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:84:20
return __claw_this_->decrement();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8ObjectIDE(godot::Variant* __claw_this_, const godot::ObjectID* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:200:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE9decrementEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:84:20
return __claw_this_->decrement();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIcEC1Ec(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<char>(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector3ArrayW_MethodBindings() {
return alignof(godot::PackedVector3Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot7Vector35outerERKS0_(struct godot::Basis* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_with) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:123:8
new (__claw_result_) godot::Basis(__claw_this_->outer(*p_with));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_vector2_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:147:64

godot::internal::gdextension_interface_packed_vector2_array_operator_index = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0boolWfalse1() {
return sizeof(std::integral_constant<bool,false>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWBasis1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsEC1ERKS1_(godot::CharStringT<char16>* __claw_this_, const godot::CharStringT<char16>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:108:17
new (__claw_this_) godot::CharStringT<char16>(*p_str);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40CornerE23v_claw_dtor(godot::GetTypeInfo<const godot::Corner&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot7CowDataIDiE4ptrwEv(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:178:20
return (char32*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedVector2Array1() {
return alignof(godot::PtrToArg<godot::PackedVector2Array>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIhEC2EPKhm() {
return alignof(std::initializer_list<unsigned char>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_PNS1_6ObjectEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return alignof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__atomic_flag_base() {
return sizeof(std::__atomic_flag_base);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw_get_godotWTransform3D_basis(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:42:21

return (struct godot::Basis*)&__claw_this_->basis;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEppEi(std::__atomic_base<int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0shortP1() {
return alignof(godot::PtrToArg<short*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWctype_base() {
return alignof(std::ctype_base);
}
}

namespace std {
__CLAW_API void __claw__ZNSt10error_codeC1Ev(std::error_code* __claw_this_) {
// /usr/include/c++/13/system_error:230:5
new (__claw_this_) std::error_code();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableC1EPNS_6ObjectERKNS_10StringNameE(godot::Callable* __claw_this_, godot::Object* object, const godot::StringName* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:97:2
new (__claw_this_) godot::Callable(object, *method);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEC2Ev() {
return alignof(std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::VariantCaster<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWErrorR1() {
return sizeof(godot::GetTypeInfo<const godot::Error&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags>>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_orderS2_(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEppEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessThreadGroup __claw__ZN5godot13VariantCasterINS_4Node18ProcessThreadGroupEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
return godot::VariantCaster<godot::Node::ProcessThreadGroup>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Af_claw_ctor(godot::PtrToArg<float*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
new (__claw_this_) godot::PtrToArg<float*>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBasis1() {
return alignof(godot::PtrToArg<godot::Basis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKaE6encodeEaPv(int8_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
godot::PtrToArg<const char&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3iR1() {
return alignof(godot::GetTypeInfo<const godot::Vector3i&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWJoyButton1() {
return alignof(godot::VariantCaster<godot::JoyButton>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedInt64Array1() {
return alignof(godot::PtrToArg<godot::PackedInt64Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40ClockDirection_claw_dtor(godot::PtrToArg<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~PtrToArg();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ColorEEaSERKNS_5ArrayE(godot::TypedArray<godot::Color>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:102:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEppEi(std::__atomic_base<int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBitField0godotWNodeWProcessThreadMessages11() {
return alignof(godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVKSt13__atomic_baseIbEcvbEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator bool();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EOSC_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:191:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(std::move(*arg0));
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEppEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB7get_endEv(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:119:25
new (__claw_result_) godot::Vector3(__claw_this_->get_end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Error_claw_dtor(godot::VariantCaster<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D6rotateERKNS_7Vector3Ed(godot::Node3D* __claw_this_, const struct godot::Vector3* axis, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:125:7
__claw_this_->rotate(*axis, angle);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray8IteratoreqERKS1_(struct godot::PackedColorArray::Iterator* __claw_this_, const struct godot::PackedColorArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:156:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godotmlEfRKNS_8Vector3iE(struct godot::Vector3i* __claw_result_, const float p_scalar, const struct godot::Vector3i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:225:25
new (__claw_result_) godot::Vector3i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot5Color7to_htmlEb(godot::String* __claw_result_, struct godot::Color* __claw_this_, bool p_alpha) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:57:9
new (__claw_result_) godot::String(__claw_this_->to_html(p_alpha));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1ERKS2_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, const std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:321:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKhE6encodeEhPv(uint8_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
godot::PtrToArg<const unsigned char&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessThreadGroup1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessThreadGroup>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return alignof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKaE6encodeES2_Pv(const int8_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
godot::PtrToArg<const char*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZN5godot18PackedVector3Array9duplicateEv(godot::PackedVector3Array* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:127:21
new (__claw_result_) godot::PackedVector3Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIjE21compare_exchange_weakERjjSt12memory_orderS2_(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEEeqEPKS1_(godot::Ref<godot::Tween>* __claw_this_, const godot::Tween* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:74:22
return __claw_this_->operator==(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWHorizontalAlignment1() {
return alignof(godot::GetTypeInfo<const godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object12notificationEib(godot::Object* __claw_this_, int32_t what, bool reversed) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:76:7
__claw_this_->notification(what, reversed);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind14set_hint_flagsEj(godot::MethodBind* __claw_this_, uint32_t p_hint_flags) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:109:22
__claw_this_->set_hint_flags(p_hint_flags);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Projection10get_aspectEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:106:9
return __claw_this_->get_aspect();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayC1EOS0_(godot::PackedStringArray* __claw_this_, godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:106:2
new (__claw_this_) godot::PackedStringArray(std::move(*other));
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWchar_traits0wchar_t1() {
return alignof(std::char_traits<wchar_t>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0constWgodotWStringName1() {
return alignof(std::__type_identity<const godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7VariantC2Ev() {
return sizeof(godot::Variant);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4lerpEddd(double minv, double maxv, double t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:402:15
return godot::Math::lerp(minv, maxv, t);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1w_claw_ctor(godot::PtrToArg<const char32*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
new (__claw_this_) godot::PtrToArg<const char32*>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWEulerOrder1() {
return sizeof(godot::GetTypeInfo<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_17VerticalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::VerticalAlignment>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace chrono {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2Ev() {
return sizeof(std::chrono::duration<long,std::ratio<1,1000000000>>);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23l_claw_dtor(std::__success_type<unsigned long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
__claw_this_->~__success_type();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIsEC2Ev() {
return sizeof(std::atomic<short>);
}
}

namespace std {
__CLAW_API std::ctype<char>::char_type __claw__ZNKSt5ctypeIcE5widenEc(std::ctype<char>* __claw_this_, char __c) {
// /usr/include/c++/13/bits/locale_facets.h:880:7
return __claw_this_->widen(__c);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE9fetch_xorEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_8NodePathE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:394:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRNS_15KeyModifierMaskEE8has_flagES2_(godot::BitField<godot::KeyModifierMask&>* __claw_this_, enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector3C1Ev(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:179:17
new (__claw_this_) godot::Vector3();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__ptr_traits_ptr_to0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1PWstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return alignof(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWcharP1() {
return alignof(godot::PtrToArg<unsigned char*>);
}
}

namespace godot {
__CLAW_API godot::CharProxy<char16>* __claw__ZN5godot11CharStringTIDsEixEl(godot::CharProxy<char16>* __claw_result_, godot::CharStringT<char16>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:105:30
new (__claw_result_) godot::CharProxy<char16>(__claw_this_->operator[](p_index));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWTransform2D() {
return alignof(godot::Transform2D);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_10QuaternionEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Quaternion>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIxEC2Ev() {
return alignof(std::atomic<long long>);
}
}

namespace godot {
__CLAW_API const godot::List<godot::PropertyInfo>::Element* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element4prevEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:79:33
return (const godot::List<godot::PropertyInfo>::Element*) __claw_this_->prev();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWCallableR1() {
return sizeof(godot::GetTypeInfo<const godot::Callable&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector2i_claw_dtor(godot::PtrToArg<const godot::Vector2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIfEC1ERKNS_7VariantE(godot::TypedArray<float>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:87:1
new (__claw_this_) godot::TypedArray<float>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_ctor(godot::GetTypeInfo<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3i>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE231E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<const godot::StringName>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<const godot::StringName>();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEmmEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_godot_version() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:47:48

return godot::internal::gdextension_interface_get_godot_version;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEmmEi(std::__atomic_base<wchar_t>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray8IteratorneERKS1_(struct godot::PackedColorArray::Iterator* __claw_this_, const struct godot::PackedColorArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:157:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIiEaSERKNS_5ArrayE(godot::TypedArray<int>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:84:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String16is_absolute_pathEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:335:7
return __claw_this_->is_absolute_path();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWAABBR1() {
return sizeof(godot::GetTypeInfo<const godot::AABB&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array5eraseERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:174:7
__claw_this_->erase(*value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8Vector2iE(godot::Variant* __claw_this_, const struct godot::Vector2i* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:182:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API uint32_t __claw_get_godotWMethodInfo_flags(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return __claw_this_->flags;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node8_processEd(godot::Node* __claw_this_, double delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:278:15
__claw_this_->_process(delta);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWTransform3D() {
return alignof(godot::Transform3D);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1ERKNS_6StringE(godot::NodePath* __claw_this_, const godot::String* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:88:2
new (__claw_this_) godot::NodePath(*from);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE8exchangeEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWStringName11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_set__ZN5godot7WrappedC2ENS_10StringNameE__owner(godot::Wrapped* __claw_this_, godot::GodotObject* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:49:7

__claw_this_->_owner = __claw_value_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13unordered_mapIN5godot10StringNameENS0_7ClassDB9ClassInfoESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return alignof(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math10lerp_angleEfff(float p_from, float p_to, float p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:411:14
return godot::Math::lerp_angle(p_from, p_to, p_weight);
}
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot8Vector4iixEi(struct godot::Vector4i* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:63:32
return (int32_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace std {
__CLAW_API bool __claw__ZSt33atomic_flag_test_and_set_explicitPSt11atomic_flagSt12memory_order(struct std::atomic_flag* __a, std::memory_order __m) {
// /usr/include/c++/13/atomic:1208:3
return std::atomic_flag_test_and_set_explicit(__a, __m);
}
}

namespace godot {
__CLAW_API const real_t* __claw__ZNK5godot7Vector3ixEi(struct godot::Vector3* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:63:31
return (real_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection17create_orthogonalEffffff(struct godot::Projection* __claw_result_, real_t p_left, real_t p_right, real_t p_bottom, real_t p_top, real_t p_znear, real_t p_zfar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:90:20
new (__claw_result_) godot::Projection(godot::Projection::create_orthogonal(p_left, p_right, p_bottom, p_top, p_znear, p_zfar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array4fillERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:173:7
__claw_this_->fill(*value);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot6Node3D28_gde_binding_create_callbackEPvS1_(void* p_token, void* p_instance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
return (void*) godot::Node3D::_gde_binding_create_callback(p_token, p_instance);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0boolWtrue1() {
return alignof(std::integral_constant<bool,true>);
}
}

namespace godot {
__CLAW_API uint8_t* __claw__ZN5godot15PackedByteArrayixEl(godot::PackedByteArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:216:11
return (uint8_t*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__truth_type0true1() {
return sizeof(std::__truth_type<true>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7Vector4EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_11Node3DGizmoEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Node3DGizmo>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5PlaneEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Plane&>::get_class_info());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40char_traitsE3EE23W_claw_dtor(__gnu_cxx::char_traits<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:111:12
__claw_this_->~char_traits();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZN5godot5ArrayaSEOS0_(godot::Array* __claw_this_, godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:218:9
return (godot::Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5BasisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Basis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot8Vector4i6lengthEv(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:85:24
return __claw_this_->length();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIDiEC2Ev() {
return alignof(std::atomic<char32>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6String11parse_utf16EPKDsl(godot::String* __claw_this_, const char16* from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:381:7
__claw_this_->parse_utf16(from, len);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mmRKS3_(std::basic_string<char>* __claw_this_, const std::basic_string<char>* __str, std::basic_string<char>::size_type __pos, std::basic_string<char>::size_type __n, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:599:7
new (__claw_this_) std::basic_string<char>(*__str, __pos, __n, *__a);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color5hex64Em(struct godot::Color* __claw_result_, uint64_t p_hex) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:190:15
new (__claw_result_) godot::Color(godot::Color::hex64(p_hex));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIlE5storeElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::Iterator* __claw__ZN5godot18PackedFloat32Array8IteratormmEv(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:149:28
return (struct godot::PackedFloat32Array::Iterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKcE6encodeES2_Pv(const char* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
godot::PtrToArg<const char*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::ConstIterator* __claw__ZN5godot18PackedVector2Array13ConstIteratormmEv(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:179:33
return (struct godot::PackedVector2Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261c_claw_dtor(godot::PtrToArg<const unsigned char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse111() {
return alignof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_code_cache0false1() {
return alignof(std::__detail::_Hash_node_code_cache<false>);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIaE21compare_exchange_weakERaaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40AABBE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::AABB>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot9CharProxyIDiEC2ERKlRNS_7CowDataIDiEE() {
return alignof(godot::CharProxy<char32>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4imlEi(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:107:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator*(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot9CharProxyIcEadEv(godot::CharProxy<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:70:26
return (const char*) __claw_this_->operator&();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt20_List_const_iteratorIN5godot10StringNameEEC2Ev() {
return sizeof(std::_List_const_iterator<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedVector3Array_claw_dtor(godot::PtrToArg<const godot::PackedVector3Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis6from_zERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_z) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:62:7
__claw_this_->from_z(*p_z);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Dictionary12is_read_onlyEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:110:7
return __claw_this_->is_read_only();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MouseButtonE23v_claw_ctor(godot::GetTypeInfo<const godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::GetTypeInfo<const godot::MouseButton>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRNS_4Node21ProcessThreadMessagesEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot17PackedStringArray4findERKNS_6StringEl(godot::PackedStringArray* __claw_this_, const godot::String* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:126:10
return __claw_this_->find(*value, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_10StringNameEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::StringName>);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot10Projection7inverseEv(struct godot::Projection* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:117:13
new (__claw_result_) godot::Projection(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math12inverse_lerpEfff(float p_from, float p_to, float p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:589:14
return godot::Math::inverse_lerp(p_from, p_to, p_value);
}
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName11sha1_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:317:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->sha1_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector3ArrayWIterator() {
return alignof(godot::PackedVector3Array::Iterator);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedInt64ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedInt64Array&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColormLERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:86:7
__claw_this_->operator*=(*p_color);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1l_claw_ctor(godot::PtrToArg<const unsigned long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
new (__claw_this_) godot::PtrToArg<const unsigned long*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12__mutex_baseC2Ev() {
return sizeof(std::__mutex_base);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectIDneERKS0_(godot::ObjectID* __claw_this_, const godot::ObjectID* p_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:49:22
return __claw_this_->operator!=(*p_id);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedInt32Array1() {
return sizeof(godot::PtrToArg<godot::PackedInt32Array>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return sizeof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWboolR1() {
return sizeof(godot::GetTypeInfo<const bool&>);
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::ConstIterator* __claw__ZN5godot15PackedByteArray13ConstIteratormmEv(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:254:33
return (struct godot::PackedByteArray::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector3iWAxis1() {
return alignof(godot::PtrToArg<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector27reflectERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:122:10
new (__claw_result_) godot::Vector2(__claw_this_->reflect(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWMIDIMessage1() {
return sizeof(godot::PtrToArg<godot::MIDIMessage>);
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D7inverseEv(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:63:14
new (__claw_result_) godot::Transform2D(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWNodePathR1() {
return alignof(godot::PtrToArg<const godot::NodePath&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector2iWAxis1() {
return alignof(godot::PtrToArg<godot::Vector2i::Axis>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEeOEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt64Array6insertEll(godot::PackedInt64Array* __claw_this_, int64_t at_index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:113:10
return __claw_this_->insert(at_index, value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4Node14DuplicateFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::DuplicateFlags&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorpLERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:78:7
__claw_this_->operator+=(*p_color);
}
}

namespace godot {
__CLAW_API char32 __claw__ZNK5godot11CharStringTIDiE3getEl(godot::CharStringT<char32>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:96:19
return __claw_this_->get(p_index);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC2Ev() {
return sizeof(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEppEi(std::__atomic_base<unsigned short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Quaternion_claw_ctor(godot::PtrToArg<const godot::Quaternion&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
new (__claw_this_) godot::PtrToArg<const godot::Quaternion&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_keyed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:70:48

return godot::internal::gdextension_interface_variant_get_keyed;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEppEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKbE6encodeES2_Pv(const bool* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
godot::PtrToArg<const bool*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector4iWAxis1() {
return alignof(godot::PtrToArg<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::VerticalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<const godot::VerticalAlignment&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3idvERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:100:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator/(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessThreadGroupR1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRKNS_11MethodFlagsEEcvlEv(godot::BitField<const godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1Ev(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:315:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>();
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot9CharProxyIDsEadEv(godot::CharProxy<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:70:26
return (const char16*) __claw_this_->operator&();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_call_static() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:62:50

return godot::internal::gdextension_interface_variant_call_static;
}
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot5Color11to_rgbe9995Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:131:26
return __claw_this_->to_rgbe9995();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWMIDIMessage1() {
return alignof(godot::VariantCaster<godot::MIDIMessage>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math10smoothstepEfff(float p_from, float p_to, float p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:704:14
return godot::Math::smoothstep(p_from, p_to, p_weight);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EOSC_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>* __umap, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:217:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(std::move(*__umap), *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node3D::RotationEditMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<godot::Node3D::RotationEditMode&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_ctor(godot::GetTypeInfo<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
new (__claw_this_) godot::GetTypeInfo<godot::Rect2i>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWint1() {
return alignof(std::__hash_base<unsigned long,int>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray8IteratoreqERKS1_(struct godot::PackedStringArray::Iterator* __claw_this_, const struct godot::PackedStringArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:156:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D11set_visibleEb(godot::Node3D* __claw_this_, bool visible) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:116:7
__claw_this_->set_visible(visible);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1Em(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, std::size_t __n) {
// /usr/include/c++/13/bits/stl_vector.h:327:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(__n);
}
}

namespace godot {
__CLAW_API godot::SceneTree* __claw__ZNK5godot4Node8get_treeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:216:13
return (godot::SceneTree*) __claw_this_->get_tree();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40lessE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::less<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16ClassDBSingletonC1Ev(godot::ClassDBSingleton* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:26
new (__claw_this_) godot::ClassDBSingleton();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40JoyButton_claw_ctor(godot::PtrToArg<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::PtrToArg<godot::JoyButton>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_10StringNameEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::StringName>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectIDeqERKS0_(godot::ObjectID* __claw_this_, const godot::ObjectID* p_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:48:22
return __claw_this_->operator==(*p_id);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10DictionaryD1Ev(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:95:2
__claw_this_->~Dictionary();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EE6resizeEmRKS1_(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>::size_type __new_size, const std::vector<godot::Variant>::value_type* __x) {
// /usr/include/c++/13/bits/stl_vector.h:1034:7
__claw_this_->resize(__new_size, *__x);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant9set_namedERKNS_10StringNameERKS0_Rb(godot::Variant* __claw_this_, const godot::StringName* name, const godot::Variant* value, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:303:7
__claw_this_->set_named(*name, *value, *r_valid);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRKNS_15MouseButtonMaskEE8has_flagES3_(godot::BitField<const godot::MouseButtonMask&>* __claw_this_, const enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EOSC_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>* __umap, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:217:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(std::move(*__umap), *__a);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDsE21compare_exchange_weakERDsDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVariantWType1() {
return alignof(godot::VariantCaster<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWClockDirectionR1() {
return sizeof(godot::GetTypeInfo<godot::ClockDirection&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node15set_thread_safeERKNS_10StringNameERKNS_7VariantE(godot::Node* __claw_this_, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:276:7
__claw_this_->set_thread_safe(*property, *value);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRKNS_18PropertyUsageFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVKSt13__atomic_baseIxEcvxEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator long long();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector2ArrayWIterator() {
return alignof(godot::PackedVector2Array::Iterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40PropertyHintE23v_claw_dtor(godot::GetTypeInfo<const godot::PropertyHint&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWHorizontalAlignment1() {
return alignof(godot::VariantCaster<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37reflectERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:145:25
new (__claw_result_) godot::Vector3(__claw_this_->reflect(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat32Array6resizeEl(godot::PackedFloat32Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:115:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot6Signal7connectERKNS_8CallableEl(godot::Signal* __claw_this_, const godot::Callable* callable, int64_t flags) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:95:10
return __claw_this_->connect(*callable, flags);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE8fetch_orEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18CallableCustomBaseD1Ev(godot::CallableCustomBase* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:45:10
__claw_this_->~CallableCustomBase();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray8IteratorneERKS1_(struct godot::PackedStringArray::Iterator* __claw_this_, const struct godot::PackedStringArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:157:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPropertyHint1() {
return alignof(godot::GetTypeInfo<const godot::PropertyHint>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayC1ERKS0_(godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:102:2
new (__claw_this_) godot::PackedFloat32Array(*from);
}
}

namespace godot {
__CLAW_API char16 __claw__ZNK5godot11CharStringTIDsE3getEl(godot::CharStringT<char16>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:96:19
return __claw_this_->get(p_index);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKjE10encode_argEj(uint32_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
return godot::PtrToArg<const unsigned int&>::encode_arg(p_val);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Select1st_claw_ctor(std::__type_identity<std::__detail::_Select1st>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::__detail::_Select1st>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4Node14DuplicateFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::DuplicateFlags>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0unsignedWlongWlongW01() {
return sizeof(std::integral_constant<unsigned long long,0>);
}
}

namespace godot {
__CLAW_API godot::ClassDBSingleton* __claw__ZN5godot16ClassDBSingleton13get_singletonEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:55:27
return (godot::ClassDBSingleton*) godot::ClassDBSingleton::get_singleton();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneEPKDs(godot::String* __claw_this_, const char16* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:451:7
return __claw_this_->operator!=(p_str);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIwE11eq_int_typeERKjS2_(const std::char_traits<wchar_t>::int_type* __c1, const std::char_traits<wchar_t>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:590:7
return std::char_traits<wchar_t>::eq_int_type(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10c_unescapeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:331:9
new (__claw_result_) godot::String(__claw_this_->c_unescape());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math14is_zero_approxEf(float s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:646:13
return godot::Math::is_zero_approx(s);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis11set_columnsERKNS_7Vector3ES3_S3_(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_x, const struct godot::Vector3* p_y, const struct godot::Vector3* p_z) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:170:22
__claw_this_->set_columns(*p_x, *p_y, *p_z);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIiE23compare_exchange_strongERiiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node24set_process_thread_groupENS0_18ProcessThreadGroupE(godot::Node* __claw_this_, enum godot::Node::ProcessThreadGroup mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:202:7
__claw_this_->set_process_thread_group(mode);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis6rotateERKNS_10QuaternionE(struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:73:7
__claw_this_->rotate(*p_quaternion);
}
}

namespace std {
__CLAW_API int __claw__ZNSt11char_traitsIwE7compareEPKwS2_m(const std::char_traits<wchar_t>::char_type* __s1, const std::char_traits<wchar_t>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:512:7
return std::char_traits<wchar_t>::compare(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneEPKDi(godot::String* __claw_this_, const char32* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:452:7
return __claw_this_->operator!=(p_str);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot9CharProxyIDiEC1ERKS1_(godot::CharProxy<char32>* __claw_this_, const godot::CharProxy<char32>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:58:17
new (__claw_this_) godot::CharProxy<char32>(*p_other);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Rect28get_areaEv(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:52:9
return __claw_this_->get_area();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIN5godot10StringNameEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<1,std::hash<godot::StringName>,std::hash<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<1,std::hash<godot::StringName>,std::hash<godot::StringName>>();
}
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC1ERNS_16_Hashtable_allocISA_EE(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* __claw_this_, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__hashtable_alloc* __h) {
// /usr/include/c++/13/bits/hashtable_policy.h:242:7
new (__claw_this_) std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>(*__h);
}
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math14is_zero_approxEd(double s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:672:13
return godot::Math::is_zero_approx(s);
}
}
}

namespace godot {
__CLAW_API double __claw__ZN5godot8PtrToArgIfE10encode_argEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
return godot::PtrToArg<float>::encode_arg(p_val);
}
}

namespace std {
__CLAW_API void __claw__ZNSt11char_traitsIwE6assignERwRKw(std::char_traits<wchar_t>::char_type* __c1, const std::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:493:7
std::char_traits<wchar_t>::assign(*__c1, *__c2);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEaNEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__erased_type() {
return sizeof(std::__erased_type);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEE11instantiateEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIsEC1Ev(std::atomic<short>* __claw_this_) {
// /usr/include/c++/13/atomic:781:7
new (__claw_this_) std::atomic<short>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_12PropertyHintEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PropertyHint&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWStringName1() {
return sizeof(godot::PtrToArg<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot9CharProxyIDiEC2ERKlRNS_7CowDataIDiEE() {
return sizeof(godot::CharProxy<char32>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_hash(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:75:44

godot::internal::gdextension_interface_variant_hash = __claw_value_;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot5Array6insertElRKNS_7VariantE(godot::Array* __claw_this_, int64_t position, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:171:10
return __claw_this_->insert(position, *value);
}
}

__CLAW_API int __claw__ZZ8iswctypeE4(wint_t __wc, wctype_t __desc) {
// /usr/include/x86_64-linux-gnu/bits/wctype-wchar.h:159:12
return iswctype(__wc, __desc);
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqERKNS_7VariantE(godot::String* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:389:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseImE21compare_exchange_weakERmmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_base() {
return sizeof(std::__detail::_Hash_node_base);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseImED1Ev(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace std {
__CLAW_API std::__new_allocator<wchar_t>::size_type __claw__ZNKSt15__new_allocatorIwE8max_sizeEv(std::__new_allocator<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::String>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat64Array4sizeEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:106:10
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEE6resizeEmDs(std::basic_string<char16>* __claw_this_, std::basic_string<char16>::size_type __n, char16 __c) {
// /usr/include/c++/13/bits/basic_string.h:1099:7
__claw_this_->resize(__n, __c);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBind_claw_ctor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWunsignedWshort1() {
return alignof(std::__hash_base<unsigned long,unsigned short>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIsEC1Es(std::atomic<short>* __claw_this_, std::atomic<short>::__integral_type __i) {
// /usr/include/c++/13/atomic:787:17
new (__claw_this_) std::atomic<short>(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_18PackedFloat32ArrayE(godot::Array* __claw_this_, const godot::PackedFloat32Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:153:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect222intersects_transformedERKNS_11Transform2DERKS0_(struct godot::Rect2* __claw_this_, const struct godot::Transform2D* p_xform, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:130:7
return __claw_this_->intersects_transformed(*p_xform, *p_rect);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWString1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::String>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEmIEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIwE2eqERKwS2_(const std::char_traits<wchar_t>::char_type* __c1, const std::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:504:7
return std::char_traits<wchar_t>::eq(*__c1, *__c2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC1Ev(std::_Rb_tree_key_compare<std::less<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:146:7
new (__claw_this_) std::_Rb_tree_key_compare<std::less<godot::StringName>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_7Vector3EEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Vector3>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKdE6encodeES2_Pv(const double* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
godot::PtrToArg<const double*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8NodePathEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::NodePath>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat32Array5rfindEdl(godot::PackedFloat32Array* __claw_this_, double value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:125:10
return __claw_this_->rfind(value, from);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8NodePath14get_name_countEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:96:10
return __claw_this_->get_name_count();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<godot::VerticalAlignment>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKiiELb0EEEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>, false>>>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect2neERKS0_(struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:215:7
return __claw_this_->operator!=(*p_rect);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWTransform2DR1() {
return sizeof(godot::PtrToArg<const godot::Transform2D&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3ingEv(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:111:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator-());
return __claw_result_;
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt9type_info4nameEv(std::type_info* __claw_this_) {
// /usr/include/c++/13/typeinfo:103:17
return (const char*) __claw_this_->name();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Dictionary_claw_dtor(godot::PtrToArg<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node27set_process_thread_messagesENS_8BitFieldINS0_21ProcessThreadMessagesEEE(godot::Node* __claw_this_, godot::BitField<godot::Node::ProcessThreadMessages>* flags) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:204:7
__claw_this_->set_process_thread_messages(*flags);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWDictionary1() {
return sizeof(godot::PtrToArg<godot::Dictionary>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect2C1Effff(struct godot::Rect2* __claw_this_, real_t p_x, real_t p_y, real_t p_width, real_t p_height) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:365:2
new (__claw_this_) godot::Rect2(p_x, p_y, p_width, p_height);
}
}

namespace godot {
__CLAW_API enum godot::PropertyHint __claw__ZN5godot13VariantCasterINS_12PropertyHintEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
return godot::VariantCaster<godot::PropertyHint>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWList0godotWPropertyInfo1WConstIterator() {
return alignof(godot::List<godot::PropertyInfo>::ConstIterator);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5ColorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Color>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::basic_string<char16>::size_type __claw__ZNKSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEE8max_sizeEv(std::basic_string<char16>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1084:7
return __claw_this_->max_size();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40ObjectE23Vb0E40SE40__get_value_typeE3EE23S1__claw_ctor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC2EPKS6_m() {
return alignof(std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEmmEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEmmEi(std::__atomic_base<long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Color_claw_dtor(godot::TypedArray<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:102:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15MouseButtonMaskEE8set_flagES1_(godot::BitField<godot::MouseButtonMask>* __claw_this_, enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_3RIDEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio060W11() {
return alignof(std::ratio<60,1>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ESt16initializer_listIS6_EmRKS7_(std::unordered_map<int,int>* __claw_this_, std::initializer_list<std::pair<const int,int>>* __l, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:265:7
new (__claw_this_) std::unordered_map<int,int>(*__l, __n, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE4sortEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:645:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedInt32ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedInt32Array&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_type_name(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:85:51

godot::internal::gdextension_interface_variant_get_type_name = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2iplERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:90:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator+(*p_v));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_resize(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:126:45

godot::internal::gdextension_interface_string_resize = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIlE5storeElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEeOEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotW_GlobalNilClass() {
return sizeof(godot::_GlobalNilClass);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40pairE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23Vb0E23b_claw_ctor(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12
new (__claw_this_) std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot16PackedInt32ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedInt32Array);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEppEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40BasisE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot16PackedInt64Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:120:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC1Ev(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1940:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>();
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf16_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:106:56

return godot::internal::gdextension_interface_string_new_with_utf16_chars;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>::size_type __claw__ZNKSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEE8max_sizeEv(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedInt64Array1() {
return alignof(godot::GetTypeInfo<godot::PackedInt64Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwEaSERKS1_(godot::CowData<wchar_t>* __claw_this_, const godot::CowData<wchar_t>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:176:7
__claw_this_->operator=(*p_from);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D5scaleERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:76:7
__claw_this_->scale(*p_scale);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return alignof(std::__detail::_Insert_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_PNS1_6ObjectEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return alignof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>, false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>, false>>>();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect2eqERKS0_(struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:214:7
return __claw_this_->operator==(*p_rect);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4fposI11__mbstate_tEC2Ev() {
return alignof(std::fpos<NIL>);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt5ctypeIcE2isEtc(std::ctype<char>* __claw_this_, std::ctype_base::mask __m, char __c) {
// /usr/include/c++/13/bits/locale_facets.h:752:7
return __claw_this_->is(__m, __c);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector3EEC1Ev(godot::TypedArray<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:94:1
new (__claw_this_) godot::TypedArray<godot::Vector3>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB7set_endERKNS_7Vector3E(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:115:22
__claw_this_->set_end(*p_end);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_6StringEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::String>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8c_escapeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:330:9
new (__claw_result_) godot::String(__claw_this_->c_escape());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIyE21compare_exchange_weakERyySt12memory_orderS2_(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind12bind_ptrcallEPviPKii(void* p_method_userdata, int p_instance, const int* p_args, int r_return) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:145:14
godot::MethodBind::bind_ptrcall(p_method_userdata, p_instance, p_args, r_return);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array3hasERKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:121:7
return __claw_this_->has(*value);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDsE21compare_exchange_weakERDsDsSt12memory_orderS2_(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object8set_metaERKNS_10StringNameERKNS_7VariantE(godot::Object* __claw_this_, const godot::StringName* name, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:81:7
__claw_this_->set_meta(*name, *value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5BasisEEC1ERKNS_7VariantE(godot::TypedArray<godot::Basis>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:100:1
new (__claw_this_) godot::TypedArray<godot::Basis>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10DictionaryEE6encodeES1_Pv(godot::Dictionary* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
godot::PtrToArg<godot::Dictionary>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionmIERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:106:22
__claw_this_->operator-=(*p_q);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedInt32Array9push_backEl(godot::PackedInt32Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:109:7
return __claw_this_->push_back(value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIDiEC2Ev() {
return sizeof(std::allocator<char32>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf32_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:107:56

return godot::internal::gdextension_interface_string_new_with_utf32_chars;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array9remove_atEl(godot::Array* __claw_this_, int64_t position) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:172:7
__claw_this_->remove_at(position);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5remapEddddd(double p_value, double p_istart, double p_istop, double p_ostart, double p_ostop) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:593:15
return godot::Math::remap(p_value, p_istart, p_istop, p_ostart, p_ostop);
}
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math11move_towardEddd(double p_from, double p_to, double p_delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:712:15
return godot::Math::move_toward(p_from, p_to, p_delta);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10ProjectionD1Ev(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:157:2
__claw_this_->~Projection();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArrayneERKS0_(godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:211:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWArray1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23r_claw_dtor(godot::PtrToArg<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMethodFlags1() {
return alignof(godot::GetTypeInfo<godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Plane28get_any_perpendicular_normalEv(struct godot::Vector3* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:54:10
new (__claw_result_) godot::Vector3(__claw_this_->get_any_perpendicular_normal());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::char_type* __claw__ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm(__gnu_cxx::char_traits<char>::char_type* __s1, const __gnu_cxx::char_traits<char>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:153:7
return (__gnu_cxx::char_traits<char>::char_type*) __gnu_cxx::char_traits<char>::move(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiEaSERKS1_(godot::CharStringT<char32>* __claw_this_, const godot::CharStringT<char32>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:109:22
__claw_this_->operator=(*p_str);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1EOS0_(godot::Array* __claw_this_, godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:159:2
new (__claw_this_) godot::Array(std::move(*other));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector3Array5rfindERKNS_7Vector3El(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:129:10
return __claw_this_->rfind(*value, from);
}
}

namespace godot {
__CLAW_API enum godot::Vector4i::Axis __claw__ZNK5godot8Vector4i14max_axis_indexEv(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:74:17
return __claw_this_->max_axis_index();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIlEC1Ev(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<long>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_vector3_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:149:64

godot::internal::gdextension_interface_packed_vector3_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWTransform2DR1() {
return alignof(godot::PtrToArg<const godot::Transform2D&>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector315signed_angle_toERKS0_S2_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to, const struct godot::Vector3* p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:140:24
return __claw_this_->signed_angle_to(*p_to, *p_axis);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIxED1Ev(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_constructor() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:92:57

return godot::internal::gdextension_interface_variant_get_ptr_constructor;
}
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEE22_M_deallocate_node_ptrEPS9_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__node_ptr __n) {
// /usr/include/c++/13/bits/hashtable_policy.h:1968:7
__claw_this_->_M_deallocate_node_ptr(__n);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt3_V214error_categoryC2Ev() {
return alignof(std::error_category);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKfE6encodeES2_Pv(const float* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
godot::PtrToArg<const float*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE4sizeEv(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:317:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API enum godot::Vector2i::Axis __claw__ZNK5godot8Vector2i14max_axis_indexEv(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:78:32
return __claw_this_->max_axis_index();
}
}

namespace std {
__CLAW_API void __claw_set__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5__first(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_, std::__detail::_Node_iterator<std::pair<const int,int>,false,false>* __claw_value_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

__claw_this_->first = *__claw_value_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt4pairIKiiEEC2Ev() {
return sizeof(std::allocator<std::pair<const int,int>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray13ConstIteratorC1Ev(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:185:3
new (__claw_this_) godot::PackedColorArray::ConstIterator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIsEC1ERKNS_7VariantE(godot::TypedArray<short>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:82:1
new (__claw_this_) godot::TypedArray<short>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2igtERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:109:7
return __claw_this_->operator>(*p_vec2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWOrientation1() {
return alignof(godot::GetTypeInfo<godot::Orientation>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIN5godot10StringNameEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<godot::StringName>,std::equal_to<godot::StringName>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIlEC1El(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<long>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261d_claw_ctor(godot::PtrToArg<const double&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
new (__claw_this_) godot::PtrToArg<const double&>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6insertElRKS0_(godot::String* __claw_result_, godot::String* __claw_this_, int64_t position, const godot::String* what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:302:9
new (__claw_result_) godot::String(__claw_this_->insert(position, *what));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4Node12InternalModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::InternalMode&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArrayeqERKS0_(godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:210:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0char1() {
return sizeof(godot::GetTypeInfo<char>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2i9has_pointERKNS_8Vector2iE(struct godot::Rect2i* __claw_this_, const godot::Point2i* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:130:7
return __claw_this_->has_point(*p_point);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEppEi(std::__atomic_base<unsigned short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
namespace pmr {
__CLAW_API unsigned long long __claw_sizeof__ZNSt3pmr15memory_resourceC2Ev() {
return sizeof(std::pmr::memory_resource);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_ctor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>();
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::Iterator* __claw__ZN5godot18PackedVector2Array8IteratorppEv(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:150:28
return (struct godot::PackedVector2Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hashtable_baseIiSt4pairIKiiENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_wide_chars_and_len() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:113:61

return godot::internal::gdextension_interface_string_new_with_wide_chars_and_len;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32ArrayneERKNS_7VariantE(godot::PackedInt32Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:128:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf16_chars_and_len(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:111:62

godot::internal::gdextension_interface_string_new_with_utf16_chars_and_len = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWCallableR1() {
return alignof(godot::GetTypeInfo<const godot::Callable&>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math31cubic_interpolate_angle_in_timeEffffffff(float p_from, float p_to, float p_pre, float p_post, float p_weight, float p_to_t, float p_pre_t, float p_post_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:503:14
return godot::Math::cubic_interpolate_angle_in_time(p_from, p_to, p_pre, p_post, p_weight, p_to_t, p_pre_t, p_post_t);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWTransform3D1() {
return alignof(godot::PtrToArg<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7CowDataIDiEC2Ev() {
return alignof(godot::CowData<char32>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWKeyModifierMaskR11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2dVERKf(struct godot::Vector2* __claw_this_, const real_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:142:7
__claw_this_->operator/=(*rvalue);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_hash() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:75:44

return godot::internal::gdextension_interface_variant_hash;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_11Transform3DEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10StringNameEEaSERKNS_5ArrayE(godot::TypedArray<godot::StringName>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:103:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf8_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:105:55

return godot::internal::gdextension_interface_string_new_with_utf8_chars;
}
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName13sha256_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:318:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->sha256_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayD1Ev(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:105:2
__claw_this_->~PackedFloat64Array();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayC1ERKNS_5ArrayE(godot::PackedInt32Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:103:2
new (__claw_this_) godot::PackedInt32Array(*from);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__common_type_implE3EE23DE23DE23DE23D_claw_dtor(std::__common_type_impl<long double,long double,long double,long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2314:12
__claw_this_->~__common_type_impl();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4NodeEEaSERKNS_5ArrayE(godot::TypedArray<godot::Node>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:42:22
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEED1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8Callable5callvERKNS_5ArrayE(godot::Variant* __claw_result_, godot::Callable* __claw_this_, const godot::Array* arguments) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:102:10
new (__claw_result_) godot::Variant(__claw_this_->callv(*arguments));
return __claw_result_;
}
}

__CLAW_API void __claw_cE3AE40UE40pthread_attr_t_claw_dtor(union pthread_attr_t* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:7
__claw_this_->~pthread_attr_t();
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40KeyE23v_claw_ctor(godot::GetTypeInfo<const godot::Key&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::GetTypeInfo<const godot::Key&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector2iEEC1Ev(godot::TypedArray<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:91:1
new (__claw_this_) godot::TypedArray<godot::Vector2i>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10ProjectionC1ERKNS_11Transform3DE(struct godot::Projection* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:156:2
new (__claw_this_) godot::Projection(*p_transform);
}
}

namespace godot {
__CLAW_API float __claw__ZN5godot8PtrToArgIRKfE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
return godot::PtrToArg<const float&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2iltERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:108:7
return __claw_this_->operator<(*p_vec2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3WAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D7look_atERKNS_7Vector3ES3_b(godot::Node3D* __claw_this_, const struct godot::Vector3* target, const struct godot::Vector3* up, bool use_model_front) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:138:7
__claw_this_->look_at(*target, *up, use_model_front);
}
}

namespace godot {
__CLAW_API double __claw__ZN5godot8PtrToArgIRKdE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
return godot::PtrToArg<const double&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKiE6encodeES2_Pv(const int32_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
godot::PtrToArg<const int*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector3iEEC1Ev(godot::TypedArray<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:95:1
new (__claw_this_) godot::TypedArray<godot::Vector3i>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0godotWPropertyInfo11() {
return alignof(std::allocator_traits<std::allocator<godot::PropertyInfo>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot8PtrToArgIRKbE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
return godot::PtrToArg<const bool&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API int8_t __claw__ZN5godot8PtrToArgIRKaE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
return godot::PtrToArg<const char&>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE8exchangeEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWInternalModeR1() {
return alignof(godot::GetTypeInfo<const godot::Node::InternalMode&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEE8is_validEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArrayneERKNS_7VariantE(godot::PackedStringArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:130:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot10Projection26perspective_znear_adjustedEf(struct godot::Projection* __claw_result_, struct godot::Projection* __claw_this_, real_t p_new_znear) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:95:13
new (__claw_result_) godot::Projection(__claw_this_->perspective_znear_adjusted(p_new_znear));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWPropertyHint1() {
return alignof(godot::VariantCaster<godot::PropertyHint>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_free_instance_binding(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:163:58

godot::internal::gdextension_interface_object_free_instance_binding = __claw_value_;
}
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZN5godot8PtrToArgIRKmE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
return godot::PtrToArg<const unsigned long&>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE8max_sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:659:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKlE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
return godot::PtrToArg<const long&>::convert(p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_file_access_get_buffer() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:130:52

return godot::internal::gdextension_interface_file_access_get_buffer;
}
}
}

namespace godot {
__CLAW_API uint8_t __claw__ZN5godot8PtrToArgIRKhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
return godot::PtrToArg<const unsigned char&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZN5godot8PtrToArgIRKjE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
return godot::PtrToArg<const unsigned int&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>();
}
}

namespace godot {
__CLAW_API int32_t __claw__ZN5godot8PtrToArgIRKiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
return godot::PtrToArg<const int&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API char __claw__ZNK5godot9CharProxyIcEcvcEv(godot::CharProxy<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:62:17
return __claw_this_->operator char();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2imlERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:94:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator*(*p_v1));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEoREb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot4rtosEd(godot::String* __claw_result_, double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:484:8
new (__claw_result_) godot::String(godot::rtos(p_val));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_NS1_7ClassDB9ClassInfoEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return alignof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40RID_claw_dtor(godot::TypedArray<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:105:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPropertyHintR1() {
return sizeof(godot::GetTypeInfo<godot::PropertyHint&>);
}
}

namespace godot {
__CLAW_API uint16_t __claw__ZN5godot8PtrToArgIRKtE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
return godot::PtrToArg<const unsigned short&>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_18PackedVector3ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:407:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int16_t __claw__ZN5godot8PtrToArgIRKsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
return godot::PtrToArg<const short&>::convert(p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWlibrary() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:41:39

return godot::internal::library;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40SideE23v_claw_ctor(godot::GetTypeInfo<godot::Side&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<godot::Side&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE9fetch_subEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot7Vector3EEC2EPKS1_m() {
return alignof(std::initializer_list<godot::Vector3>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE12move_to_backEPNS3_7ElementE(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_I) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:548:7
__claw_this_->move_to_back(p_I);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array12append_arrayERKS0_(godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:111:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API char16* __claw__ZN5godot7CowDataIDsE5get_mEl(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:205:20
return (char16*) (&__claw_this_->get_m(p_index));
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot7ClassDB31class_get_integer_constant_listERKNS_10StringNameEb(godot::PackedStringArray* __claw_result_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::PackedStringArray(godot::ClassDB::class_get_integer_constant_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Rb_tree_header() {
return sizeof(std::_Rb_tree_header);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWTransform2D1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector2ArrayW_MethodBindings() {
return sizeof(godot::PackedVector2Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1ERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:133:2
new (__claw_this_) godot::Quaternion(*p_q);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1ERKNS_7Vector3Ef(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:232:2
new (__claw_this_) godot::Basis(*p_axis, p_angle);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11SafeNumericIjE3setEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:67:23
__claw_this_->set(p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1EPKDi(godot::NodePath* __claw_this_, const char32* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:93:2
new (__claw_this_) godot::NodePath(from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedStringArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedStringArray>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1C_claw_dtor(godot::PtrToArg<const char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Node_claw_dtor(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:60:7
__claw_this_->~Node();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVKSt13__atomic_baseIcE4loadESt12memory_order(std::__atomic_base<char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

__CLAW_API int __claw__ZN14__iseqsig_typeIdE6__callEdd(double __x, double __y) {
// /usr/include/math.h:1377:14
return __iseqsig_type<double>::__call(__x, __y);
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array5frontEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:175:10
new (__claw_result_) godot::Variant(__claw_this_->front());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_10DictionaryE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:398:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt13_Rb_tree_nodeIN5godot10StringNameEEEC2Ev() {
return alignof(std::allocator<std::_Rb_tree_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKhE6encodeES2_Pv(const uint8_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
godot::PtrToArg<const unsigned char*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1EPKDs(godot::NodePath* __claw_this_, const char16* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:92:2
new (__claw_this_) godot::NodePath(from);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEpLEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::InternalMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MouseButtonE23v_claw_ctor(godot::GetTypeInfo<const godot::MouseButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::GetTypeInfo<const godot::MouseButton&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array8IteratorC1ERKS1_(struct godot::PackedInt64Array::Iterator* __claw_this_, const struct godot::PackedInt64Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:159:3
new (__claw_this_) godot::PackedInt64Array::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10StringNameEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::StringName&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godotplEPKDsRKNS_6StringE(godot::String* __claw_result_, const char16* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:479:8
new (__claw_result_) godot::String(godot::operator+(p_chr, *p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Basis11determinantEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:60:24
return __claw_this_->determinant();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWchar_traits0char321() {
return sizeof(std::char_traits<char32>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String14is_valid_floatEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:351:7
return __claw_this_->is_valid_float();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_16PackedInt32ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:401:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_9JoyButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::JoyButton&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godotplEPKDiRKNS_6StringE(godot::String* __claw_result_, const char32* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:480:8
new (__claw_result_) godot::String(godot::operator+(p_chr, *p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11SafeNumericImE3setEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:67:23
__claw_this_->set(p_value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWshort1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt5ctypeIwEC2Em() {
return sizeof(std::ctype<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldINS_4Node21ProcessThreadMessagesEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE9fetch_andEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE9fetch_addEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::ConstIterator* __claw__ZNK5godot16PackedInt64Array3endEv(struct godot::PackedInt64Array::ConstIterator* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:200:31
new (__claw_result_) godot::PackedInt64Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40fposE3EE23E24E40SAE40__mbstate_t_claw_dtor(std::fpos<NIL>* __claw_this_) {
// /usr/include/c++/13/bits/postypes.h:82:11
__claw_this_->~fpos();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_6Node3D16RotationEditModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node3D::RotationEditMode>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE9fetch_xorEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ColorE23v_claw_ctor(godot::GetTypeInfo<const godot::Color&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
new (__claw_this_) godot::GetTypeInfo<const godot::Color&>();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis14orthogonalizedEv(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:218:8
new (__claw_result_) godot::Basis(__claw_this_->orthogonalized());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0char321Wchar321() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<char32>,char32>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseImEC2Ev() {
return sizeof(std::__atomic_base<unsigned long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23l_claw_dtor(godot::TypedArray<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:85:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRKNS_15MouseButtonMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector4WAxis1() {
return sizeof(godot::PtrToArg<godot::Vector4::Axis>);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<wchar_t>>::size_type __claw__ZNSt16allocator_traitsISaIwEE8max_sizeERKS0_(const std::allocator_traits<std::allocator<wchar_t>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<wchar_t>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray5countEl(godot::PackedByteArray* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:167:10
return __claw_this_->count(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node13request_readyEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:226:7
__claw_this_->request_ready();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray3setElRKNS_6StringE(godot::PackedStringArray* __claw_this_, int64_t index, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:110:7
__claw_this_->set(index, *value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6vectorIN5godot7VariantESaIS1_EEC2Ev() {
return alignof(std::vector<godot::Variant>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot17PackedStringArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedStringArray);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1Ev(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:930:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEpLEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE9fetch_addEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1v_claw_ctor(godot::PtrToArg<const void*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
new (__claw_this_) godot::PtrToArg<const void*>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE9fetch_andEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String15to_wchar_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:371:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_wchar_buffer());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEaSEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWDictionary1() {
return alignof(godot::PtrToArg<godot::Dictionary>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23SE23v_claw_dtor(godot::GetTypeInfo<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWStringNameR1() {
return sizeof(godot::PtrToArg<const godot::StringName&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot6StringEEC2EPKS1_m() {
return alignof(std::initializer_list<godot::String>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_wide_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:108:55

godot::internal::gdextension_interface_string_new_with_wide_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWSignal1() {
return sizeof(godot::PtrToArg<godot::Signal>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIwEC1Ev(std::__new_allocator<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<wchar_t>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharStringTE3EE23W_claw_dtor(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:84:7
__claw_this_->~CharStringT();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_3RIDEE6encodeES1_Pv(godot::RID* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
godot::PtrToArg<const godot::RID&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40AABBE23v_claw_ctor(godot::GetTypeInfo<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
new (__claw_this_) godot::GetTypeInfo<godot::AABB>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEoREy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8max_sizeEv(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:659:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt4pairIKiiEEC2Ev() {
return sizeof(std::__new_allocator<std::pair<const int,int>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray13encode_doubleEld(godot::PackedByteArray* __claw_this_, int64_t byte_offset, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:205:7
__claw_this_->encode_double(byte_offset, value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotW_GlobalNil() {
return alignof(godot::_GlobalNil);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_value_base0stdWpair0constWintWint11() {
return alignof(std::__detail::_Hash_node_value_base<std::pair<const int,int>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWRect21() {
return sizeof(godot::GetTypeInfo<godot::Rect2>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIyE12is_lock_freeEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11SafeNumericImEC2Em() {
return alignof(godot::SafeNumeric<unsigned long>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWhash0int1() {
return alignof(std::hash<int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis6invertEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:54:7
__claw_this_->invert();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdWpair0constWintWint111() {
return alignof(std::allocator_traits<std::allocator<std::pair<const int,int>>>);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::size_type __claw__ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEE8max_sizeERKSA_(const std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::max_size(*__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEppEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector3WAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DmLERKS0_(struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:106:7
__claw_this_->operator*=(*p_transform);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot17PackedStringArray8IteratorptEv(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:146:26
return (godot::String*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7VariantltERKS0_(godot::Variant* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:268:7
return __claw_this_->operator<(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEppEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MIDIMessageE23v_claw_ctor(godot::GetTypeInfo<const godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::GetTypeInfo<const godot::MIDIMessage>();
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__exception_ptr13exception_ptrC2EPv() {
return sizeof(std::__exception_ptr::exception_ptr);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__false_type() {
return sizeof(std::__false_type);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Select1st() {
return sizeof(std::__detail::_Select1st);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEaSERKNS_7VariantE(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayImEaSERKNS_5ArrayE(godot::TypedArray<unsigned long>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:85:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform2D15is_equal_approxERKS0_(struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:101:7
return __claw_this_->is_equal_approx(*p_transform);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedVector2Array_claw_ctor(godot::PtrToArg<const godot::PackedVector2Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
new (__claw_this_) godot::PtrToArg<const godot::PackedVector2Array&>();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector36lengthEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:89:24
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API enum godot::Vector3::Axis __claw__ZNK5godot7Vector314min_axis_indexEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:73:31
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB14intersects_rayERKNS_7Vector3ES3_PS1_S4_(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_dir, struct godot::Vector3* r_clip, struct godot::Vector3* r_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:77:7
return __claw_this_->intersects_ray(*p_from, *p_dir, r_clip, r_normal);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0int11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<int>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4irMEi(struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:110:27
return (struct godot::Vector4i*) (&__claw_this_->operator%=(p_scalar));
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEppEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API std::__new_allocator<godot::PropertyInfo>::size_type __claw__ZNKSt15__new_allocatorIN5godot12PropertyInfoEE8max_sizeEv(std::__new_allocator<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array4sortEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:185:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKjE6encodeES2_Pv(const uint32_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
godot::PtrToArg<const unsigned int*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayC1EOS0_(godot::PackedVector3Array* __claw_this_, godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:108:2
new (__claw_this_) godot::PackedVector3Array(std::move(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10bad_typeidC2Ev() {
return alignof(std::bad_typeid);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8CallableeqERKNS_7VariantE(godot::Callable* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:125:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot9CharProxyIDsEC1ERKS1_(godot::CharProxy<char16>* __claw_this_, const godot::CharProxy<char16>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:58:17
new (__claw_this_) godot::CharProxy<char16>(*p_other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type0long1() {
return sizeof(std::common_type<long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23l_claw_ctor(godot::PtrToArg<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
new (__claw_this_) godot::PtrToArg<unsigned long>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEppEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::size_type __claw__ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEE8max_sizeERKSA_(const std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D9add_gizmoERKNS_3RefINS_11Node3DGizmoEEE(godot::Node3D* __claw_this_, const godot::Ref<godot::Node3DGizmo>* gizmo) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:111:7
__claw_this_->add_gizmo(*gizmo);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEE5unrefEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS4_(std::basic_string<char16>* __claw_this_, const std::basic_string<char16>* __str) {
// /usr/include/c++/13/bits/basic_string.h:547:7
new (__claw_this_) std::basic_string<char16>(*__str);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEeOEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2iC1Eii(struct godot::Vector2i* __claw_this_, const int32_t p_x, const int32_t p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:129:9
new (__claw_this_) godot::Vector2i(p_x, p_y);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVKSt13__atomic_baseIDiEcvDiEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator char32_t();
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D16translated_localERKNS_7Vector3E(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_translation) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:68:14
new (__claw_result_) godot::Transform3D(__claw_this_->translated_local(*p_translation));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__is_char0wchar_t1() {
return sizeof(std::__is_char<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6Rect2iEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Rect2i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:93:1
new (__claw_this_) godot::TypedArray<godot::Rect2i>(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt9exceptionC1EOS_(std::exception* __claw_this_, std::exception* arg0) {
// /usr/include/c++/13/bits/exception.h:67:5
new (__claw_this_) std::exception(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40EulerOrder_claw_ctor(godot::PtrToArg<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::PtrToArg<godot::EulerOrder>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_7Variant4TypeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Variant::Type>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hashtable_baseIiSt4pairIKiiENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb0EEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,false>>);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDiE21compare_exchange_weakERDiDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0boolWtrue1() {
return sizeof(std::integral_constant<bool,true>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_destroy() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:60:47

return godot::internal::gdextension_interface_variant_destroy;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiEaSEPKDi(godot::CharStringT<char32>* __claw_this_, const char32* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:112:7
__claw_this_->operator=(p_cstr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayC1ERKNS_5ArrayE(godot::PackedColorArray* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:105:2
new (__claw_this_) godot::PackedColorArray(*from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWVector2i11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array8IteratoreqERKS1_(struct godot::PackedFloat64Array::Iterator* __claw_this_, const struct godot::PackedFloat64Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:154:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE9fetch_addEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_4NodeEE8callbackEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:128:14
godot::internal::EngineClassRegistration<godot::Node>::callback();
}
}
}

namespace std {
__CLAW_API std::initializer_list<godot::String>::size_type __claw__ZNKSt16initializer_listIN5godot6StringEE4sizeEv(std::initializer_list<godot::String>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE9fetch_subEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector45floorEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:96:10
new (__claw_result_) godot::Vector4(__claw_this_->floor());
return __claw_result_;
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23d_claw_dtor(__iseqsig_type<double>* __claw_this_) {
// /usr/include/math.h:1375:19
__claw_this_->~__iseqsig_type();
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261b_claw_dtor(godot::PtrToArg<const bool&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8CallableEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Callable>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:106:1
new (__claw_this_) godot::TypedArray<godot::Callable>(*p_array);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return sizeof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_10MethodBindEEEC1ERKS6_(std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_, const std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector4iWAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector4i::Axis&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDsE23compare_exchange_strongERDsDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector413is_normalizedEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:88:7
return __claw_this_->is_normalized();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EE6resizeEmRKS1_(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>::size_type __new_size, const std::vector<godot::PropertyInfo>::value_type* __x) {
// /usr/include/c++/13/bits/stl_vector.h:1034:7
__claw_this_->resize(__new_size, *__x);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_11MethodFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MethodFlags>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color4lerpERKS0_f(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_to, float p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:104:23
new (__claw_result_) godot::Color(__claw_this_->lerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdWpair0constWintWint111() {
return sizeof(std::__type_identity<std::allocator<std::pair<const int,int>>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object22is_queued_for_deletionEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:132:7
return __claw_this_->is_queued_for_deletion();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW_Char_types0wchar_t1() {
return sizeof(__gnu_cxx::_Char_types<wchar_t>);
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot16PackedInt32ArrayixEl(godot::PackedInt32Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:136:11
return (int32_t*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKmE6encodeES2_Pv(const uint64_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
godot::PtrToArg<const unsigned long*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEaSEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40DictionaryE40SE40_MethodBindings_claw_ctor(struct godot::Dictionary::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:51:16
new (__claw_this_) godot::Dictionary::_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11SafeNumericImEC1Em(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:135:27
new (__claw_this_) godot::SafeNumeric<unsigned long>(p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_10DictionaryE(godot::Variant* __claw_this_, const godot::Dictionary* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:204:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE9fetch_andEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1ERKNS_7Vector3ES3_S3_(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_x_axis, const struct godot::Vector3* p_y_axis, const struct godot::Vector3* p_z_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:236:17
new (__claw_this_) godot::Basis(*p_x_axis, *p_y_axis, *p_z_axis);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1Ev(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:252:2
new (__claw_this_) godot::StringName();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant2inERKS0_Pb(godot::Variant* __claw_this_, const godot::Variant* index, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:310:7
return __claw_this_->in(*index, r_valid);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWHorizontalAlignment1() {
return sizeof(godot::PtrToArg<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RIDC1EOS0_(godot::RID* __claw_this_, godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:76:2
new (__claw_this_) godot::RID(std::move(*other));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_18PropertyUsageFlagsEE8set_flagES1_(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_, const enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array8IteratorneERKS1_(struct godot::PackedFloat64Array::Iterator* __claw_this_, const struct godot::PackedFloat64Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:155:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE9fetch_addEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API enum godot::JoyAxis __claw__ZN5godot13VariantCasterINS_7JoyAxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
return godot::VariantCaster<godot::JoyAxis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessMode>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1EPKcb(godot::StringName* __claw_this_, const char* from, bool p_static) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:256:2
new (__claw_this_) godot::StringName(from, p_static);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_get_instance_from_id() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:167:56

return godot::internal::gdextension_interface_object_get_instance_from_id;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11() {
return alignof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWProjectionWPlanes1() {
return alignof(godot::GetTypeInfo<godot::Projection::Planes>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector325octahedron_tangent_encodeEf(struct godot::Vector2* __claw_result_, struct godot::Vector3* __claw_this_, const float sign) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:118:10
new (__claw_result_) godot::Vector2(__claw_this_->octahedron_tangent_encode(sign));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_6ObjectEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE11bucket_sizeEm(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt) {
// /usr/include/c++/13/bits/hashtable.h:679:7
return __claw_this_->bucket_size(__bkt);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion13get_euler_yxzEv(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:70:10
new (__claw_result_) godot::Vector3(__claw_this_->get_euler_yxz());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedVector3Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIbEC1ERKNS_7VariantE(godot::TypedArray<bool>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:78:1
new (__claw_this_) godot::TypedArray<bool>(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__is_char0char1() {
return sizeof(std::__is_char<char>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray8is_emptyEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:109:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0longP1() {
return alignof(godot::PtrToArg<long*>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_15KeyModifierMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::KeyModifierMask&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot6Rect2i10get_centerEv(struct godot::Vector2i* __claw_result_, struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:53:26
new (__claw_result_) godot::Vector2i(__claw_this_->get_center());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector2R1() {
return alignof(godot::PtrToArg<const godot::Vector2&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWMethodInfo() {
return alignof(godot::MethodInfo);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0godotWPropertyInfo11() {
return sizeof(std::allocator_traits<std::allocator<godot::PropertyInfo>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String12is_valid_intEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:350:7
return __claw_this_->is_valid_int();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2iE40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::PtrToArg<godot::Vector2i::Axis>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray5clearEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:118:7
__claw_this_->clear();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1EOS2_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>::_Tp_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:343:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(std::move(*__a));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_6CornerEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Corner&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedInt64ArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedInt64Array&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1EOS3_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:338:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind8set_nameERKNS_10StringNameE(godot::MethodBind* __claw_this_, const godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:77:7
__claw_this_->set_name(*p_name);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWRID1() {
return alignof(godot::GetTypeInfo<godot::RID>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform3DeqERKS0_(struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:83:7
return __claw_this_->operator==(*p_transform);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_destructor() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:93:56

return godot::internal::gdextension_interface_variant_get_ptr_destructor;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis20set_axis_angle_scaleERKNS_7Vector3EfS3_(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:115:7
__claw_this_->set_axis_angle_scale(*p_axis, p_angle, *p_scale);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_12PropertyHintEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PropertyHint>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPKlE6encodeES2_Pv(const int64_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
godot::PtrToArg<const long*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIxEC2Ev() {
return sizeof(std::__atomic_base<long long>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEpLEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13move_to_frontEPNS3_7ElementE(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_I) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:585:7
__claw_this_->move_to_front(p_I);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis9xform_invERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:137:25
new (__claw_result_) godot::Vector3(__claw_this_->xform_inv(*p_vector));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE9fetch_andEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayD1Ev(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:109:2
__claw_this_->~PackedVector3Array();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AW_claw_ctor(godot::PtrToArg<wchar_t*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
new (__claw_this_) godot::PtrToArg<wchar_t*>();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot7ClassDB18class_get_propertyEPNS_6ObjectERKNS_10StringNameE(godot::Variant* __claw_result_, godot::Object* object, const godot::StringName* property) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::Variant(godot::ClassDB::class_get_property(object, *property));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIdEC1Ev(std::initializer_list<double>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<double>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_file_access_store_buffer() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:129:54

return godot::internal::gdextension_interface_file_access_store_buffer;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWintR1() {
return alignof(godot::GetTypeInfo<const int&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRID1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWboolR1() {
return alignof(godot::GetTypeInfo<const bool&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4i3absEv(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:89:26
new (__claw_result_) godot::Vector4i(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWNodeWProcessMode1() {
return alignof(godot::VariantCaster<godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayItEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<unsigned short>);
}
}

namespace std {
__CLAW_API std::basic_string_view<char32>::size_type __claw__ZNKSt17basic_string_viewIDiSt11char_traitsIDiEE4sizeEv(std::basic_string_view<char32>* __claw_this_) {
// /usr/include/c++/13/string_view:229:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8NodePathEEaSERKNS_5ArrayE(godot::TypedArray<godot::NodePath>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:104:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return alignof(std::unordered_map<godot::StringName,godot::Object*>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_file_access_store_buffer(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:129:54

godot::internal::gdextension_interface_file_access_store_buffer = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray9remove_atEl(godot::PackedColorArray* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:114:7
__claw_this_->remove_at(index);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW_Rb_tree_node_baseP1() {
return sizeof(std::__type_identity<std::_Rb_tree_node_base*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEEEC1ERKS9_(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_, const std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector4::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform3DneERKS0_(struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:84:7
return __claw_this_->operator!=(*p_transform);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWlong1() {
return alignof(std::__hash_base<unsigned long,long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGDExtensionBindingWInitData() {
return sizeof(godot::GDExtensionBinding::InitData);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS3_(std::basic_string<char16>* __claw_this_, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:535:7
new (__claw_this_) std::basic_string<char16>(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableD1Ev(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:101:2
__claw_this_->~Callable();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKS7_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::allocator_type* __a) {
// /usr/include/c++/13/bits/hashtable.h:556:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(*__a);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3i3absEv(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:87:26
new (__claw_result_) godot::Vector3i(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedInt32ArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedInt32Array&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot17PackedStringArray9push_backERKNS_6StringE(godot::PackedStringArray* __claw_this_, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:111:7
return __claw_this_->push_back(*value);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector315is_equal_approxERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:147:7
return __claw_this_->is_equal_approx(*p_v);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2i3absEv(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:122:11
new (__claw_result_) godot::Vector2i(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot10StringName8to_floatEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:343:9
return __claw_this_->to_float();
}
}

namespace std {
__CLAW_API std::char_traits<char16>::char_type* __claw__ZNSt11char_traitsIDsE4copyEPDsPKDsm(std::char_traits<char16>::char_type* __s1, const std::char_traits<char16>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:831:7
return (std::char_traits<char16>::char_type*) std::char_traits<char16>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11Transform3DEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Transform3D>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Signal* __claw__ZN5godot6SignalaSEOS0_(godot::Signal* __claw_this_, godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:107:10
return (godot::Signal*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt64ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedInt64Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:55:16
new (__claw_this_) godot::PackedInt64Array::_MethodBindings();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringplERKNS_10StringNameE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:422:9
new (__claw_result_) godot::String(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot6Rect2i7get_endEv(struct godot::Vector2i* __claw_result_, struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:229:26
new (__claw_result_) godot::Vector2i(__claw_this_->get_end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat32ArrayW_MethodBindings() {
return alignof(godot::PackedFloat32Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName12xml_unescapeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:327:9
new (__claw_result_) godot::String(__claw_this_->xml_unescape());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_int32_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:141:62

return godot::internal::gdextension_interface_packed_int32_array_operator_index;
}
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIiE23compare_exchange_strongERiiSt12memory_orderS2_(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Insert<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0double1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<double>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10DictionaryC1ERKS0_(godot::Dictionary* __claw_this_, const godot::Dictionary* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:93:2
new (__claw_this_) godot::Dictionary(*from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWRect2R1() {
return sizeof(godot::GetTypeInfo<const godot::Rect2&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIN5godot10StringNameEEC2Ev() {
return alignof(std::allocator<godot::StringName>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE9fetch_xorEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot18GDExtensionBinding10InitObjectC2EiiPi() {
return alignof(godot::GDExtensionBinding::InitObject);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35slideERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:143:25
new (__claw_result_) godot::Vector3(__claw_this_->slide(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE7postsubEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:107:20
return __claw_this_->postsub(p_value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWequal_to0int11() {
return sizeof(std::__type_identity<std::equal_to<int>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE8fetch_orEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEEC1Ev(std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot17PackedStringArray5countERKNS_6StringE(godot::PackedStringArray* __claw_this_, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:128:10
return __claw_this_->count(*value);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Basis9is_finiteEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:131:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2As_claw_dtor(godot::PtrToArg<unsigned short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D11set_look_atERKNS_7Vector3ES3_S3_(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_eye, const struct godot::Vector3* p_target, const struct godot::Vector3* p_up) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:58:7
__claw_this_->set_look_at(*p_eye, *p_target, *p_up);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot5Basis10from_eulerERKNS_7Vector3ENS_10EulerOrderE(struct godot::Basis* __claw_result_, const struct godot::Vector3* p_euler, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:87:15
new (__claw_result_) godot::Basis(godot::Basis::from_euler(*p_euler, p_order));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIhED1Ev(std::atomic<unsigned char>* __claw_this_) {
// /usr/include/c++/13/atomic:759:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2ieqERKS0_(struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:153:7
return __claw_this_->operator==(*p_rect);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_plus_eq_char(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:122:57

godot::internal::gdextension_interface_string_operator_plus_eq_char = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC2Ev() {
return sizeof(std::basic_string_view<char32>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWSignalW_MethodBindings() {
return sizeof(godot::Signal::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcE3setElRKc(godot::CharStringT<char>* __claw_this_, int64_t p_index, const char* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:97:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIsE12is_lock_freeEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWColor1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_get_instance_id(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:168:52

godot::internal::gdextension_interface_object_get_instance_id = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array8is_emptyEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:111:7
return __claw_this_->is_empty();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIsEC2Ev() {
return alignof(std::__atomic_base<short>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBitField0godotWMouseButtonMask11() {
return sizeof(godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWCorner1() {
return alignof(godot::GetTypeInfo<const godot::Corner>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0float1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<float>&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8PtrToArgIRKNS_8Vector4iEE7convertEPKv(struct godot::Vector4i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
new (__claw_result_) godot::Vector4i(godot::PtrToArg<const godot::Vector4i&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::BitField<godot::Node::ProcessThreadMessages>* __claw__ZNK5godot4Node27get_process_thread_messagesEv(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:205:40
new (__claw_result_) godot::BitField<godot::Node::ProcessThreadMessages>(__claw_this_->get_process_thread_messages());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwEC1ERKS1_(godot::CharStringT<wchar_t>* __claw_this_, const godot::CharStringT<wchar_t>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:108:17
new (__claw_this_) godot::CharStringT<wchar_t>(*p_str);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_infoneERKS_(std::type_info* __claw_this_, const std::type_info* __arg) {
// /usr/include/c++/13/typeinfo:114:10
return __claw_this_->operator!=(*__arg);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPPKhE6encodeES3_Pv(const uint8_t** p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
godot::PtrToArg<const unsigned char**>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot15PackedByteArray6resizeEl(godot::PackedByteArray* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:157:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot18PackedVector2Array3ptrEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:142:17
return (const struct godot::Vector2*) __claw_this_->ptr();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_xml_parser_open_buffer(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:128:52

godot::internal::gdextension_interface_xml_parser_open_buffer = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot16PackedInt64ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedInt64Array);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10QuaternionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Quaternion&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS4_mmRKS3_(std::basic_string<char32>* __claw_this_, const std::basic_string<char32>* __str, std::basic_string<char32>::size_type __pos, std::basic_string<char32>::size_type __n, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:599:7
new (__claw_this_) std::basic_string<char32>(*__str, __pos, __n, *__a);
}
}

__CLAW_API unsigned long long __claw_sizeof_pthread_attr_t() {
return sizeof(pthread_attr_t);
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVerticalAlignmentR1() {
return sizeof(godot::GetTypeInfo<godot::VerticalAlignment&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot5ColorEEC2EPKS1_m() {
return alignof(std::initializer_list<godot::Color>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1ERKS2_OS3_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, const std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>::allocator_type* __a, std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:361:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(*__a, std::move(*__x));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String10bin_to_intEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:359:10
return __claw_this_->bin_to_int();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseImE12is_lock_freeEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot8PtrToArgIRKNS_10ProjectionEE7convertEPKv(struct godot::Projection* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
new (__claw_result_) godot::Projection(godot::PtrToArg<const godot::Projection&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZSt19atomic_thread_fenceSt12memory_order(std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:143:3
std::atomic_thread_fence(__m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String5rfindERKS0_l(godot::String* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:287:10
return __claw_this_->rfind(*what, from);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis10transposedEv(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:58:8
new (__claw_result_) godot::Basis(__claw_this_->transposed());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWCallableW_MethodBindings() {
return sizeof(godot::Callable::_MethodBindings);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot7Vector3cvNS_8Vector3iEEv(struct godot::Vector3i* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:177:2
new (__claw_result_) godot::Vector3i(__claw_this_->operator Vector3i());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIlE21compare_exchange_weakERllSt12memory_orderS2_(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDiED1Ev(std::__new_allocator<char32>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWArrayR1() {
return sizeof(godot::PtrToArg<const godot::Array&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godotmlEfRKNS_8Vector2iE(struct godot::Vector2i* __claw_result_, const float p_scalar, const struct godot::Vector2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:145:25
new (__claw_result_) godot::Vector2i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array13ConstIteratorC1ERKS1_(struct godot::PackedVector2Array::ConstIterator* __claw_this_, const struct godot::PackedVector2Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:189:3
new (__claw_this_) godot::PackedVector2Array::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Side_claw_ctor(godot::VariantCaster<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::VariantCaster<godot::Side>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23w_claw_dtor(std::char_traits<char32>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:879:12
__claw_this_->~char_traits();
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot7ClassDB14get_class_listEv(godot::PackedStringArray* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::PackedStringArray(godot::ClassDB::get_class_list());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector325octahedron_tangent_decodeERKNS_7Vector2EPf(struct godot::Vector3* __claw_result_, const struct godot::Vector2* p_oct, float* sign) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:119:17
new (__claw_result_) godot::Vector3(godot::Vector3::octahedron_tangent_decode(*p_oct, sign));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray9remove_atEl(godot::PackedStringArray* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:114:7
__claw_this_->remove_at(index);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_16PackedColorArrayE(godot::Variant* __claw_this_, const godot::PackedColorArray* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:214:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableC1EOS0_(godot::Callable* __claw_this_, godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:98:2
new (__claw_this_) godot::Callable(std::move(*other));
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Default_ranged_hash() {
return sizeof(std::__detail::_Default_ranged_hash);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4AABBEEaSERKNS_5ArrayE(godot::TypedArray<godot::AABB>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:99:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWBitField0godotWMouseButtonMask11() {
return sizeof(godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4sqrtEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:381:14
return godot::Math::sqrt(p_x);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2ineERKS0_(struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:154:7
return __claw_this_->operator!=(*p_rect);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal21register_engine_classERKNS_10StringNameEPKi(const godot::StringName* p_name, const int* p_callbacks) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:119:6
godot::internal::register_engine_class(*p_name, p_callbacks);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEaNEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::ConstIterator* __claw__ZNK5godot16PackedInt32Array3endEv(struct godot::PackedInt32Array::ConstIterator* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:200:31
new (__claw_result_) godot::PackedInt32Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZN5godot18PackedVector3ArrayaSEOS0_(godot::PackedVector3Array* __claw_this_, godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:139:22
return (godot::PackedVector3Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedStringArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedStringArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:57:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt32ArrayE40SE40Iterator_claw_dtor(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:140:12
__claw_this_->~Iterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_4AABBEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::AABB>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math17cubic_interpolateEfffff(float p_from, float p_to, float p_pre, float p_post, float p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:425:14
return godot::Math::cubic_interpolate(p_from, p_to, p_pre, p_post, p_weight);
}
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0godotWPropertyInfo1WgodotWPropertyInfo1() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<godot::PropertyInfo>,godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWRect2i() {
return alignof(godot::Rect2i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8replacenERKNS_6StringES3_(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* what, const godot::String* forwhat) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:286:9
new (__claw_result_) godot::String(__claw_this_->replacen(*what, *forwhat));
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4sqrtEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:378:15
return godot::Math::sqrt(p_x);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_10StringNameE(godot::Variant* __claw_this_, const godot::StringName* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:197:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayC1ERKS0_(godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:144:2
new (__claw_this_) godot::PackedByteArray(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40SideE23v_claw_dtor(godot::GetTypeInfo<const godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8Vector3iE(godot::Variant* __claw_this_, const struct godot::Vector3i* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:186:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40ErrorE23v_claw_dtor(godot::GetTypeInfo<godot::Error&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node20get_process_priorityEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:187:10
return __claw_this_->get_process_priority();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIlEC2EPKlm() {
return alignof(std::initializer_list<long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodePathE23v_claw_dtor(godot::GetTypeInfo<const godot::NodePath&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPropertyUsageFlagsR1() {
return sizeof(godot::GetTypeInfo<const godot::PropertyUsageFlags&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1Ev(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:669:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedInt64ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedInt64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10StringNameEEC1Ev(godot::TypedArray<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:103:1
new (__claw_this_) godot::TypedArray<godot::StringName>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector34zeroEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:98:22
__claw_this_->zero();
}
}

namespace godot {
__CLAW_API const struct godot::Vector4* __claw__ZNK5godot10ProjectionixEi(struct godot::Projection* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:59:32
return (struct godot::Vector4*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector3ArrayW_MethodBindings() {
return sizeof(godot::PackedVector3Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_11OrientationEE6encodeES1_Pv(enum godot::Orientation p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
godot::PtrToArg<godot::Orientation>::encode(p_val, p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEEC1Ev(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1940:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>();
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE9fetch_xorEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection14set_light_biasEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:72:7
__claw_this_->set_light_bias();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratoreqERKS4_(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:156:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE8fetch_orEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_RKS3_(std::basic_string<char>* __claw_this_, std::basic_string<char>* __str, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:716:7
new (__claw_this_) std::basic_string<char>(std::move(*__str), *__a);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0longW10000001() {
return alignof(std::integral_constant<long,1000000>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot5PlanecvNS_6StringEEv(godot::String* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:84:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis15orthonormalizedEv(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:215:8
new (__claw_result_) godot::Basis(__claw_this_->orthonormalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_7Vector34AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseINSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEEbEC2Ev() {
return sizeof(std::__pair_base<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5Rect2EEC1Ev(godot::TypedArray<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:92:1
new (__claw_this_) godot::TypedArray<godot::Rect2>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__false_type_claw_ctor(struct std::__false_type* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:74:10
new (__claw_this_) std::__false_type();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Orientation_claw_dtor(godot::PtrToArg<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~PtrToArg();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_11Transform2DE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Transform2D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:410:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEmIEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API uint64_t* __claw__ZN5godot22_get_element_count_ptrEPh(uint8_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:147:26
return (uint64_t*) godot::_get_element_count_ptr(p_ptr);
}
}

namespace std {
__CLAW_API std::basic_string_view<wchar_t>::size_type __claw__ZNKSt17basic_string_viewIwSt11char_traitsIwEE4sizeEv(std::basic_string_view<wchar_t>* __claw_this_) {
// /usr/include/c++/13/string_view:229:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1ERKS3_(std::vector<godot::Variant>* __claw_this_, const std::vector<godot::Variant>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:601:7
new (__claw_this_) std::vector<godot::Variant>(*__x);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEEeqEPKS1_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::MultiplayerAPI* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:74:22
return __claw_this_->operator==(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRNS_11MethodFlagsEEC2El() {
return alignof(godot::BitField<godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array11sort_customERKNS_8CallableE(godot::Array* __claw_this_, const godot::Callable* func) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:186:7
__claw_this_->sort_custom(*func);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIbEC2Ev() {
return alignof(std::atomic<bool>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_7Vector24AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::CowData<wchar_t>::Size __claw__ZNK5godot7CowDataIwE4findERKwl(godot::CowData<wchar_t>* __claw_this_, const wchar_t* p_val, godot::CowData<wchar_t>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:242:7
return __claw_this_->find(*p_val, p_from);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC1Ev(std::basic_string_view<char32>* __claw_this_) {
// /usr/include/c++/13/string_view:132:7
new (__claw_this_) std::basic_string_view<char32>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIKNS_15KeyModifierMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_7Vector44AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_5PlaneE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Plane* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:413:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePath11is_absoluteEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:95:7
return __claw_this_->is_absolute();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIwED1Ev(std::atomic<wchar_t>* __claw_this_) {
// /usr/include/c++/13/atomic:966:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector4i() {
return sizeof(godot::Vector4i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot11CharStringTIDsE8get_dataEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:127:40
return (const char16*) __claw_this_->get_data();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWBasisR1() {
return alignof(godot::GetTypeInfo<const godot::Basis&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector43minERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vector4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:73:10
new (__claw_result_) godot::Vector4(__claw_this_->min(*p_vector4));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::PropertyUsageFlags>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_ctor(godot::GetTypeInfo<godot::Variant::Type&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::GetTypeInfo<godot::Variant::Type&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot9CharProxyIDsEC2ERKlRNS_7CowDataIDsEE() {
return sizeof(godot::CharProxy<char16>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKS5_RKS7_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::Object*>>* __l, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::Object*>::key_equal* __eql, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:234:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*__l, __n, *__hf, *__eql, *__a);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String11trim_suffixERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* suffix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:365:9
new (__claw_result_) godot::String(__claw_this_->trim_suffix(*suffix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector3ArrayWIterator() {
return sizeof(godot::PackedVector3Array::Iterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array3setElRKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, int64_t index, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:112:7
__claw_this_->set(index, *value);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_5ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:429:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40JoyButtonE23v_claw_ctor(godot::GetTypeInfo<const godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::GetTypeInfo<const godot::JoyButton>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorneERKS4_(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:157:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_5PlaneEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Plane>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedInt32ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedInt32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API enum godot::VerticalAlignment __claw__ZN5godot13VariantCasterINS_17VerticalAlignmentEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
return godot::VariantCaster<godot::VerticalAlignment>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedVector2ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedVector2Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API enum godot::Vector3::Axis __claw__ZNK5godot7Vector314max_axis_indexEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:77:31
return __claw_this_->max_axis_index();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxWchar_traits0char1() {
return sizeof(__gnu_cxx::char_traits<char>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt17basic_string_viewIwSt11char_traitsIwEEC2Ev() {
return alignof(std::basic_string_view<wchar_t>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVariant1() {
return sizeof(godot::GetTypeInfo<godot::Variant>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8md5_textEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:313:9
new (__claw_result_) godot::String(__claw_this_->md5_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWColor1() {
return alignof(godot::PtrToArg<godot::Color>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Callable9is_customEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:104:7
return __claw_this_->is_custom();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D15translate_localERKNS_7Vector3E(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_translation) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:66:7
__claw_this_->translate_local(*p_translation);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEED1Ev(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC2Ev() {
return sizeof(std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array9remove_atEl(godot::PackedVector3Array* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:116:7
__claw_this_->remove_at(index);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNKSt13__atomic_baseIlEcvlEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZN5godot8PtrToArgIRKNS_8CallableEE7convertEPKv(godot::Callable* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
new (__claw_result_) godot::Callable(godot::PtrToArg<const godot::Callable&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D15translate_localERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_translation) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:79:7
__claw_this_->translate_local(*p_translation);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc(std::basic_string_view<char>* __claw_this_, const char* __str) {
// /usr/include/c++/13/string_view:140:7
new (__claw_this_) std::basic_string_view<char>(__str);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Corner_claw_dtor(godot::VariantCaster<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot10RefCounted23get_parent_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
return (godot::StringName*) (&godot::RefCounted::get_parent_class_static());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPropertyHintR1() {
return alignof(godot::GetTypeInfo<godot::PropertyHint&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWNodeWInternalMode1() {
return sizeof(godot::VariantCaster<godot::Node::InternalMode>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEED1Ev(std::__new_allocator<std::__detail::_Hash_node_base*>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodBind9is_varargEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:106:22
return __claw_this_->is_vararg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC2Ev() {
return sizeof(std::list<godot::StringName>);
}
}

namespace std {
__CLAW_API std::vector<godot::StringName>::size_type __claw__ZNKSt6vectorIN5godot10StringNameESaIS1_EE8max_sizeEv(std::vector<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:998:7
return __claw_this_->max_size();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0_claw_ctor(std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:375:12
new (__claw_this_) std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWunsignedWint1() {
return alignof(std::__hash_base<unsigned long,unsigned int>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4geERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:130:22
return __claw_this_->operator>=(*p_vec4);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10DictionaryEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Dictionary>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:108:1
new (__claw_this_) godot::TypedArray<godot::Dictionary>(*p_array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot4AABBcvNS_6StringEEv(godot::String* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:127:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_has_method(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:82:49

godot::internal::gdextension_interface_variant_has_method = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEppEi(std::__atomic_base<long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class2(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:179:63

godot::internal::gdextension_interface_classdb_register_extension_class2 = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEeOEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZN5godot8PtrToArgINS_5Rect2EE7convertEPKv(struct godot::Rect2* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
new (__claw_result_) godot::Rect2(godot::PtrToArg<godot::Rect2>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4leERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:131:22
return __claw_this_->operator<=(*p_vec4);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWRect2i11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector2ArrayWIterator() {
return sizeof(godot::PackedVector2Array::Iterator);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2dvERKf(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:140:10
new (__claw_result_) godot::Vector2(__claw_this_->operator/(*rvalue));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node29is_processing_unhandled_inputEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:196:7
return __claw_this_->is_processing_unhandled_input();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4eqERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:126:22
return __claw_this_->operator==(*p_vec4);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTransform3DR1() {
return sizeof(godot::GetTypeInfo<const godot::Transform3D&>);
}
}

namespace godot {
__CLAW_API godot::BitField<godot::MethodFlags>* __claw__ZN5godot8PtrToArgINS_8BitFieldINS_11MethodFlagsEEEE7convertEPKv(godot::BitField<godot::MethodFlags>* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::BitField<godot::MethodFlags>(godot::PtrToArg<godot::BitField<godot::MethodFlags>>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEED1Ev(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:614:7
__claw_this_->~_Hashtable();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW_Char_types0wchar_t1() {
return alignof(__gnu_cxx::_Char_types<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2ipLERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:91:7
__claw_this_->operator+=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis6rotateERKNS_7Vector3Ef(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:64:7
__claw_this_->rotate(*p_axis, p_angle);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEppEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_method_bind_call() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:157:53

return godot::internal::gdextension_interface_object_method_bind_call;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedColorArray6resizeEl(godot::PackedColorArray* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:117:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_destroy() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:159:46

return godot::internal::gdextension_interface_object_destroy;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector2i() {
return sizeof(godot::Vector2i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayC1ERKS0_(godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:104:2
new (__claw_this_) godot::PackedStringArray(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6SignalC1EOS0_(godot::Signal* __claw_this_, godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:89:2
new (__claw_this_) godot::Signal(std::move(*other));
}
}

__CLAW_API const unsigned short** __claw_cE3AE40FE40__ctype_b_loc() {
// /usr/include/ctype.h:79:35
return (const unsigned short**) __ctype_b_loc();
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0unsignedWlongW21() {
return alignof(std::integral_constant<unsigned long,2>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0bool1() {
return sizeof(godot::GetTypeInfo<bool>);
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40_Char_typesE3EE23C_claw_ctor(__gnu_cxx::_Char_types<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:84:12
new (__claw_this_) __gnu_cxx::_Char_types<char>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC1ERKS6_(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_, const std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PlaneE23v_claw_dtor(godot::GetTypeInfo<const godot::Plane&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15MouseButtonMaskEE8set_flagES2_(godot::BitField<godot::MouseButtonMask&>* __claw_this_, enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEEneEPKS1_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::MultiplayerAPI* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:77:22
return __claw_this_->operator!=(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayD1Ev(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:105:2
__claw_this_->~PackedFloat32Array();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray9encode_s8Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:196:7
__claw_this_->encode_s8(byte_offset, value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_int32_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:142:67

godot::internal::gdextension_interface_packed_int32_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Quaternion8angle_toERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:67:9
return __claw_this_->angle_to(*p_to);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_has_method() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:82:49

return godot::internal::gdextension_interface_variant_has_method;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_17VerticalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::VerticalAlignment>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_15MouseButtonMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MouseButtonMask>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12PropertyInfo7_updateEPi(struct godot::PropertyInfo* __claw_this_, int* p_info) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:109:7
__claw_this_->_update(p_info);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayItEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector3i() {
return sizeof(godot::Vector3i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWequal_to0int1() {
return sizeof(std::equal_to<int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection15set_perspectiveEffffbiff(struct godot::Projection* __claw_this_, real_t p_fovy_degrees, real_t p_aspect, real_t p_z_near, real_t p_z_far, bool p_flip_fov, int p_eye, real_t p_intraocular_dist, real_t p_convergence_dist) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:77:7
__claw_this_->set_perspective(p_fovy_degrees, p_aspect, p_z_near, p_z_far, p_flip_fov, p_eye, p_intraocular_dist, p_convergence_dist);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_10EulerOrderEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::EulerOrder&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_latin1_chars_and_len(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:109:63

godot::internal::gdextension_interface_string_new_with_latin1_chars_and_len = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector4neERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:127:22
return __claw_this_->operator!=(*p_vec4);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot5Basis23get_rotation_axis_angleERNS_7Vector3ERf(struct godot::Basis* __claw_this_, struct godot::Vector3* p_axis, real_t* p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:77:7
__claw_this_->get_rotation_axis_angle(*p_axis, *p_angle);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName7reverseEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:288:9
new (__claw_result_) godot::String(__claw_this_->reverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot4AABB22get_longest_axis_indexEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:88:6
return __claw_this_->get_longest_axis_index();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Callable13get_object_idEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:108:10
return __claw_this_->get_object_id();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4miERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:119:25
new (__claw_result_) godot::Vector4(__claw_this_->operator-(*p_vec4));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MIDIMessageE23v_claw_ctor(godot::GetTypeInfo<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::GetTypeInfo<godot::MIDIMessage>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_16PackedInt32ArrayE(godot::Variant* __claw_this_, const godot::PackedInt32Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:207:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8CallableC2EPKNS_7VariantE() {
return sizeof(godot::Callable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWRect211() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot16PackedColorArray13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:122:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt32Array6insertEll(godot::PackedInt32Array* __claw_this_, int64_t at_index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:113:10
return __claw_this_->insert(at_index, value);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedColorArray5countERKNS_5ColorE(godot::PackedColorArray* __claw_this_, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:128:10
return __claw_this_->count(*value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector2E40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::VariantCaster<godot::Vector2::Axis>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIaEaSERKNS_5ArrayE(godot::TypedArray<char>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:80:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWSideR1() {
return alignof(godot::GetTypeInfo<const godot::Side&>);
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot16ClassDBSingleton31_gde_binding_reference_callbackEPvS1_i() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
return godot::ClassDBSingleton::_gde_binding_reference_callback();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_11Transform3DEE6encodeERKS1_Pv(const struct godot::Transform3D* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
godot::PtrToArg<godot::Transform3D>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<std::_Rb_tree_node<godot::StringName>>>::size_type __claw__ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5godot10StringNameEEEE8max_sizeERKS4_(const std::allocator_traits<std::allocator<std::_Rb_tree_node<godot::StringName>>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<std::_Rb_tree_node<godot::StringName>>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::Iterator* __claw__ZN5godot16PackedColorArray5beginEv(struct godot::PackedColorArray::Iterator* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:192:26
new (__claw_result_) godot::PackedColorArray::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0unsignedWlongW01() {
return alignof(std::integral_constant<unsigned long,0>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZN5godot16PackedInt32ArrayaSEOS0_(godot::PackedInt32Array* __claw_this_, godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:134:20
return (godot::PackedInt32Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEmmEi(std::__atomic_base<short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0wchar_tP1() {
return sizeof(godot::PtrToArg<wchar_t*>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEmmEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector4iE40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgItE10encode_argEt(uint16_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
return godot::PtrToArg<unsigned short>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API const godot::String* __claw__ZNK5godot17PackedStringArray13ConstIteratordeEv(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:168:32
return (godot::String*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element4nextEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:72:27
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->next();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_integer_constant(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:181:77

godot::internal::gdextension_interface_classdb_register_extension_class_integer_constant = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23s_claw_ctor(godot::PtrToArg<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
new (__claw_this_) godot::PtrToArg<unsigned short>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5BasisEE6encodeERKS1_Pv(const struct godot::Basis* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
godot::PtrToArg<godot::Basis>::encode(*p_val, p_ptr);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0wchar_t1Wwchar_t1() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<wchar_t>,wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1ERKNS_7Vector3ES3_(struct godot::Quaternion* __claw_this_, const struct godot::Vector3* v0, const struct godot::Vector3* v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:147:2
new (__claw_this_) godot::Quaternion(*v0, *v1);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object *>, false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedInt64Array_claw_dtor(godot::PtrToArg<const godot::PackedInt64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1Ev(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:147:2
new (__claw_this_) godot::Array();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String15get_slice_countERKS0_(godot::String* __claw_this_, const godot::String* delimiter) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:282:10
return __claw_this_->get_slice_count(*delimiter);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWJoyButton1() {
return sizeof(godot::VariantCaster<godot::JoyButton>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedVector2Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:116:1
new (__claw_this_) godot::TypedArray<godot::PackedVector2Array>(*p_array);
}
}

namespace godot {
__CLAW_API godot::Char16String* __claw__ZNK5godot6String5utf16Ev(godot::Char16String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:384:15
new (__claw_result_) godot::Char16String(__claw_this_->utf16());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIDiEC2Ev() {
return sizeof(std::atomic<char32>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEE10clear_flagES4_(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_, const enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDiE5storeEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWNodeWProcessThreadMessagesR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementC2Ev() {
return alignof(godot::List<godot::PropertyInfo>::Element);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_6Rect2iEE6encodeES1_Pv(struct godot::Rect2i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
godot::PtrToArg<godot::Rect2i>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIiEC1Ev(std::atomic<int>* __claw_this_) {
// /usr/include/c++/13/atomic:827:7
new (__claw_this_) std::atomic<int>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWTransform2D11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40ProjectionE40EE40Planes_claw_dtor(godot::VariantCaster<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API godot::GodotObject* __claw_get__ZN5godot7WrappedC2ENS_10StringNameE__owner(godot::Wrapped* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:49:7

return (godot::GodotObject*)__claw_this_->_owner;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40QuaternionE23v_claw_dtor(godot::GetTypeInfo<const godot::Quaternion&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharProxyE3EE23W_claw_dtor(godot::CharProxy<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:45:7
__claw_this_->~CharProxy();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40EulerOrderE23v_claw_ctor(godot::GetTypeInfo<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::GetTypeInfo<godot::EulerOrder>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIiEC1Ei(std::atomic<int>* __claw_this_, std::atomic<int>::__integral_type __i) {
// /usr/include/c++/13/atomic:833:17
new (__claw_this_) std::atomic<int>(__i);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_14ClockDirectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::ClockDirection&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIsEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<short>);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE11bucket_sizeEm(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt) {
// /usr/include/c++/13/bits/hashtable.h:679:7
return __claw_this_->bucket_size(__bkt);
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::int_type __claw__ZNSt11char_traitsIwE7not_eofERKj(const std::char_traits<wchar_t>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:599:7
return std::char_traits<wchar_t>::not_eof(*__c);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWSignalW_MethodBindings() {
return alignof(godot::Signal::_MethodBindings);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEmIEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEmmEi(std::__atomic_base<char16>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEmmEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton14class_has_enumERKNS_10StringNameES3_b(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* name, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:75:7
return __claw_this_->class_has_enum(*_class, *name, no_inheritance);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__ptr_traits_ptr_toE3EE23E2AE24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23S1_E23Vb0_claw_ctor(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>* __claw_this_) {
// /usr/include/c++/13/bits/ptr_traits.h:130:12
new (__claw_this_) std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_cE3AE40NE40godotE40NE40internalE40SE40EngineClassRegistrationE3EE23E24E40NE40godotE40SE40Object_claw_dtor(godot::internal::EngineClassRegistration<godot::Object>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:123:8
__claw_this_->~EngineClassRegistration();
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D16initialize_classEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
godot::Node3D::initialize_class();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName11sha256_textEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:315:9
new (__claw_result_) godot::String(__claw_this_->sha256_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DC1Effffff(struct godot::Transform2D* __claw_this_, const real_t xx, const real_t xy, const real_t yx, const real_t yy, const real_t ox, const real_t oy) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:127:2
new (__claw_this_) godot::Transform2D(xx, xy, yx, yy, ox, oy);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3irmEi(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:109:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator%(p_scalar));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS2_7ClassDB9ClassInfoEELb0EEEEC1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1ERKS2_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, const std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:321:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWshortP1() {
return alignof(godot::PtrToArg<const short*>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Prime_rehash_policy() {
return sizeof(std::__detail::_Prime_rehash_policy);
}
}
}

namespace std {
__CLAW_API const std::char_traits<wchar_t>::char_type* __claw__ZNSt11char_traitsIwE4findEPKwmRS1_(const std::char_traits<wchar_t>::char_type* __s, std::size_t __n, const std::char_traits<wchar_t>::char_type* __a) {
// /usr/include/c++/13/bits/char_traits.h:534:7
return (const std::char_traits<wchar_t>::char_type*) std::char_traits<wchar_t>::find(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWNodeWProcessThreadMessages11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWBasis1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array11operatornotEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:133:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_7Vector3EE6encodeES3_Pv(const struct godot::Vector3* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
godot::PtrToArg<const godot::Vector3&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot16ClassDBSingleton21class_get_signal_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:66:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->class_get_signal_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZN5godot8PtrToArgIRKNS_18PackedFloat64ArrayEE7convertEPKv(godot::PackedFloat64Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
new (__claw_result_) godot::PackedFloat64Array(godot::PtrToArg<const godot::PackedFloat64Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIbE12is_lock_freeEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWlongR1() {
return sizeof(godot::PtrToArg<const long&>);
}
}

namespace std {
__CLAW_API std::char_traits<char>::int_type __claw__ZNSt11char_traitsIcE7not_eofERKi(const std::char_traits<char>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:470:7
return std::char_traits<char>::not_eof(*__c);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroup_claw_ctor(godot::VariantCaster<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::VariantCaster<godot::Node::ProcessThreadGroup>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIsEC1Ev(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<short>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIsEC1Es(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<short>(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array11operatornotEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:133:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWAABBR1() {
return alignof(godot::PtrToArg<const godot::AABB&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40MIDIMessage_claw_dtor(godot::VariantCaster<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API enum godot::HorizontalAlignment __claw__ZN5godot13VariantCasterINS_19HorizontalAlignmentEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
return godot::VariantCaster<godot::HorizontalAlignment>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_11MethodFlagsEE8set_flagES1_(godot::BitField<const godot::MethodFlags>* __claw_this_, const enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIKNS_11MethodFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_get_class_tag() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:178:51

return godot::internal::gdextension_interface_classdb_get_class_tag;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0float1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<float>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_18PackedFloat32ArrayEE6encodeES1_Pv(godot::PackedFloat32Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
godot::PtrToArg<const godot::PackedFloat32Array&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEED1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23I_claw_dtor(std::__detail::_Select1st::__1st_type<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
__claw_this_->~__1st_type();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40CornerE23v_claw_ctor(godot::GetTypeInfo<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<godot::Corner>();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot10Dictionary5eraseERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* key) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:103:7
return __claw_this_->erase(*key);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZNK5godot8NodePath20get_as_property_pathEv(godot::NodePath* __claw_result_, godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:103:11
new (__claw_result_) godot::NodePath(__claw_this_->get_as_property_path());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Key_claw_ctor(godot::PtrToArg<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::PtrToArg<godot::Key>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEppEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector3ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedVector3Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:58:16
new (__claw_this_) godot::PackedVector3Array::_MethodBindings();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_operator_evaluator(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:90:63

godot::internal::gdextension_interface_variant_get_ptr_operator_evaluator = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot8PtrToArgIRKNS_6StringEE7convertEPKv(godot::String* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
new (__claw_result_) godot::String(godot::PtrToArg<const godot::String&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String3chrEl(godot::String* __claw_result_, int64_t _char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:376:16
new (__claw_result_) godot::String(godot::String::chr(_char));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>::size_type __claw__ZNKSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEE8max_sizeEv(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWInlineAlignment1() {
return alignof(godot::GetTypeInfo<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_3RIDEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::RID>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio03600W11() {
return sizeof(std::ratio<3600,1>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayC1EOS0_(godot::PackedVector2Array* __claw_this_, godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:108:2
new (__claw_this_) godot::PackedVector2Array(std::move(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot18PackedVector2ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedVector2Array);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector419distance_squared_toERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:91:9
return __claw_this_->distance_squared_to(*p_to);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEC1Ev(godot::TypedArray<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:114:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat64Array>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEED1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEppEi(std::__atomic_base<unsigned long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName13to_camel_caseEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:292:9
new (__claw_result_) godot::String(__claw_this_->to_camel_case());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4ceilEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:280:15
return godot::Math::ceil(p_x);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0godotWVariant11() {
return sizeof(std::__type_identity<std::allocator<godot::Variant>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEeOEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZNK5godot16ClassDBSingleton16class_get_signalERKNS_10StringNameES3_(godot::Dictionary* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:65:13
new (__claw_result_) godot::Dictionary(__claw_this_->class_get_signal(*_class, *signal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot4Node15get_tree_stringEv(godot::String* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:175:9
new (__claw_result_) godot::String(__claw_this_->get_tree_string());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlags_claw_ctor(godot::VariantCaster<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::VariantCaster<godot::BitField<godot::MethodFlags>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWlongP1() {
return sizeof(godot::PtrToArg<const long*>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4ceilEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:283:14
return godot::Math::ceil(p_x);
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_destroy(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:60:47

godot::internal::gdextension_interface_variant_destroy = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12SafeRefCount4initEj(godot::SafeRefCount* __claw_this_, uint32_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:191:23
__claw_this_->init(p_value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIhEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<unsigned char>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedVector3Array_claw_dtor(godot::PtrToArg<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWshortR1() {
return alignof(godot::PtrToArg<const short&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node20is_editable_instanceEPS0_(godot::Node* __claw_this_, godot::Node* node) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:223:7
return __claw_this_->is_editable_instance(node);
}
}

namespace godot {
__CLAW_API char16* __claw__ZN5godot7CowDataIDsE4ptrwEv(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:178:20
return (char16*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8PtrToArgIRKNS_8Vector3iEE7convertEPKv(struct godot::Vector3i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
new (__claw_result_) godot::Vector3i(godot::PtrToArg<const godot::Vector3i&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40hashE3EE23I_claw_dtor(std::__type_identity<std::hash<int>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorptEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:146:21
return (struct godot::PropertyInfo*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWClassDBWClassInfo() {
return sizeof(godot::ClassDB::ClassInfo);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdW_Rb_tree_node0godotWStringName111() {
return alignof(std::__type_identity<std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1ERKS0_f(struct godot::Color* __claw_this_, const struct godot::Color* p_c, float p_a) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:246:17
new (__claw_this_) godot::Color(*p_c, p_a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Node3DGizmo_claw_dtor(godot::TypedArray<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:40:7
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZN5godot8PtrToArgIRKNS_18PackedFloat32ArrayEE7convertEPKv(godot::PackedFloat32Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
new (__claw_result_) godot::PackedFloat32Array(godot::PtrToArg<const godot::PackedFloat32Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail15_Hash_node_baseC1EPS0_(struct std::__detail::_Hash_node_base* __claw_this_, struct std::__detail::_Hash_node_base* __next) {
// /usr/include/c++/13/bits/hashtable_policy.h:315:5
new (__claw_this_) std::__detail::_Hash_node_base(__next);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11MethodFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MethodFlags&>::get_class_info());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::ConstIterator* __claw__ZNK5godot16PackedColorArray5beginEv(struct godot::PackedColorArray::ConstIterator* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:199:31
new (__claw_result_) godot::PackedColorArray::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::BitField<const godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1EOS8_RKS7_(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>* __umap, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:217:7
new (__claw_this_) std::unordered_map<int,int>(std::move(*__umap), *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RefINS_10InputEventEEC2ERKS2_() {
return alignof(godot::Ref<godot::InputEvent>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4i4signEv(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:90:26
new (__claw_result_) godot::Vector4i(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math9db2linearEf(float p_db) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:730:14
return godot::Math::db2linear(p_db);
}
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4absdEd(double g) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:687:15
return godot::Math::absd(g);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdWpair0constWintWint111() {
return sizeof(std::allocator_traits<std::allocator<std::pair<const int,int>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node21set_editable_instanceEPS0_b(godot::Node* __claw_this_, godot::Node* node, bool is_editable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:222:7
__claw_this_->set_editable_instance(node, is_editable);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIlE21compare_exchange_weakERllSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector49normalizeEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:86:7
__claw_this_->normalize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11CharStringTIDsEC2Ev() {
return sizeof(godot::CharStringT<char16>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Basis_claw_dtor(godot::PtrToArg<const godot::Basis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_new_copy(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:58:47

godot::internal::gdextension_interface_variant_new_copy = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot18PackedVector2Array8IteratorptEv(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:149:27
return (struct godot::Vector2*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1w_claw_dtor(godot::PtrToArg<const char32*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array13ConstIteratorC1Ev(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:183:3
new (__claw_this_) godot::PackedFloat32Array::ConstIterator();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String10unicode_atEl(godot::String* __claw_this_, int64_t at) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:323:10
return __claw_this_->unicode_at(at);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_indexed_setter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:97:59

return godot::internal::gdextension_interface_variant_get_ptr_indexed_setter;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5PlaneEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Plane>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:97:1
new (__claw_this_) godot::TypedArray<godot::Plane>(*p_array);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_indexed_setter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:97:59

godot::internal::gdextension_interface_variant_get_ptr_indexed_setter = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1EOS0_(godot::StringName* __claw_this_, godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:255:2
new (__claw_this_) godot::StringName(std::move(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedByteArray1() {
return alignof(godot::PtrToArg<godot::PackedByteArray>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math9db2linearEd(double p_db) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:727:15
return godot::Math::db2linear(p_db);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::HorizontalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<godot::HorizontalAlignment&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6String10parse_utf8EPKcl(godot::String* __claw_this_, const char* from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:379:7
__claw_this_->parse_utf8(from, len);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E2E23TE23TE40ListE40SE40ElementE40FE40ElementE23(godot::List::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:137:18
new (__claw_this_) godot::List::Element();
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::Iterator* __claw__ZN5godot18PackedFloat32Array5beginEv(struct godot::PackedFloat32Array::Iterator* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:190:26
new (__claw_result_) godot::PackedFloat32Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node18set_display_foldedEb(godot::Node* __claw_this_, bool fold) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:208:7
__claw_this_->set_display_folded(fold);
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot12PropertyInfoEEC1Ev(std::initializer_list<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::PropertyInfo>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array3setEll(godot::PackedInt32Array* __claw_this_, int64_t index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:108:7
__claw_this_->set(index, value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40_GlobalNil_claw_dtor(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8
__claw_this_->~_GlobalNil();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40EulerOrder_claw_ctor(godot::VariantCaster<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::VariantCaster<godot::EulerOrder>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godotmlElRKNS_8Vector3iE(struct godot::Vector3i* __claw_result_, const int64_t p_scalar, const struct godot::Vector3i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:221:25
new (__claw_result_) godot::Vector3i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion9xform_invERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:101:25
new (__claw_result_) godot::Vector3(__claw_this_->xform_inv(*v));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEmIEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKiiEED1Ev(std::allocator<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ar_claw_dtor(godot::PtrToArg<char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEaNEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D11scale_basisERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:77:7
__claw_this_->scale_basis(*p_scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIhEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<unsigned char>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_15InlineAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::InlineAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0short1() {
return sizeof(godot::GetTypeInfo<short>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math25cubic_interpolate_in_timeEffffffff(float p_from, float p_to, float p_pre, float p_post, float p_weight, float p_to_t, float p_pre_t, float p_post_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:475:14
return godot::Math::cubic_interpolate_in_time(p_from, p_to, p_pre, p_post, p_weight, p_to_t, p_pre_t, p_post_t);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_11Transform2DEE6encodeES1_Pv(struct godot::Transform2D* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
godot::PtrToArg<godot::Transform2D>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSC_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, const std::unordered_map<godot::StringName,godot::MethodBind*>* __umap, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:207:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*__umap, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RIDC2EPKNS_7VariantE() {
return alignof(godot::RID);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::ConstIterator* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5beginEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_result_, godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:205:31
new (__claw_result_) godot::List<godot::PropertyInfo>::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZN5godot18PackedVector3ArrayaSERKS0_(godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:138:22
return (godot::PackedVector3Array*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZN5godot18PackedVector2ArrayaSERKS0_(godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:138:22
return (godot::PackedVector2Array*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis9transposeEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:55:7
__claw_this_->transpose();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot5Basis23get_rotation_quaternionEv(struct godot::Quaternion* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:79:13
new (__claw_result_) godot::Quaternion(__claw_this_->get_rotation_quaternion());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iS1_S1_bb(const char* p_function, const char* p_file, int p_line, const char* p_error, const char* p_message, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:44:6
godot::_err_print_error(p_function, p_file, p_line, p_error, p_message, p_editor_notify, p_is_warning);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0char32P1() {
return sizeof(godot::PtrToArg<char32*>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot7Variant13get_type_nameENS0_4TypeE(godot::String* __claw_result_, enum godot::Variant::Type type) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:330:16
new (__claw_result_) godot::String(godot::Variant::get_type_name(type));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicItEC1Et(std::atomic<unsigned short>* __claw_this_, std::atomic<unsigned short>::__integral_type __i) {
// /usr/include/c++/13/atomic:810:17
new (__claw_this_) std::atomic<unsigned short>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEeOEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40AABBE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::AABB>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::AABB>>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt32Array5rfindEll(godot::PackedInt32Array* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:125:10
return __claw_this_->rfind(value, from);
}
}

__CLAW_API int __claw_cE3AE40FE40getchar() {
// /usr/include/stdio.h:578:12
return getchar();
}

namespace std {
__CLAW_API std::basic_string<char>::size_type __claw__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv(std::basic_string<char>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1084:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8ObjectIDC2Ev() {
return sizeof(godot::ObjectID);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWDictionaryW_MethodBindings() {
return alignof(godot::Dictionary::_MethodBindings);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIsE23compare_exchange_strongERssSt12memory_orderS2_(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRKNS_15KeyModifierMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicItEC1Ev(std::atomic<unsigned short>* __claw_this_) {
// /usr/include/c++/13/atomic:804:7
new (__claw_this_) std::atomic<unsigned short>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVariantR1() {
return sizeof(godot::PtrToArg<const godot::Variant&>);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIDsEaSERKDs(godot::CharProxy<char16>* __claw_this_, const char16* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:74:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i5mergeERKS0_(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:112:16
new (__claw_result_) godot::Rect2i(__claw_this_->merge(*p_rect));
return __claw_result_;
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE7tolowerEPwPKw(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:279:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->tolower(__lo, __hi);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1Efff(struct godot::Color* __claw_this_, float p_r, float p_g, float p_b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:236:17
new (__claw_this_) godot::Color(p_r, p_g, p_b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D9set_scaleERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:84:7
__claw_this_->set_scale(*scale);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_get_instance_id() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:168:52

return godot::internal::gdextension_interface_object_get_instance_id;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWVector311() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0bool1() {
return alignof(godot::GetTypeInfo<bool>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIlEC1Ev(std::initializer_list<long>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<long>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIDsEC2Ev() {
return sizeof(std::__atomic_base<char16>);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8internal23EngineClassRegistrationINS_4NodeEEC2Ev() {
return sizeof(godot::internal::EngineClassRegistration<godot::Node>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_3RIDEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::RID>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEEC2Ev() {
return sizeof(std::__new_allocator<std::_List_node<godot::StringName>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0unsignedWlongWlongW01() {
return alignof(std::integral_constant<unsigned long long,0>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40RID_claw_ctor(godot::PtrToArg<const godot::RID&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
new (__claw_this_) godot::PtrToArg<const godot::RID&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNKSt13__atomic_baseIyEcvyEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator unsigned long long();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8PtrToArgINS_8Vector3iEE7convertEPKv(struct godot::Vector3i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
new (__claw_result_) godot::Vector3i(godot::PtrToArg<godot::Vector3i>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt5ctypeIcE2isEPKcS2_Pt(std::ctype<char>* __claw_this_, const char* __lo, const char* __hi, std::ctype_base::mask* __vec) {
// /usr/include/c++/13/bits/locale_facets.h:767:7
return (const char*) __claw_this_->is(__lo, __hi, __vec);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArrayeqERKNS_7VariantE(godot::PackedByteArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:207:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0int1() {
return sizeof(std::__type_identity<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0char1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<char>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedStringArray_claw_dtor(godot::PtrToArg<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot8Vector2i6aspectEv(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:120:9
return __claw_this_->aspect();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node18print_orphan_nodesEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:141:14
godot::Node::print_orphan_nodes();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWintP1() {
return alignof(godot::PtrToArg<unsigned int*>);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIsE5storeEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRNS_15KeyModifierMaskEEcvlEv(godot::BitField<godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIfE6encodeEfPv(float p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
godot::PtrToArg<float>::encode(p_val, p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedVector3Array_claw_dtor(godot::TypedArray<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:117:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWchar_traits0char1() {
return alignof(std::char_traits<char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayC1EOS0_(godot::PackedInt32Array* __claw_this_, godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:104:2
new (__claw_this_) godot::PackedInt32Array(std::move(*other));
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE8exchangeEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4iE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11CharStringTIwEltERKS1_(godot::CharStringT<wchar_t>* __claw_this_, const godot::CharStringT<wchar_t>* p_right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:113:7
return __claw_this_->operator<(*p_right);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVerticalAlignment1() {
return alignof(godot::VariantCaster<godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API const godot::String* __claw__ZNK5godot17PackedStringArray3ptrEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:139:16
return (const godot::String*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11SafeNumericIjEC2Ej() {
return sizeof(godot::SafeNumeric<unsigned int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWchar32P1() {
return alignof(godot::PtrToArg<const char32*>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDsE23compare_exchange_strongERDsDsSt12memory_orderS2_(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16MethodDefinitionC1ENS_10StringNameE(struct godot::MethodDefinition* __claw_this_, godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:70:2
new (__claw_this_) godot::MethodDefinition(*p_name);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1() {
return alignof(std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4::Axis&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1l_claw_dtor(godot::PtrToArg<const unsigned long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWRect21() {
return sizeof(godot::PtrToArg<godot::Rect2>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_dtor(godot::GetTypeInfo<const godot::Projection::Planes&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_named() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:69:48

return godot::internal::gdextension_interface_variant_get_named;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName12is_valid_intEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:336:7
return __claw_this_->is_valid_int();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector25slideERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:120:10
new (__claw_result_) godot::Vector2(__claw_this_->slide(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node14is_ancestor_ofEPS0_(godot::Node* __claw_this_, godot::Node* node) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:161:7
return __claw_this_->is_ancestor_of(node);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40String_claw_ctor(godot::PtrToArg<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
new (__claw_this_) godot::PtrToArg<godot::String>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4Node11ProcessModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessMode&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261f_claw_ctor(godot::PtrToArg<const float&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
new (__claw_this_) godot::PtrToArg<const float&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D12rotate_basisERKNS_7Vector3Ef(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:56:7
__claw_this_->rotate_basis(*p_axis, p_angle);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_float64_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:140:69

godot::internal::gdextension_interface_packed_float64_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayC1ERKS0_(godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:102:2
new (__claw_this_) godot::PackedInt64Array(*from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadMessages1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVariantWTypeR1() {
return sizeof(godot::GetTypeInfo<godot::Variant::Type&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D13orthogonalizeEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:78:7
__claw_this_->orthogonalize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWInlineAlignment1() {
return sizeof(godot::PtrToArg<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color8from_hsvEffff(struct godot::Color* __claw_result_, float p_h, float p_s, float p_v, float p_alpha) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:200:15
new (__claw_result_) godot::Color(godot::Color::from_hsv(p_h, p_s, p_v, p_alpha));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_5Rect2EEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWintR1() {
return alignof(godot::PtrToArg<const unsigned int&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4WAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessThreadGroup __claw__ZN5godot8PtrToArgINS_4Node18ProcessThreadGroupEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
return godot::PtrToArg<godot::Node::ProcessThreadGroup>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot6String10similarityERKS0_(godot::String* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:296:9
return __claw_this_->similarity(*text);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Mod_range_hashing_claw_ctor(std::__type_identity<std::__detail::_Mod_range_hashing>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::__detail::_Mod_range_hashing>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectID14is_ref_countedEv(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:42:22
return __claw_this_->is_ref_counted();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIhEC1ERKNS_5ArrayE(godot::TypedArray<unsigned char>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:79:1
new (__claw_this_) godot::TypedArray<unsigned char>(*p_array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String9path_joinERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* file) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:322:9
new (__claw_result_) godot::String(__claw_this_->path_join(*file));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector4EE6encodeERKS1_Pv(const struct godot::Vector4* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
godot::PtrToArg<godot::Vector4>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIlE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
return godot::PtrToArg<long>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEeOEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MouseButtonE23v_claw_dtor(godot::GetTypeInfo<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKS5_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:246:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(__n, *__hf, *__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEpLEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::VerticalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API const std::ctype<char>::char_type* __claw__ZNKSt5ctypeIcE7tolowerEPcPKc(std::ctype<char>* __claw_this_, std::ctype<char>::char_type* __lo, const std::ctype<char>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:860:7
return (const std::ctype<char>::char_type*) __claw_this_->tolower(__lo, __hi);
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math15is_equal_approxEfff(float a, float b, float tolerance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:637:13
return godot::Math::is_equal_approx(a, b, tolerance);
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot7Vector4cvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:133:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWProjection1() {
return sizeof(godot::GetTypeInfo<godot::Projection>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8get_fileEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:339:9
new (__claw_result_) godot::String(__claw_this_->get_file());
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Quaternion9get_angleEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:79:9
return __claw_this_->get_angle();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E40SE40__get_value_typeE3EE23S1__claw_ctor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>();
}
}
}

namespace godot {
namespace internal {
__CLAW_API void* __claw_get_godotWinternalWtoken() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:42:18

return (void*)godot::internal::token;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35floorEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:126:25
new (__claw_result_) godot::Vector3(__claw_this_->floor());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::Iterator* __claw__ZN5godot18PackedFloat64Array5beginEv(struct godot::PackedFloat64Array::Iterator* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:190:26
new (__claw_result_) godot::PackedFloat64Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWKeyModifierMaskR11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<godot::StringName>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_3KeyEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Key>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3i4signEv(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:88:26
new (__claw_result_) godot::Vector3i(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEC1Ev(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref<godot::InputEvent>();
}
}

namespace godot {
__CLAW_API godot::CowData<char16>::Size __claw__ZNK5godot7CowDataIDsE4sizeEv(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:187:22
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWEulerOrder1() {
return sizeof(godot::PtrToArg<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant9set_keyedERKS0_S2_Rb(godot::Variant* __claw_this_, const godot::Variant* key, const godot::Variant* value, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:305:7
__claw_this_->set_keyed(*key, *value, *r_valid);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EED1Ev(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:574:7
__claw_this_->~_List_base();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE9fetch_subEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessThreadGroupR1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_6ObjectEELb0EEEEC1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>();
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZN5godot18PackedVector2ArrayaSEOS0_(godot::PackedVector2Array* __claw_this_, godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:139:22
return (godot::PackedVector2Array*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWintP1() {
return alignof(godot::PtrToArg<const unsigned int*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot10StringNameEEC1ERKS1_(std::allocator<godot::StringName>* __claw_this_, const std::allocator<godot::StringName>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<godot::StringName>(*__a);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D13inverse_xformERKS0_(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:113:29
new (__claw_result_) godot::Transform3D(__claw_this_->inverse_xform(*t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEC2ERKS3_() {
return sizeof(godot::List<godot::PropertyInfo>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVKSt13__atomic_baseIlEcvlEv(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot8PtrToArgINS_5ErrorEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
return godot::PtrToArg<godot::Error>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23I_claw_dtor(godot::PtrToArg<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSt5mutexC1Ev(std::mutex* __claw_this_) {
// /usr/include/c++/13/bits/std_mutex.h:104:5
new (__claw_this_) std::mutex();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw_get_godotWProjection_columns(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:47:21

return (struct godot::Vector4*)__claw_this_->columns;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_s16El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:180:10
return __claw_this_->decode_s16(byte_offset);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVKSt13__atomic_baseIbE4loadESt12memory_order(std::__atomic_base<bool>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40PropertyHintE23v_claw_ctor(godot::GetTypeInfo<const godot::PropertyHint&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::GetTypeInfo<const godot::PropertyHint&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIdEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<double>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot5PlanengEv(struct godot::Plane* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:77:8
new (__claw_result_) godot::Plane(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_8CallableEE6encodeES1_Pv(godot::Callable* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
godot::PtrToArg<const godot::Callable&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API enum godot::ClockDirection __claw__ZN5godot8PtrToArgINS_14ClockDirectionEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
return godot::PtrToArg<godot::ClockDirection>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadGroupR1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImE9fetch_xorEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayC1ESt16initializer_listINS_6StringEE(godot::PackedStringArray* __claw_this_, std::initializer_list<godot::String>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:207:20
new (__claw_this_) godot::PackedStringArray(*p_init);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZN5godot8NodePathaSERKS0_(godot::NodePath* __claw_this_, const godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:110:12
return (godot::NodePath*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot8PtrToArgIbE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
return godot::PtrToArg<bool>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw_get_godotWAABB_position(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:46:21

return (struct godot::Vector3*)&__claw_this_->position;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedVector2ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedVector2Array&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11CharStringTIDsEltERKS1_(godot::CharStringT<char16>* __claw_this_, const godot::CharStringT<char16>* p_right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:113:7
return __claw_this_->operator<(*p_right);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40StringNameE23v_claw_dtor(godot::GetTypeInfo<const godot::StringName&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261IE23v_claw_ctor(godot::GetTypeInfo<const int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
new (__claw_this_) godot::GetTypeInfo<const int&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array8is_emptyEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:107:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot5Array11_native_ptrEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:146:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWInternalModeR1() {
return sizeof(godot::GetTypeInfo<godot::Node::InternalMode&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedVector3ArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedVector3Array&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE9fetch_subEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_10EulerOrderEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::EulerOrder>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedColorArray4findERKNS_5ColorEl(godot::PackedColorArray* __claw_this_, const struct godot::Color* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:126:10
return __claw_this_->find(*value, from);
}
}

namespace godot {
__CLAW_API float* __claw__ZN5godot5ColorixEi(struct godot::Color* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:63:24
return (float*) (&__claw_this_->operator[](p_idx));
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEC1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math22snap_scalar_separationEffff(float p_offset, float p_step, float p_target, float p_separation) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:802:14
return godot::Math::snap_scalar_separation(p_offset, p_step, p_target, p_separation);
}
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40char_traitsE3EE23C_claw_dtor(__gnu_cxx::char_traits<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:111:12
__claw_this_->~char_traits();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedFloat32Array6appendEd(godot::PackedFloat32Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:110:7
return __claw_this_->append(value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector3E40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::VariantCaster<godot::Vector3::Axis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::String>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::String>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6SignaleqERKNS_7VariantE(godot::Signal* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:101:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6localeC2Ev() {
return alignof(std::locale);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40SignalE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
__claw_this_->~GetTypeInfo();
}
}

namespace __gnu_cxx {
__CLAW_API void __claw__ZN9__gnu_cxx11char_traitsIwE6assignERwRKw(__gnu_cxx::char_traits<wchar_t>::char_type* __c1, const __gnu_cxx::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:125:7
__gnu_cxx::char_traits<wchar_t>::assign(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringplEPKDs(godot::String* __claw_result_, godot::String* __claw_this_, const char16* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:455:9
new (__claw_result_) godot::String(__claw_this_->operator+(p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRNS_15MouseButtonMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1EmRKS1_RKS7_(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::hasher* __hf, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:246:7
new (__claw_this_) std::unordered_map<int,int>(__n, *__hf, *__a);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String8num_realEdb(godot::String* __claw_result_, double p_num, bool p_trailing) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:387:16
new (__claw_result_) godot::String(godot::String::num_real(p_num, p_trailing));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0double11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<double>>);
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIwE2ltERKwS3_(const __gnu_cxx::char_traits<wchar_t>::char_type* __c1, const __gnu_cxx::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:140:7
return __gnu_cxx::char_traits<wchar_t>::lt(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIhE10encode_argEh(uint8_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
return godot::PtrToArg<unsigned char>::encode_arg(p_val);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIjEC2Ev() {
return alignof(std::atomic<unsigned int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5ArrayEE6encodeES1_Pv(godot::Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
godot::PtrToArg<godot::Array>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringplEPKDi(godot::String* __claw_result_, godot::String* __claw_this_, const char32* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:456:9
new (__claw_result_) godot::String(__claw_this_->operator+(p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIsE10encode_argEs(int16_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
return godot::PtrToArg<short>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot6Signal8get_nameEv(godot::StringName* __claw_result_, godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:94:13
new (__claw_result_) godot::StringName(__claw_this_->get_name());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIDiE5storeEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaterniondvERKf(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:113:28
new (__claw_result_) godot::Quaternion(__claw_this_->operator/(*s));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZN5godot8PtrToArgIRKNS_16PackedColorArrayEE7convertEPKv(godot::PackedColorArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
new (__claw_result_) godot::PackedColorArray(godot::PtrToArg<const godot::PackedColorArray&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector2ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedVector2Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:58:16
__claw_this_->~_MethodBindings();
}
}

namespace std {
__CLAW_API std::__ctype_abstract_base<wchar_t>::char_type __claw__ZNKSt21__ctype_abstract_baseIwE5widenEc(std::__ctype_abstract_base<wchar_t>* __claw_this_, char __c) {
// /usr/include/c++/13/bits/locale_facets.h:296:7
return __claw_this_->widen(__c);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_17PackedStringArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:405:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40SignalE23v_claw_dtor(godot::GetTypeInfo<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::MethodFlags&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEaSEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API int8_t __claw__ZN5godot8PtrToArgIaE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
return godot::PtrToArg<char>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWProjection1() {
return alignof(godot::GetTypeInfo<godot::Projection>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10StringNameC2EPKNS_7VariantE() {
return alignof(godot::StringName);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String13strip_escapesEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:317:9
new (__claw_result_) godot::String(__claw_this_->strip_escapes());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMouseButton1() {
return sizeof(godot::GetTypeInfo<const godot::MouseButton>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWcharP1() {
return sizeof(godot::PtrToArg<const unsigned char*>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE9fetch_xorEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWBasis() {
return sizeof(godot::Basis);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_PNS1_10MethodBindEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return alignof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot10StringNameaSEOS0_(godot::StringName* __claw_this_, godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:410:14
return (godot::StringName*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace std {
__CLAW_API std::__atomic_flag_data_type __claw_get_stdW__atomic_flag_base__M_i(struct std::__atomic_flag_base* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:200:10

return __claw_this_->_M_i;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15MouseButtonMaskEE8set_flagES3_(godot::BitField<const godot::MouseButtonMask&>* __claw_this_, const enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0wchar_t11() {
return sizeof(std::allocator_traits<std::allocator<wchar_t>>);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color15get_named_colorEi(struct godot::Color* __claw_result_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:198:15
new (__claw_result_) godot::Color(godot::Color::get_named_color(p_idx));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_set_stdW__detailW_Prime_rehash_policy__M_next_resize(struct std::__detail::_Prime_rehash_policy* __claw_this_, std::size_t __claw_value_) {
// /usr/include/c++/13/bits/hashtable_policy.h:540:10

__claw_this_->_M_next_resize = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWStringName11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::StringName>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0unsignedWlong1() {
return alignof(godot::GetTypeInfo<unsigned long>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_8Vector4iE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector4i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:378:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node25get_multiplayer_authorityEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:229:10
return __claw_this_->get_multiplayer_authority();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZN5godot8PtrToArgImE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
return godot::PtrToArg<unsigned long>::convert(p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API std::size_t __claw_get_stdW__detailW_Prime_rehash_policy__M_next_resize(struct std::__detail::_Prime_rehash_policy* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:540:10

return __claw_this_->_M_next_resize;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName5countERKNS_6StringEll(godot::StringName* __claw_this_, const godot::String* what, int64_t from, int64_t to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:271:10
return __claw_this_->count(*what, from, to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedStringArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedStringArray&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_info14__is_pointer_pEv(std::type_info* __claw_this_) {
// /usr/include/c++/13/typeinfo:131:18
return __claw_this_->__is_pointer_p();
}
}

namespace godot {
__CLAW_API char* __claw__ZN5godot11CharStringTIcE4ptrwEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:91:20
return (char*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot18PackedFloat64ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedFloat64Array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_4NodeEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Node>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32ArrayeqERKNS_7VariantE(godot::PackedFloat32Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:127:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEC1Ev(godot::TypedArray<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:113:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat32Array>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0unsignedWintW01() {
return alignof(std::integral_constant<unsigned int,0>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector3R1() {
return alignof(godot::PtrToArg<const godot::Vector3&>);
}
}

namespace std {
__CLAW_API std::initializer_list<godot::Variant>::size_type __claw__ZNKSt16initializer_listIN5godot7VariantEE4sizeEv(std::initializer_list<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element3setERKS1_(godot::List<godot::PropertyInfo>::Element* __claw_this_, const struct godot::PropertyInfo* p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:129:23
__claw_this_->set(*p_value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWfloatR1() {
return sizeof(godot::GetTypeInfo<const float&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40BasisE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Basis>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Basis>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12__mutex_baseC2Ev() {
return alignof(std::__mutex_base);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_5ColorEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40pairE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23Vb0E23b_claw_ctor(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12
new (__claw_this_) std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcEaSERKS1_(godot::CowData<char>* __claw_this_, const godot::CowData<char>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:176:7
__claw_this_->operator=(*p_from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodInfoC1Ev(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:79:2
new (__claw_this_) godot::MethodInfo();
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot5Color5get_sEv(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:59:8
return __claw_this_->get_s();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::InternalMode>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWequal_to0godotWStringName1() {
return sizeof(std::equal_to<godot::StringName>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array11operatornotEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:209:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String12nocasecmp_toERKS0_(godot::String* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:275:10
return __claw_this_->nocasecmp_to(*to);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIbEC2Ev() {
return sizeof(std::__atomic_base<bool>);
}
}

namespace godot {
__CLAW_API double __claw__ZN5godot8PtrToArgIdE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
return godot::PtrToArg<double>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZN5godot8PtrToArgIjE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
return godot::PtrToArg<unsigned int>::convert(p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0unsignedWintW11() {
return alignof(std::integral_constant<unsigned int,1>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0charP1() {
return alignof(godot::PtrToArg<char*>);
}
}

namespace godot {
__CLAW_API float __claw__ZN5godot8PtrToArgIfE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
return godot::PtrToArg<float>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23D_claw_ctor(std::__success_type<long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
new (__claw_this_) std::__success_type<long double>();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_id(struct godot::MethodInfo* __claw_this_, int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->id = __claw_value_;
}
}

namespace godot {
__CLAW_API uint8_t __claw__ZN5godot8PtrToArgIhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
return godot::PtrToArg<unsigned char>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API uint16_t __claw__ZN5godot8PtrToArgItE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
return godot::PtrToArg<unsigned short>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZN5godot8PtrToArgIiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
return godot::PtrToArg<int>::convert(p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_color_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:136:67

return godot::internal::gdextension_interface_packed_color_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWcharR1() {
return sizeof(godot::PtrToArg<const unsigned char&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15MouseButtonMaskEE10clear_flagES1_(godot::BitField<const godot::MouseButtonMask>* __claw_this_, const enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiE3setElRKDi(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_index, const char32* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:199:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVKSt13__atomic_baseIcEcvcEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator char();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2idvERKi(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:100:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator/(*rvalue));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot11Transform2D9xform_invERKNS_7Vector2E(struct godot::Vector2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:119:25
new (__claw_result_) godot::Vector2(__claw_this_->xform_inv(*p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int16_t __claw__ZN5godot8PtrToArgIsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
return godot::PtrToArg<short>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWAABB() {
return sizeof(godot::AABB);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23r_claw_ctor(godot::PtrToArg<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
new (__claw_this_) godot::PtrToArg<char>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_List_node0godotWStringName1() {
return alignof(std::_List_node<godot::StringName>);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8internal23EngineClassRegistrationINS_6ObjectEEC2Ev() {
return sizeof(godot::internal::EngineClassRegistration<godot::Object>);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__true_type_claw_dtor(struct std::__true_type* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:73:10
__claw_this_->~__true_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1EPKDi(godot::StringName* __claw_this_, const char32* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:259:2
new (__claw_this_) godot::StringName(from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_ctor(godot::GetTypeInfo<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
new (__claw_this_) godot::GetTypeInfo<godot::StringName>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1ERKS3_RKS2_(std::vector<godot::PropertyInfo>* __claw_this_, const std::vector<godot::PropertyInfo>* __x, const std::allocator<godot::PropertyInfo>* __a) {
// /usr/include/c++/13/bits/stl_vector.h:624:7
new (__claw_this_) std::vector<godot::PropertyInfo>(*__x, *__a);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot4Node8get_nameEv(godot::StringName* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:144:13
new (__claw_result_) godot::StringName(__claw_this_->get_name());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZSt26atomic_flag_clear_explicitPSt11atomic_flagSt12memory_order(struct std::atomic_flag* __a, std::memory_order __m) {
// /usr/include/c++/13/atomic:1238:3
std::atomic_flag_clear_explicit(__a, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1EPKDs(godot::StringName* __claw_this_, const char16* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:258:2
new (__claw_this_) godot::StringName(from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTransform3D1() {
return alignof(godot::GetTypeInfo<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Transform3DE23v_claw_ctor(godot::GetTypeInfo<const godot::Transform3D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
new (__claw_this_) godot::GetTypeInfo<const godot::Transform3D&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedFloat64Array1() {
return sizeof(godot::PtrToArg<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWOrientation1() {
return alignof(godot::GetTypeInfo<const godot::Orientation>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0int1() {
return sizeof(godot::PtrToArg<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWcharR1() {
return sizeof(godot::PtrToArg<const char&>);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot10ProjectionmlERKS0_(struct godot::Projection* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Projection* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:119:13
new (__claw_result_) godot::Projection(__claw_this_->operator*(*p_matrix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node18notify_thread_safeEi(godot::Node* __claw_this_, int32_t what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:277:7
__claw_this_->notify_thread_safe(what);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis7rotatedERKNS_7Vector3Ef(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:65:8
new (__claw_result_) godot::Basis(__claw_this_->rotated(*p_axis, p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_set_godotW_GlobalNil_left(struct godot::_GlobalNil* __claw_this_, struct godot::_GlobalNil* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

__claw_this_->left = __claw_value_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot4AABB21get_longest_axis_sizeEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:89:24
return __claw_this_->get_longest_axis_size();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEeOEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWintP1() {
return sizeof(godot::PtrToArg<const int*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot9CharProxyIwEC1ERKS1_(godot::CharProxy<wchar_t>* __claw_this_, const godot::CharProxy<wchar_t>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:58:17
new (__claw_this_) godot::CharProxy<wchar_t>(*p_other);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4acosEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:360:14
return godot::Math::acos(p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWNodePath11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4acosEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:357:15
return godot::Math::acos(p_x);
}
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D10looking_atERKNS_7Vector3ES3_(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_target, const struct godot::Vector3* p_up) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:59:14
new (__claw_result_) godot::Transform3D(__claw_this_->looking_at(*p_target, *p_up));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedInt64Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:112:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array13ConstIteratorC1EPKl(struct godot::PackedInt64Array::ConstIterator* __claw_this_, const int64_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:182:3
new (__claw_this_) godot::PackedInt64Array::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot11Transform3D9xform_invERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:93:25
new (__claw_result_) godot::Vector3(__claw_this_->xform_inv(*p_vector));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40Variant_claw_dtor(std::__type_identity<std::allocator<godot::Variant>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlags_claw_dtor(godot::VariantCaster<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261d_claw_dtor(godot::PtrToArg<const double&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE9fetch_addEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23lE23v_claw_ctor(godot::GetTypeInfo<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
new (__claw_this_) godot::GetTypeInfo<unsigned long>();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0stdW_List_node0godotWStringName11WstdW_List_node0godotWStringName11() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<std::_List_node<godot::StringName>>,std::_List_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot10StringName6rsplitERKNS_6StringEbl(godot::PackedStringArray* __claw_result_, godot::StringName* __claw_this_, const godot::String* delimiter, bool allow_empty, int64_t maxsplit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:296:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->rsplit(*delimiter, allow_empty, maxsplit));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt11atomic_flagC1Ev(struct std::atomic_flag* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:214:5
new (__claw_this_) std::atomic_flag();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIsE23compare_exchange_strongERssSt12memory_orderS2_(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldINS_15MouseButtonMaskEEcvlEv(godot::BitField<godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math8fposmodpEff(float p_x, float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:248:14
return godot::Math::fposmodp(p_x, p_y);
}
}
}

namespace std {
__CLAW_API std::char_traits<char32>::char_type* __claw__ZNSt11char_traitsIDiE4moveEPDiPKDim(std::char_traits<char32>::char_type* __s1, const std::char_traits<char32>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:947:7
return (std::char_traits<char32>::char_type*) std::char_traits<char32>::move(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API void __claw_set_godotW_GlobalNil_right(struct godot::_GlobalNil* __claw_this_, struct godot::_GlobalNil* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

__claw_this_->right = __claw_value_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRKNS_15MouseButtonMaskEEcvlEv(godot::BitField<const godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::Node::DuplicateFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::DuplicateFlags&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2i3minERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vector2i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:82:11
new (__claw_result_) godot::Vector2i(__claw_this_->min(*p_vector2i));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt3setIN5godot10StringNameESt4lessIS1_ESaIS1_EEC2Ev() {
return alignof(std::set<godot::StringName>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEppEi(std::__atomic_base<unsigned int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23f_claw_dtor(__iseqsig_type<float>* __claw_this_) {
// /usr/include/math.h:1367:19
__claw_this_->~__iseqsig_type();
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot10MethodBind8get_nameEv(godot::StringName* __claw_result_, godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:76:13
new (__claw_result_) godot::StringName(__claw_this_->get_name());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt11atomic_flagC1Eb(struct std::atomic_flag* __claw_this_, bool __i) {
// /usr/include/c++/13/bits/atomic_base.h:221:15
new (__claw_this_) std::atomic_flag(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0boolWfalse1() {
return alignof(std::integral_constant<bool,false>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEppEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector3iR1() {
return sizeof(godot::PtrToArg<const godot::Vector3i&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS4_mm(std::basic_string<char16>* __claw_this_, const std::basic_string<char16>* __str, std::basic_string<char16>::size_type __pos, std::basic_string<char16>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:581:7
new (__claw_this_) std::basic_string<char16>(*__str, __pos, __n);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE9incrementEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:75:20
return __claw_this_->increment();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2i4signEv(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:121:11
new (__claw_result_) godot::Vector2i(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_ref_get_object() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:171:45

return godot::internal::gdextension_interface_ref_get_object;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC2ENS4_12__sv_wrapperERKS3_() {
return alignof(std::basic_string<wchar_t>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Quaternion15is_equal_approxERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:57:7
return __claw_this_->is_equal_approx(*p_quaternion);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE9fetch_andEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWshortR1() {
return alignof(godot::PtrToArg<const unsigned short&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_18PropertyUsageFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PropertyUsageFlags&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWcharP1() {
return sizeof(godot::PtrToArg<const char*>);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE9incrementEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:75:20
return __claw_this_->increment();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWRect2i() {
return sizeof(godot::Rect2i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_18PropertyUsageFlagsEEC1El(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::PropertyUsageFlags&>(p_value);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot4Node22get_editor_descriptionEv(godot::String* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:234:9
new (__claw_result_) godot::String(__claw_this_->get_editor_description());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8internal23EngineClassRegistrationINS_10RefCountedEEC2Ev() {
return sizeof(godot::internal::EngineClassRegistration<godot::RefCounted>);
}
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4lerpEfff(float minv, float maxv, float t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:399:14
return godot::Math::lerp(minv, maxv, t);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayC1ERKS0_(godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:102:2
new (__claw_this_) godot::PackedInt32Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Al_claw_dtor(godot::PtrToArg<unsigned long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWintR1() {
return sizeof(godot::PtrToArg<const int&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D21set_visibility_parentERKNS_8NodePathE(godot::Node3D* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:108:7
__claw_this_->set_visibility_parent(*path);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantHasher_claw_dtor(struct godot::VariantHasher* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:337:8
__claw_this_->~VariantHasher();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_get_class_name() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:165:51

return godot::internal::gdextension_interface_object_get_class_name;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWStringR1() {
return sizeof(godot::GetTypeInfo<const godot::String&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector25clampERKS0_S2_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_min, const struct godot::Vector2* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:172:10
new (__claw_result_) godot::Vector2(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector3iEEaSERKNS_5ArrayE(godot::TypedArray<godot::Vector3i>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:95:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::unordered_map<int,int>::size_type __claw__ZNKSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE4sizeEv(std::unordered_map<int,int>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:317:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEaSEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat64ArrayWIterator() {
return alignof(godot::PackedFloat64Array::Iterator);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6SignaleqERKS0_(godot::Signal* __claw_this_, const godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:104:7
return __claw_this_->operator==(*other);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_PNS1_10MethodBindEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D10looking_atERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_target) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:104:14
new (__claw_result_) godot::Transform2D(__claw_this_->looking_at(*p_target));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Node_handleIiSt4pairIKiiESaINSt8__detail10_Hash_nodeIS2_Lb0EEEEEC2Ev() {
return alignof(std::_Node_handle<int,std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace godot {
__CLAW_API const godot::List<godot::PropertyInfo>::Element* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element4nextEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:66:33
return (const godot::List<godot::PropertyInfo>::Element*) __claw_this_->next();
}
}

namespace std {
__CLAW_API void __claw__ZNSt9exceptionC1ERKS_(std::exception* __claw_this_, const std::exception* arg0) {
// /usr/include/c++/13/bits/exception.h:65:5
new (__claw_this_) std::exception(*arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector3iWAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector3i::Axis&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEpLEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10MethodBind27get_arguments_metadata_listEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:131:54
return __claw_this_->get_arguments_metadata_list();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math8fposmodpEdd(double p_x, double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:256:15
return godot::Math::fposmodp(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray11encode_halfEld(godot::PackedByteArray* __claw_this_, int64_t byte_offset, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:203:7
__claw_this_->encode_half(byte_offset, value);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIDsE12is_lock_freeEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot4AABB19intersects_ray_bindERKNS_7Vector3ES3_(godot::Variant* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_dir) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:110:10
new (__claw_result_) godot::Variant(__claw_this_->intersects_ray_bind(*p_from, *p_dir));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0char16P1() {
return sizeof(godot::PtrToArg<char16*>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array3minEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:199:10
new (__claw_result_) godot::Variant(__claw_this_->min());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf8_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:105:55

godot::internal::gdextension_interface_string_new_with_utf8_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEEcvlEv(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDiEC1Ev(std::allocator<char32>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<char32>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIaEC1Ea(std::atomic<char>* __claw_this_, std::atomic<char>::__integral_type __i) {
// /usr/include/c++/13/atomic:741:17
new (__claw_this_) std::atomic<char>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Projection_claw_dtor(godot::PtrToArg<godot::Projection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWintWint11WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const int,int>>,std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPlane() {
return alignof(godot::Plane);
}
}

namespace godot {
__CLAW_API wchar_t __claw__ZNK5godot9CharProxyIwEcvwEv(godot::CharProxy<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:62:17
return __claw_this_->operator wchar_t();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWRect2i1() {
return sizeof(godot::GetTypeInfo<godot::Rect2i>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7CowDataIcEC2Ev() {
return sizeof(godot::CowData<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector3WAxis1() {
return alignof(godot::PtrToArg<godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40OrientationE23v_claw_dtor(godot::GetTypeInfo<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIcE11eq_int_typeERKmS3_(const __gnu_cxx::char_traits<char>::int_type* __c1, const __gnu_cxx::char_traits<char>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:170:7
return __gnu_cxx::char_traits<char>::eq_int_type(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector319distance_squared_toERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:133:24
return __claw_this_->distance_squared_to(*p_to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWshortP1() {
return alignof(godot::PtrToArg<const unsigned short*>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEmIEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEC1ERKS2_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Ref<godot::InputEvent>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:160:2
new (__claw_this_) godot::Ref<godot::InputEvent>(*p_from);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_3RIDEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::RID&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName19is_valid_identifierEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:335:7
return __claw_this_->is_valid_identifier();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_15PackedByteArrayE(godot::Array* __claw_this_, const godot::PackedByteArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:150:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Error_claw_ctor(godot::VariantCaster<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::VariantCaster<godot::Error>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40PropertyInfo_claw_dtor(std::__type_identity<std::allocator<godot::PropertyInfo>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5BasisEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Basis>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:100:1
new (__claw_this_) godot::TypedArray<godot::Basis>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10RefCounted4freeEPvi(void* data, int ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
godot::RefCounted::free(data, ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1EPKwmRKS3_(std::basic_string<wchar_t>* __claw_this_, const wchar_t* __s, std::basic_string<wchar_t>::size_type __n, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:619:7
new (__claw_this_) std::basic_string<wchar_t>(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40JoyAxisE23v_claw_ctor(godot::GetTypeInfo<const godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::GetTypeInfo<const godot::JoyAxis>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWPlane1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEaNEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP111() {
return sizeof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::Object*>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D14orthonormalizeEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:99:7
__claw_this_->orthonormalize();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hash_code_baseIN5godot10StringNameESt4pairIKS2_PNS1_6ObjectEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return sizeof(std::__detail::_Hash_code_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::__detail::_Select1st,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261LE23v_claw_ctor(godot::GetTypeInfo<const long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
new (__claw_this_) godot::GetTypeInfo<const long&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEoREi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKS0_(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:393:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6SignalneERKS0_(godot::Signal* __claw_this_, const godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:105:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIaEC1Ev(std::atomic<char>* __claw_this_) {
// /usr/include/c++/13/atomic:735:7
new (__claw_this_) std::atomic<char>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1v_claw_dtor(godot::PtrToArg<const void*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIaE23compare_exchange_strongERaaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayC1ERKNS_5ArrayE(godot::PackedInt64Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:103:2
new (__claw_this_) godot::PackedInt64Array(*from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessThreadMessagesR1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot5Array9pop_frontEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:183:10
new (__claw_result_) godot::Variant(__claw_this_->pop_front());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Signal* __claw__ZNK5godot7VariantcvNS_6SignalEEv(godot::Signal* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:251:2
new (__claw_result_) godot::Signal(__claw_this_->operator Signal());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D7rotatedERKNS_7Vector3Ef(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:52:14
new (__claw_result_) godot::Transform3D(__claw_this_->rotated(*p_axis, p_angle));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEpLEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector215is_equal_approxERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:124:7
return __claw_this_->is_equal_approx(*p_v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWnullptr1() {
return alignof(std::__hash_base<unsigned long,nullptr>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4iE23v_claw_ctor(godot::GetTypeInfo<godot::Vector4i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4i>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWCallable1() {
return alignof(godot::PtrToArg<godot::Callable>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E40SE40__get_value_typeE3EE23S1__claw_dtor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
__claw_this_->~__get_value_type();
}
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot5Color6get_g8Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:210:25
return __claw_this_->get_g8();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_11Transform3DE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Transform3D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:417:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Insert<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVKSt13__atomic_baseIyEcvyEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator unsigned long long();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Rb_tree_node0godotWStringName1() {
return sizeof(std::_Rb_tree_node<godot::StringName>);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseImE12is_lock_freeEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWchar_traits0char321() {
return alignof(std::char_traits<char32>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2ArrayneERKNS_7VariantE(godot::PackedVector2Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:132:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIwE2ltERKwS2_(const std::char_traits<wchar_t>::char_type* __c1, const std::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:508:7
return std::char_traits<wchar_t>::lt(*__c1, *__c2);
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8internal23EngineClassRegistrationINS_10RefCountedEEC2Ev() {
return alignof(godot::internal::EngineClassRegistration<godot::RefCounted>);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23b_claw_ctor(std::__type_identity<bool>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<bool>();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math12inverse_lerpEddd(double p_from, double p_to, double p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:586:15
return godot::Math::inverse_lerp(p_from, p_to, p_value);
}
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot4AABB22project_range_in_planeERKNS_5PlaneERfS4_(struct godot::AABB* __claw_this_, const struct godot::Plane* p_plane, real_t* r_min, real_t* r_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:102:22
__claw_this_->project_range_in_plane(*p_plane, *r_min, *r_max);
}
}

namespace godot {
__CLAW_API godot::Ref<godot::Tween>* __claw__ZN5godot4Node12create_tweenEv(godot::Ref<godot::Tween>* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:217:13
new (__claw_result_) godot::Ref<godot::Tween>(__claw_this_->create_tween());
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0godotWPropertyInfo1WgodotWPropertyInfo1() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<godot::PropertyInfo>,godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API int64_t* __claw__ZN5godot16PackedInt64Array4ptrwEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:138:11
return (int64_t*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZZN5godot7CowDataIDsE6resizeElE6(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:218:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_keyed_getter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:100:57

return godot::internal::gdextension_interface_variant_get_ptr_keyed_getter;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String3numEdl(godot::String* __claw_result_, double number, int64_t decimals) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:373:16
new (__claw_result_) godot::String(godot::String::num(number, decimals));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector2i_claw_ctor(godot::PtrToArg<const godot::Vector2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
new (__claw_this_) godot::PtrToArg<const godot::Vector2i&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_10ProjectionE(godot::Variant* __claw_this_, const struct godot::Projection* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:195:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10EulerOrderEE6encodeES1_Pv(enum godot::EulerOrder p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
godot::PtrToArg<godot::EulerOrder>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWerror_code1() {
return sizeof(std::__hash_base<unsigned long,std::error_code>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40AABBE23v_claw_dtor(godot::GetTypeInfo<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIcE12is_lock_freeEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261SE23v_claw_ctor(godot::GetTypeInfo<const short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
new (__claw_this_) godot::GetTypeInfo<const short&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMethodFlagsR1() {
return sizeof(godot::GetTypeInfo<godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D12set_rotationEf(struct godot::Transform2D* __claw_this_, const real_t p_rot) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:68:7
__claw_this_->set_rotation(p_rot);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot5Array4_refERKS0_(godot::Array* __claw_this_, const godot::Array* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:226:7
__claw_this_->_ref(*p_from);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40equal_toE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::equal_to<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_function.h:373:12
new (__claw_this_) std::equal_to<godot::StringName>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type0longWdoubleWlongWdouble1() {
return alignof(std::common_type<long double,long double>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object11remove_metaERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:82:7
__claw_this_->remove_meta(*name);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_wide_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:108:55

return godot::internal::gdextension_interface_string_new_with_wide_chars;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt4pairIKN5godot10StringNameEPNS0_10MethodBindEEEC2Ev() {
return alignof(std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API enum godot::Vector4i::Axis __claw__ZN5godot8PtrToArgINS_8Vector4i4AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
return godot::PtrToArg<godot::Vector4i::Axis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String9ends_withERKS0_(godot::String* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:292:7
return __claw_this_->ends_with(*text);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMask_claw_ctor(godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS2_7ClassDB9ClassInfoEELb0EEEEC1ERKS9_(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_, const std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String11begins_withERKS0_(godot::String* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:291:7
return __claw_this_->begins_with(*text);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10xml_escapeEb(godot::String* __claw_result_, godot::String* __claw_this_, bool escape_quotes) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:340:9
new (__claw_result_) godot::String(__claw_this_->xml_escape(escape_quotes));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedVector2Array_claw_dtor(godot::PtrToArg<const godot::PackedVector2Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:68:43

godot::internal::gdextension_interface_variant_get = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIKNS_18PropertyUsageFlagsEEC2El() {
return sizeof(godot::BitField<const godot::PropertyUsageFlags>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEaSERKS2_(godot::Ref<godot::Tween>* __claw_this_, const godot::Ref<godot::Tween>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:107:7
__claw_this_->operator=(*p_from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8NodePathEE6encodeES1_Pv(godot::NodePath* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
godot::PtrToArg<godot::NodePath>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API enum godot::Vector3i::Axis __claw__ZN5godot8PtrToArgINS_8Vector3i4AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
return godot::PtrToArg<godot::Vector3i::Axis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RefINS_14MultiplayerAPIEEC2ERKS2_() {
return sizeof(godot::Ref<godot::MultiplayerAPI>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicImED1Ev(std::atomic<unsigned long>* __claw_this_) {
// /usr/include/c++/13/atomic:897:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::ConstIterator* __claw__ZNK5godot16PackedInt32Array5beginEv(struct godot::PackedInt32Array::ConstIterator* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:197:31
new (__claw_result_) godot::PackedInt32Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:68:43

return godot::internal::gdextension_interface_variant_get;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWColorR1() {
return alignof(godot::PtrToArg<const godot::Color&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE8fetch_orEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API enum godot::Vector2i::Axis __claw__ZN5godot8PtrToArgINS_8Vector2i4AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
return godot::PtrToArg<godot::Vector2i::Axis>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseImE5storeEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEEC2El() {
return sizeof(godot::BitField<const godot::Node::ProcessThreadMessages&>);
}
}

namespace std {
__CLAW_API std::char_traits<char16>::char_type* __claw__ZNSt11char_traitsIDsE4moveEPDsPKDsm(std::char_traits<char16>::char_type* __s1, const std::char_traits<char16>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:818:7
return (std::char_traits<char16>::char_type*) std::char_traits<char16>::move(__s1, __s2, __n);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWchar161() {
return alignof(std::__hash_base<unsigned long,char16>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Memory_claw_dtor(godot::Memory* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:64:7
__claw_this_->~Memory();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_variant_from_type_constructor() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:88:62

return godot::internal::gdextension_interface_get_variant_from_type_constructor;
}
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector219distance_squared_toERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:99:9
return __claw_this_->distance_squared_to(*p_vector2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWArray1() {
return sizeof(godot::GetTypeInfo<godot::Array>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23q_claw_dtor(std::char_traits<char16>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:750:12
__claw_this_->~char_traits();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIxEC2Ev() {
return alignof(std::__atomic_base<long long>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNamegeERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:391:7
return __claw_this_->operator>=(*other);
}
}

namespace std {
__CLAW_API std::ctype<char>::char_type __claw__ZNKSt5ctypeIcE7toupperEc(std::ctype<char>* __claw_this_, std::ctype<char>::char_type __c) {
// /usr/include/c++/13/bits/locale_facets.h:810:7
return __claw_this_->toupper(__c);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector39normalizeEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:92:22
__claw_this_->normalize();
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::ConstIterator* __claw__ZN5godot17PackedStringArray13ConstIteratorppEv(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:172:33
return (struct godot::PackedStringArray::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio01W11() {
return alignof(std::ratio<1,1>);
}
}

namespace std {
__CLAW_API std::__new_allocator<char32>::size_type __claw__ZNKSt15__new_allocatorIDiE8max_sizeEv(std::__new_allocator<char32>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math10lerp_angleEddd(double p_from, double p_to, double p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:406:15
return godot::Math::lerp_angle(p_from, p_to, p_weight);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKS9_RKS7_RKS3_() {
return sizeof(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40InlineAlignment_claw_ctor(godot::VariantCaster<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::VariantCaster<godot::InlineAlignment>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName4joinERKNS_17PackedStringArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedStringArray* parts) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:298:9
new (__claw_result_) godot::String(__claw_this_->join(*parts));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>::size_type __claw__ZNKSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEE8max_sizeEv(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API godot::CowData<wchar_t>::Size __claw__ZNK5godot7CowDataIwE4sizeEv(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:187:22
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String11json_escapeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:346:9
new (__claw_result_) godot::String(__claw_this_->json_escape());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIjEC1ERKNS_7VariantE(godot::TypedArray<unsigned int>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:83:1
new (__claw_this_) godot::TypedArray<unsigned int>(*p_variant);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameeqERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:386:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8ObjectID7is_nullEv(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:44:22
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat64ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedFloat64Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:55:16
new (__claw_this_) godot::PackedFloat64Array::_MethodBindings();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVKSt13__atomic_baseIiE4loadESt12memory_order(std::__atomic_base<int>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10DictionaryEEC1ERKNS_7VariantE(godot::TypedArray<godot::Dictionary>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:108:1
new (__claw_this_) godot::TypedArray<godot::Dictionary>(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6vectorIN5godot7VariantESaIS1_EEC2Ev() {
return sizeof(std::vector<godot::Variant>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot10StringNameaSERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:409:14
return (godot::StringName*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_s64El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:184:10
return __claw_this_->decode_s64(byte_offset);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedFloat64Array_claw_ctor(godot::PtrToArg<const godot::PackedFloat64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
new (__claw_this_) godot::PtrToArg<const godot::PackedFloat64Array&>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_warning() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:53:45

return godot::internal::gdextension_interface_print_warning;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEC1ERKS2_(godot::Ref<godot::World3D>* __claw_this_, const godot::Ref<godot::World3D>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:160:2
new (__claw_this_) godot::Ref<godot::World3D>(*p_from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGDExtensionBindingWInitDataList() {
return alignof(godot::GDExtensionBinding::InitDataList);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWRect2iR1() {
return sizeof(godot::GetTypeInfo<const godot::Rect2i&>);
}
}

namespace godot {
__CLAW_API const int* __claw__ZN5godot7ClassDB30get_instance_binding_callbacksERKNS_10StringNameE() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:191:52
return (const int*) godot::ClassDB::get_instance_binding_callbacks();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform2D_claw_dtor(godot::TypedArray<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:96:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Rb_tree_header() {
return alignof(std::_Rb_tree_header);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKiE10encode_argEi(int32_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
return godot::PtrToArg<const int&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API godot::Node3DGizmo* __claw__ZNK5godot3RefINS_11Node3DGizmoEEdeEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:91:20
return (godot::Node3DGizmo*) __claw_this_->operator*();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_ctor(godot::GetTypeInfo<godot::Node::InternalMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::InternalMode&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector25floorEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:168:10
new (__claw_result_) godot::Vector2(__claw_this_->floor());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261i_claw_ctor(godot::PtrToArg<const unsigned int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
new (__claw_this_) godot::PtrToArg<const unsigned int&>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_10RefCountedEE8callbackEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:128:14
godot::internal::EngineClassRegistration<godot::RefCounted>::callback();
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ESt16initializer_listIDsERKS3_(std::basic_string<char16>* __claw_this_, std::initializer_list<char16>* __l, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:706:7
new (__claw_this_) std::basic_string<char16>(*__l, *__a);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_dtor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
__claw_this_->~__1st_type();
}
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5floorEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:276:14
return godot::Math::floor(p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector2iWAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector2i::Axis&>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5floorEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:273:15
return godot::Math::floor(p_x);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameneERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:387:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBind9bind_callEPviPKiiiPi(void* p_method_userdata, int p_instance, const int* p_args, int p_argument_count, int r_return, int* r_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:144:14
godot::MethodBind::bind_call(p_method_userdata, p_instance, p_args, p_argument_count, r_return, r_error);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23iE23v_claw_ctor(godot::GetTypeInfo<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
new (__claw_this_) godot::GetTypeInfo<unsigned int>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS4_mRKS3_(std::basic_string<char16>* __claw_this_, const std::basic_string<char16>* __str, std::basic_string<char16>::size_type __pos, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:564:7
new (__claw_this_) std::basic_string<char16>(*__str, __pos, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessThreadMessages>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element5eraseEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:133:8
__claw_this_->erase();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1ESt16initializer_listIS2_ERKS3_(std::list<godot::StringName>* __claw_this_, std::initializer_list<godot::StringName>* __l, const std::list<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:834:7
new (__claw_this_) std::list<godot::StringName>(*__l, *__a);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1ERKS7_RKS6_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __x, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_tree.h:949:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(*__x, *__a);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array13ConstIteratoreqERKS1_(struct godot::PackedInt32Array::ConstIterator* __claw_this_, const struct godot::PackedInt32Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:179:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector4E40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::VariantCaster<godot::Vector4::Axis>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton16class_has_signalERKNS_10StringNameES3_(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:64:7
return __claw_this_->class_has_signal(*_class, *signal);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringpLEDi(godot::String* __claw_this_, char32 p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:459:10
return (godot::String*) (&__claw_this_->operator+=(p_char));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIlEC1ERKNS_5ArrayE(godot::TypedArray<long>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:86:1
new (__claw_this_) godot::TypedArray<long>(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameleERKS0_(godot::StringName* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:389:7
return __claw_this_->operator<=(*other);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Map_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Map_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node11is_in_groupERKNS_10StringNameE(godot::Node* __claw_this_, const godot::StringName* group) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:167:7
return __claw_this_->is_in_group(*group);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40lessE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::less<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::less<godot::StringName>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIiEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<int>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0unsignedWshort1() {
return alignof(godot::GetTypeInfo<unsigned short>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4iE40EE40Axis_claw_ctor(godot::PtrToArg<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::PtrToArg<godot::Vector4i::Axis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>::size_type __claw__ZNKSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEE8max_sizeEv(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_ctor(godot::GetTypeInfo<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::GetTypeInfo<godot::Variant::Type>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEC1ERKNS_7VariantE(godot::Ref<godot::World3D>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref<godot::World3D>(*p_variant);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0unsignedWlong11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<unsigned long>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String18is_subsequence_ofnERKS0_(godot::String* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:294:7
return __claw_this_->is_subsequence_ofn(*text);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayC1ESt16initializer_listIhE(godot::PackedByteArray* __claw_this_, std::initializer_list<unsigned char>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:285:20
new (__claw_this_) godot::PackedByteArray(*p_init);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIlEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<long>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEE7is_nullEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot4Node16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
return (godot::StringName*) (&godot::Node::get_class_static());
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot6Object7connectERKNS_10StringNameERKNS_8CallableEj(godot::Object* __claw_this_, const godot::StringName* signal, const godot::Callable* callable, uint32_t flags) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:122:8
return __claw_this_->connect(*signal, *callable, flags);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__failure_type_claw_dtor(struct std::__failure_type* __claw_this_) {
// /usr/include/c++/13/type_traits:2260:10
__claw_this_->~__failure_type();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Node3DGizmo>* __claw__ZNK5godot6Node3D10get_gizmosEv(godot::TypedArray<godot::Node3DGizmo>* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:112:26
new (__claw_result_) godot::TypedArray<godot::Node3DGizmo>(__claw_this_->get_gizmos());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWTransform2D1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<godot::HorizontalAlignment>();
}
}

namespace std {
__CLAW_API std::char_traits<char16>::char_type* __claw__ZNSt11char_traitsIDsE6assignEPDsmDs(std::char_traits<char16>::char_type* __s, std::size_t __n, std::char_traits<char16>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:844:7
return (std::char_traits<char16>::char_type*) std::char_traits<char16>::assign(__s, __n, __a);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIyE5storeEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDBE40FTE40E3E1E23Tregister_internal_classE23vE23S(godot::ClassDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:151:14
__claw_this_->register_internal_class();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node3D::RotationEditMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSEPKDs(godot::String* __claw_this_, const char16* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:443:10
return (godot::String*) (&__claw_this_->operator=(p_str));
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot5BasisixEi(struct godot::Basis* __claw_this_, int axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:50:26
return (struct godot::Vector3*) (&__claw_this_->operator[](axis));
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1EOS3_(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:620:7
new (__claw_this_) std::vector<godot::StringName>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWError1() {
return sizeof(godot::PtrToArg<godot::Error>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWchar161() {
return sizeof(std::__hash_base<unsigned long,char16>);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptrC1Ev(std::__exception_ptr::exception_ptr* __claw_this_) {
// /usr/include/c++/13/bits/exception_ptr.h:114:7
new (__claw_this_) std::__exception_ptr::exception_ptr();
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Callable4hashEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:112:10
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt64Array6resizeEl(godot::PackedInt64Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:115:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math7fposmodEff(float p_x, float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:239:14
return godot::Math::fposmod(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node20_unhandled_key_inputERKNS_3RefINS_10InputEventEEE(godot::Node* __claw_this_, const godot::Ref<godot::InputEvent>* event) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:287:15
__claw_this_->_unhandled_key_input(*event);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23fE23v_claw_ctor(godot::GetTypeInfo<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
new (__claw_this_) godot::GetTypeInfo<float>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE9fetch_addEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String11sha1_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:331:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->sha1_buffer());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:152:56

godot::internal::gdextension_interface_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSEPKDi(godot::String* __claw_this_, const char32* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:444:10
return (godot::String*) (&__claw_this_->operator=(p_str));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBindingE40SE40InitData_claw_ctor(struct godot::GDExtensionBinding::InitData* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:206:9
new (__claw_this_) godot::GDExtensionBinding::InitData();
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot11Transform3D5xformERKNS_5PlaneE(struct godot::Plane* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:98:23
new (__claw_result_) godot::Plane(__claw_this_->xform(*p_plane));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE9fetch_andEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector3iE40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEaNEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5PlaneEE6encodeERKS1_Pv(const struct godot::Plane* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
godot::PtrToArg<godot::Plane>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::CharWideString* __claw__ZNK5godot6String11wide_stringEv(godot::CharWideString* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:386:17
new (__claw_result_) godot::CharWideString(__claw_this_->wide_string());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABBC1ERKNS_7Vector3ES3_(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_pos, const struct godot::Vector3* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:130:9
new (__claw_this_) godot::AABB(*p_pos, *p_size);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4AABBEEC1Ev(godot::TypedArray<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:99:1
new (__claw_this_) godot::TypedArray<godot::AABB>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEmmEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D26set_notify_local_transformEb(godot::Node3D* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:121:7
__claw_this_->set_notify_local_transform(enable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWMouseButtonMaskR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_destructor(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:93:56

godot::internal::gdextension_interface_variant_get_ptr_destructor = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23w_claw_ctor(std::char_traits<char32>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:879:12
new (__claw_this_) std::char_traits<char32>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEmmEi(std::__atomic_base<int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array13ConstIteratorneERKS1_(struct godot::PackedInt32Array::ConstIterator* __claw_this_, const struct godot::PackedInt32Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:180:23
return __claw_this_->operator!=(*b);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::char_type* __claw__ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm(__gnu_cxx::char_traits<char>::char_type* __s1, const __gnu_cxx::char_traits<char>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:156:7
return (__gnu_cxx::char_traits<char>::char_type*) __gnu_cxx::char_traits<char>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4pLERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:112:22
__claw_this_->operator+=(*p_vec4);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant9get_namedERKNS_10StringNameERb(godot::Variant* __claw_result_, godot::Variant* __claw_this_, const godot::StringName* name, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:307:10
new (__claw_result_) godot::Variant(__claw_this_->get_named(*name, *r_valid));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1ERKS2_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, const std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:321:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(*__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE9fetch_addEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_value0stdWpair0constWintWint1Wfalse1() {
return alignof(std::__detail::_Hash_node_value<std::pair<const int,int>,false>);
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String9pad_zerosEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t digits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:363:9
new (__claw_result_) godot::String(__claw_this_->pad_zeros(digits));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godotneEPKDsRKNS_6StringE(const char16* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:475:6
return godot::operator!=(p_chr, *p_str);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector4i1() {
return sizeof(godot::PtrToArg<godot::Vector4i>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDsEC1Ev(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<char16>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_16PackedColorArrayE(godot::Array* __claw_this_, const godot::PackedColorArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:158:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwEC1Ev(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:246:17
new (__claw_this_) godot::CowData<wchar_t>();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math7fposmodEdd(double p_x, double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:231:15
return godot::Math::fposmod(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18GDExtensionBinding12InitDataList3addEPNS0_8InitDataE(godot::GDExtensionBinding::InitDataList* __claw_this_, struct godot::GDExtensionBinding::InitData* p_cb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:218:8
__claw_this_->add(p_cb);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2LL_claw_dtor(std::common_type<long,long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2324:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot11CharStringTIwEixEl(godot::CharStringT<wchar_t>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:98:26
return (wchar_t*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node27set_process_unhandled_inputEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:195:7
__claw_this_->set_process_unhandled_input(enable);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godotneEPKDiRKNS_6StringE(const char32* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:476:6
return godot::operator!=(p_chr, *p_str);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection23create_light_atlas_rectERKNS_5Rect2E(struct godot::Projection* __claw_result_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:86:20
new (__claw_result_) godot::Projection(godot::Projection::create_light_atlas_rect(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4mLERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:114:22
__claw_this_->operator*=(*p_vec4);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10DictionaryneERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:112:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color5blendERKS0_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_over) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:161:23
new (__claw_result_) godot::Color(__claw_this_->blend(*p_over));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIxED1Ev(std::atomic<long long>* __claw_this_) {
// /usr/include/c++/13/atomic:920:7
__claw_this_->~atomic();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWoutput_iterator_tag() {
return alignof(std::output_iterator_tag);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot5Color6get_r8Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:208:25
return __claw_this_->get_r8();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D18set_rotation_orderENS_10EulerOrderE(godot::Node3D* __claw_this_, enum godot::EulerOrder order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:80:7
__claw_this_->set_rotation_order(order);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEC1Ev(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref<godot::World3D>();
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node17get_node_internalERKNS_8NodePathE(godot::Node* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:152:8
return (godot::Node*) __claw_this_->get_node_internal(*path);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_8Vector2iEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Vector2i>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedInt32Array_claw_dtor(godot::PtrToArg<const godot::PackedInt32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4SideEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Side&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWchar16R1() {
return alignof(godot::GetTypeInfo<const char16&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23i_claw_dtor(godot::TypedArray<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:83:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array13ConstIteratorC1EPKd(struct godot::PackedFloat64Array::ConstIterator* __claw_this_, const double* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:182:3
new (__claw_this_) godot::PackedFloat64Array::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWList0godotWPropertyInfo1WIterator() {
return sizeof(godot::List<godot::PropertyInfo>::Iterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40VariantE40EE40Type_claw_dtor(godot::VariantCaster<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWwchar_t1() {
return sizeof(std::__hash_base<unsigned long,wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWRect211() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<const godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot10vec3_crossERKNS_7Vector3ES2_(struct godot::Vector3* __claw_result_, const struct godot::Vector3* p_a, const struct godot::Vector3* p_b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:454:24
new (__claw_result_) godot::Vector3(godot::vec3_cross(*p_a, *p_b));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection11set_frustumEffNS_7Vector2Effb(struct godot::Projection* __claw_this_, real_t p_size, real_t p_aspect, struct godot::Vector2* p_offset, real_t p_near, real_t p_far, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:82:7
__claw_this_->set_frustum(p_size, p_aspect, *p_offset, p_near, p_far, p_flip_fov);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIcEC2Ev() {
return alignof(std::__atomic_base<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNodeWProcessMode1() {
return alignof(godot::PtrToArg<godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector3EE6encodeERKS1_Pv(const struct godot::Vector3* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
godot::PtrToArg<godot::Vector3>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array13ConstIteratorneERKS1_(struct godot::PackedVector2Array::ConstIterator* __claw_this_, const struct godot::PackedVector2Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:185:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiE5clearEv(godot::CowData<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:196:22
__claw_this_->clear();
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIyE12is_lock_freeEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWObjectDB() {
return sizeof(godot::ObjectDB);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_usage(struct godot::PropertyInfo* __claw_this_, uint32_t __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->usage = __claw_value_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return sizeof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEppEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseItEC1Et(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<unsigned short>(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_code_cache0false1() {
return sizeof(std::__detail::_Hash_node_code_cache<false>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVariantR1() {
return sizeof(godot::GetTypeInfo<const godot::Variant&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Variant4TypeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Variant::Type>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector31R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot15PackedByteArray8compressEl(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_, int64_t compression_mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:174:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->compress(compression_mode));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray12append_arrayERKS0_(godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:153:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIdEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<double>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector4i1() {
return alignof(godot::GetTypeInfo<godot::Vector4i>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEppEi(std::__atomic_base<wchar_t>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::ConstIterator* __claw__ZNK5godot16PackedInt64Array5beginEv(struct godot::PackedInt64Array::ConstIterator* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:197:31
new (__claw_result_) godot::PackedInt64Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRNS_18PropertyUsageFlagsEEC2El() {
return alignof(godot::BitField<godot::PropertyUsageFlags&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_10MethodBindEEED1Ev(std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPropertyUsageFlagsR1() {
return alignof(godot::GetTypeInfo<godot::PropertyUsageFlags&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEeOEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array4findERKNS_7VariantEl(godot::Array* __claw_this_, const godot::Variant* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:178:10
return __claw_this_->find(*what, from);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIiEC1Ei(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<int>(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB15is_parent_classERKNS_10StringNameES3_(const godot::StringName* _class, const godot::StringName* inherits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::is_parent_class(*_class, *inherits);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis17scaled_orthogonalERKNS_7Vector3E(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:106:8
new (__claw_result_) godot::Basis(__claw_this_->scaled_orthogonal(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName4rpadElRKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t min_length, const godot::String* character) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:347:9
new (__claw_result_) godot::String(__claw_this_->rpad(min_length, *character));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIiEC1Ev(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<int>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40PropertyHintE23v_claw_dtor(godot::GetTypeInfo<const godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3geERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:174:22
return __claw_this_->operator>=(*p_v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWMouseButtonMask11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_8Vector3iEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Vector3i>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40BasisE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot18CallableCustomBase4callEPPKNS_7VariantEiRS1_Ri(godot::CallableCustomBase* __claw_this_, const godot::Variant** p_arguments, int p_argcount, godot::Variant* r_return_value, int* r_call_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:44:15
__claw_this_->call(p_arguments, p_argcount, *r_return_value, *r_call_error);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWNodeWProcessThreadMessagesR11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>);
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot6Object15get_instance_idEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:78:11
return __claw_this_->get_instance_id();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23dE23v_claw_ctor(godot::GetTypeInfo<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<double>();
}
}

namespace __gnu_cxx {
__CLAW_API void __claw__ZN9__gnu_cxx19__atomic_add_singleEPii(_Atomic_word* __mem, int __val) {
// /usr/include/c++/13/ext/atomicity.h:91:3
__gnu_cxx::__atomic_add_single(__mem, __val);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7VariantcvbEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:217:2
return __claw_this_->operator bool();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEmmEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVariantWType1() {
return sizeof(godot::GetTypeInfo<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array13ConstIteratoreqERKS1_(struct godot::PackedVector2Array::ConstIterator* __claw_this_, const struct godot::PackedVector2Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:184:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessThreadGroup __claw__ZNK5godot4Node24get_process_thread_groupEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:203:27
return __claw_this_->get_process_thread_group();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3eqERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:169:22
return __claw_this_->operator==(*p_v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Signal_claw_dtor(godot::TypedArray<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:107:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::CowData<char>::Size __claw__ZNK5godot7CowDataIcE4findERKcl(godot::CowData<char>* __claw_this_, const char* p_val, godot::CowData<char>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:242:7
return __claw_this_->find(*p_val, p_from);
}
}

namespace godot {
__CLAW_API const real_t* __claw__ZNK5godot7Vector4ixEi(struct godot::Vector4* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:65:31
return (real_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1ERKS0_(godot::String* __claw_this_, const godot::String* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:265:2
new (__claw_this_) godot::String(*from);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE9fetch_addEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector2WAxis1() {
return sizeof(godot::VariantCaster<godot::Vector2::Axis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10StringNameEEC1ERKNS_5ArrayE(godot::TypedArray<godot::StringName>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:103:1
new (__claw_this_) godot::TypedArray<godot::StringName>(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWCornerR1() {
return sizeof(godot::GetTypeInfo<const godot::Corner&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWKeyR1() {
return sizeof(godot::GetTypeInfo<const godot::Key&>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_iter_init() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:72:48

return godot::internal::gdextension_interface_variant_iter_init;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1Effff(struct godot::Quaternion* __claw_this_, real_t p_x, real_t p_y, real_t p_z, real_t p_w) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:122:17
new (__claw_this_) godot::Quaternion(p_x, p_y, p_z, p_w);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWEulerOrderR1() {
return sizeof(godot::GetTypeInfo<godot::EulerOrder&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWchar16P1() {
return sizeof(godot::PtrToArg<const char16*>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1ESt16initializer_listIS1_ERKS2_(std::vector<godot::StringName>* __claw_this_, std::initializer_list<godot::StringName>* __l, const std::vector<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:678:7
new (__claw_this_) std::vector<godot::StringName>(*__l, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcEC1Ev(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:107:17
new (__claw_this_) godot::CharStringT<char>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4SideEE6encodeES1_Pv(enum godot::Side p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
godot::PtrToArg<godot::Side>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVerticalAlignment1() {
return sizeof(godot::VariantCaster<godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldINS_11MethodFlagsEEC2El() {
return sizeof(godot::BitField<godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1ERKNS_10StringNameE(godot::String* __claw_this_, const godot::StringName* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:266:2
new (__claw_this_) godot::String(*from);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEaSEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEE22_M_deallocate_node_ptrEPS5_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__node_ptr __n) {
// /usr/include/c++/13/bits/hashtable_policy.h:1968:7
__claw_this_->_M_deallocate_node_ptr(__n);
}
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZN5godot8PtrToArgINS_10QuaternionEE7convertEPKv(struct godot::Quaternion* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
new (__claw_result_) godot::Quaternion(godot::PtrToArg<godot::Quaternion>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIKNS_15KeyModifierMaskEEcvlEv(godot::BitField<const godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40VariantE23v_claw_dtor(godot::GetTypeInfo<godot::Variant>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:192:8
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40RIDE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::RID>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::RID>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AC_claw_ctor(godot::PtrToArg<char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
new (__claw_this_) godot::PtrToArg<char*>();
}
}

namespace godot {
__CLAW_API char* __claw__ZN5godot7CowDataIcE4ptrwEv(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:178:20
return (char*) __claw_this_->ptrw();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math11move_towardEfff(float p_from, float p_to, float p_delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:716:14
return godot::Math::move_toward(p_from, p_to, p_delta);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array3allERKNS_8CallableE(godot::Array* __claw_this_, const godot::Callable* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:197:7
return __claw_this_->all(*method);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWPropertyUsageFlagsR11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector3::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3::Axis&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10ProjectionC1Ev(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:154:2
new (__claw_this_) godot::Projection();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godotmlElRKNS_8Vector2iE(struct godot::Vector2i* __claw_result_, const int64_t p_scalar, const struct godot::Vector2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:141:25
new (__claw_result_) godot::Vector2i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_color_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:135:62

godot::internal::gdextension_interface_packed_color_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_5ArrayE(godot::Variant* __claw_this_, const godot::Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:205:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}
}

namespace godot {
__CLAW_API enum godot::Orientation __claw__ZN5godot8PtrToArgINS_11OrientationEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
return godot::PtrToArg<godot::Orientation>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE9fetch_andEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEoREDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SafeNumericE3EE23i_claw_dtor(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:61:7
__claw_this_->~SafeNumeric();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40ctype_base_claw_dtor(struct std::ctype_base* __claw_this_) {
// /usr/include/x86_64-linux-gnu/c++/13/bits/ctype_base.h:41:10
__claw_this_->~ctype_base();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3neERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:170:22
return __claw_this_->operator!=(*p_v);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot31CallableCustomMethodPointerBase13get_comp_sizeEv(godot::CallableCustomMethodPointerBase* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_method_pointer.hpp:49:26
return __claw_this_->get_comp_size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWfloat1() {
return alignof(std::__hash_base<unsigned long,float>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodInfoC1ENS_7Variant4TypeE(struct godot::MethodInfo* __claw_this_, enum godot::Variant::Type ret) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:83:2
new (__claw_this_) godot::MethodInfo(ret);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNode3DWRotationEditModeR1() {
return alignof(godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWNodeWProcessThreadGroup1() {
return sizeof(godot::VariantCaster<godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3miERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:156:25
new (__claw_result_) godot::Vector3(__claw_this_->operator-(*p_v));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEE22_M_deallocate_node_ptrEPS9_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__node_ptr __n) {
// /usr/include/c++/13/bits/hashtable_policy.h:1968:7
__claw_this_->_M_deallocate_node_ptr(__n);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D8to_localERKNS_7Vector3E(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_, const struct godot::Vector3* global_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:140:10
new (__claw_result_) godot::Vector3(__claw_this_->to_local(*global_point));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIlEC1Ev(godot::TypedArray<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:86:1
new (__claw_this_) godot::TypedArray<long>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11CharStringTIDiEC2Ev() {
return sizeof(godot::CharStringT<char32>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform2DEEC1Ev(godot::TypedArray<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:96:1
new (__claw_this_) godot::TypedArray<godot::Transform2D>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector3leERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:172:22
return __claw_this_->operator<=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Dictionary14make_read_onlyEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:109:7
__claw_this_->make_read_only();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE9fetch_andEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot8PtrToArgINS_5ColorEE7convertEPKv(struct godot::Color* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
new (__claw_result_) godot::Color(godot::PtrToArg<godot::Color>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicImEC2Ev() {
return sizeof(std::atomic<unsigned long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40VerticalAlignment_claw_dtor(godot::PtrToArg<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10QuaternionEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Quaternion>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:98:1
new (__claw_this_) godot::TypedArray<godot::Quaternion>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_17PackedStringArrayE(godot::Variant* __claw_this_, const godot::PackedStringArray* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:211:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object10has_methodERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:117:7
return __claw_this_->has_method(*method);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_5PlaneEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Plane>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String9num_int64Ellb(godot::String* __claw_result_, int64_t number, int64_t base, bool capitalize_hex) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:374:16
new (__claw_result_) godot::String(godot::String::num_int64(number, base, capitalize_hex));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEaNEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace Math {
__CLAW_API int64_t __claw__ZN5godot4Math6posmodEll(int64_t p_x, int64_t p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:265:16
return godot::Math::posmod(p_x, p_y);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEmmEi(std::__atomic_base<unsigned short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2i_claw_ctor(godot::PtrToArg<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
new (__claw_this_) godot::PtrToArg<godot::Vector2i>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat64ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:165:9
__claw_this_->~ConstIterator();
}
}

__CLAW_API int __claw__ZZ25pthread_mutexattr_settypeE6(pthread_mutexattr_t* __attr, int __kind) {
// /usr/include/pthread.h:901:12
return pthread_mutexattr_settype(__attr, __kind);
}

namespace godot {
__CLAW_API godot::CharProxy<char32>* __claw__ZN5godot11CharStringTIDiEixEl(godot::CharProxy<char32>* __claw_result_, godot::CharStringT<char32>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:105:30
new (__claw_result_) godot::CharProxy<char32>(__claw_this_->operator[](p_index));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Color_claw_dtor(godot::PtrToArg<const godot::Color&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector26posmodEf(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t p_mod) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:106:10
new (__claw_result_) godot::Vector2(__claw_this_->posmod(p_mod));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseItE23compare_exchange_strongERttSt12memory_orderS2_(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object *>, false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform3DEEC1Ev(godot::TypedArray<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:101:1
new (__claw_this_) godot::TypedArray<godot::Transform3D>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWDefaultAllocator() {
return sizeof(godot::DefaultAllocator);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String19is_valid_hex_numberEb(godot::String* __claw_this_, bool with_prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:352:7
return __claw_this_->is_valid_hex_number(with_prefix);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgItE6encodeEtPv(uint16_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
godot::PtrToArg<unsigned short>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot7VariantEEC1ERKS2_(std::__new_allocator<godot::Variant>* __claw_this_, const std::__new_allocator<godot::Variant>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<godot::Variant>(*arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7CowDataIDsE8is_emptyEv(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:197:22
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementptEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:110:21
return (struct godot::PropertyInfo*) __claw_this_->operator->();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>, false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23bE23v_claw_ctor(godot::GetTypeInfo<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
new (__claw_this_) godot::GetTypeInfo<bool>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWVector211() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40KeyE23v_claw_dtor(godot::GetTypeInfo<const godot::Key&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_15PackedByteArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedByteArray>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWJoyButton1() {
return alignof(godot::GetTypeInfo<const godot::JoyButton>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio01W10000001() {
return sizeof(std::ratio<1,1000000>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessMode_claw_dtor(godot::VariantCaster<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array13ConstIteratorC1EPKi(struct godot::PackedInt32Array::ConstIterator* __claw_this_, const int32_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:182:3
new (__claw_this_) godot::PackedInt32Array::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray4sortEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:123:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7VariantcvNS_7Vector2EEv(struct godot::Vector2* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:229:2
new (__claw_result_) godot::Vector2(__claw_this_->operator Vector2());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4NodeEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Node>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:49:17
new (__claw_this_) godot::TypedArray<godot::Node>(*p_array);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIjEC2Ev() {
return sizeof(std::__atomic_base<unsigned int>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName14to_pascal_caseEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:293:9
new (__claw_result_) godot::String(__claw_this_->to_pascal_case());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRKNS_15KeyModifierMaskEEcvlEv(godot::BitField<const godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPropertyHint1() {
return sizeof(godot::GetTypeInfo<godot::PropertyHint>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIPNSt8__detail15_Hash_node_baseEEC1Ev(std::allocator<std::__detail::_Hash_node_base*>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node_base*>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40JoyButtonE23v_claw_ctor(godot::GetTypeInfo<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::GetTypeInfo<godot::JoyButton>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E2AE24E40NE40stdE40SE40_Rb_tree_node_base_claw_ctor(std::__type_identity<std::_Rb_tree_node_base*>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::_Rb_tree_node_base*>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2E24E40NE40stdE40NE40chronoE40SE40durationE3EE23LE23E24E40NE40stdE40SE40ratioE3EE23VL1E23VL1000000000S0__claw_dtor(std::common_type<std::chrono::duration<long,std::ratio<1,1000000000>>,std::chrono::duration<long,std::ratio<1,1000000000>>>* __claw_this_) {
// /usr/include/c++/13/bits/chrono.h:112:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot18PackedVector2ArrayixEl(godot::PackedVector2Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:140:17
return (struct godot::Vector2*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseItEC1Ev(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<unsigned short>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_6Node3D16RotationEditModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node3D::RotationEditMode&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Ref<godot::InputEvent>* __claw__ZN5godot3RefINS_10InputEventEE25_gde_internal_constructorEPNS_6ObjectE(godot::Ref<godot::InputEvent>* __claw_result_, godot::Object* obj) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:222:23
new (__claw_result_) godot::Ref<godot::InputEvent>(godot::Ref<godot::InputEvent>::_gde_internal_constructor(obj));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEEC2El() {
return alignof(godot::BitField<godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API enum godot::Corner __claw__ZN5godot8PtrToArgINS_6CornerEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
return godot::PtrToArg<godot::Corner>::convert(p_ptr);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector3C1Efff(struct godot::Vector3* __claw_this_, const real_t p_x, const real_t p_y, const real_t p_z) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:180:17
new (__claw_this_) godot::Vector3(p_x, p_y, p_z);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D13affine_invertEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:65:7
__claw_this_->affine_invert();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEoREt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE8max_sizeEv(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:322:7
return __claw_this_->max_size();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_has_key() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:84:46

return godot::internal::gdextension_interface_variant_has_key;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40StringE23v_claw_ctor(godot::GetTypeInfo<const godot::String&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
new (__claw_this_) godot::GetTypeInfo<const godot::String&>();
}
}

namespace godot {
__CLAW_API int __claw_get_godotW_GlobalNil_color(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

return __claw_this_->color;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8CallableEE6encodeES1_Pv(godot::Callable* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
godot::PtrToArg<godot::Callable>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector3EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect27set_endERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:353:22
__claw_this_->set_end(*p_end);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4Node18ProcessThreadGroupEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Projection5xformERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Vector3* p_vec3) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:122:25
new (__claw_result_) godot::Vector3(__claw_this_->xform(*p_vec3));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEppEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23cE23v_claw_ctor(godot::GetTypeInfo<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
new (__claw_this_) godot::GetTypeInfo<unsigned char>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4AABBEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::AABB&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot7ClassDB31class_get_integer_constant_enumERKNS_10StringNameES3_b(godot::StringName* __claw_result_, const godot::StringName* _class, const godot::StringName* name, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::StringName(godot::ClassDB::class_get_integer_constant_enum(*_class, *name, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector3i1() {
return alignof(godot::PtrToArg<godot::Vector3i>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class2() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:179:63

return godot::internal::gdextension_interface_classdb_register_extension_class2;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRect21R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_10StringNameEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::StringName>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot8Vector4icvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:122:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ESt16initializer_listIDiERKS3_(std::basic_string<char32>* __claw_this_, std::initializer_list<char32>* __l, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:706:7
new (__claw_this_) std::basic_string<char32>(*__l, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array4fillEd(godot::PackedFloat64Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:114:7
__claw_this_->fill(value);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<int>,std::equal_to<int>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::equal_to<int>,std::equal_to<int>>();
}
}
}

namespace godot {
__CLAW_API godot::StringName* __claw_get_godotWPropertyInfo_name(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return (godot::StringName*)&__claw_this_->name;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW__detailW_Select1st1() {
return sizeof(std::__type_identity<std::__detail::_Select1st>);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb0EEEE8max_sizeEv(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:659:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array13ConstIteratorC1Ev(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:183:3
new (__claw_this_) godot::PackedFloat64Array::ConstIterator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayC1Ev(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:103:2
new (__claw_this_) godot::PackedColorArray();
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect29grow_sideENS_4SideEf(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, enum godot::Side p_side, real_t p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:230:15
new (__claw_result_) godot::Rect2(__claw_this_->grow_side(p_side, p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0long1() {
return sizeof(godot::PtrToArg<long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWdoubleR1() {
return sizeof(godot::GetTypeInfo<const double&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB26_register_engine_singletonERKNS_10StringNameEPNS_6ObjectE(const godot::StringName* p_class_name, godot::Object* p_singleton) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:157:14
godot::ClassDB::_register_engine_singleton(*p_class_name, p_singleton);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5BasisneERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:134:7
return __claw_this_->operator!=(*p_matrix);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1I_claw_ctor(godot::PtrToArg<const int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
new (__claw_this_) godot::PtrToArg<const int*>();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEppEi(std::__atomic_base<bool>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_11MIDIMessageEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MIDIMessage&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40EulerOrderE23v_claw_ctor(godot::GetTypeInfo<const godot::EulerOrder&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::GetTypeInfo<const godot::EulerOrder&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB10initializeEi(int p_level) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:193:14
godot::ClassDB::initialize(p_level);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0_claw_dtor(std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:375:12
__claw_this_->~_Hash_node();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261s_claw_ctor(godot::PtrToArg<const unsigned short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
new (__claw_this_) godot::PtrToArg<const unsigned short&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2geERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:153:7
return __claw_this_->operator>=(*p_vec2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS2_(std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>* __claw_this_, const std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>* arg0) {
// /usr/include/c++/13/bits/stl_pair.h:197:17
new (__claw_this_) std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>(*arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object15has_user_signalERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:87:7
return __claw_this_->has_user_signal(*signal);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_traits0falseWfalseWtrue1() {
return alignof(std::__detail::_Hashtable_traits<false,false,true>);
}
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5BasismiERKS0_(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:143:23
new (__claw_result_) godot::Basis(__claw_this_->operator-(*p_matrix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11MethodFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MethodFlags>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>();
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_info6beforeERKS_(std::type_info* __claw_this_, const std::type_info* __arg) {
// /usr/include/c++/13/typeinfo:108:10
return __claw_this_->before(*__arg);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIN5godot10StringNameEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<godot::StringName>,std::equal_to<godot::StringName>>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2eqERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:147:7
return __claw_this_->operator==(*p_vec2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVariant1() {
return sizeof(godot::PtrToArg<godot::Variant>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEC2ERKS5_() {
return alignof(std::pair<const godot::StringName,godot::ClassDB::ClassInfo>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWStringName1() {
return sizeof(godot::GetTypeInfo<godot::StringName>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE231I_claw_dtor(std::__type_identity<const int>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt64Array4findEll(godot::PackedInt64Array* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:124:10
return __claw_this_->find(value, from);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseImE23compare_exchange_strongERmmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt6atomicIbE4loadESt12memory_order(std::atomic<bool>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/atomic:115:5
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWshort1() {
return alignof(godot::PtrToArg<unsigned short>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWchar_traits0char161() {
return sizeof(std::char_traits<char16>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot10Projection5xformERKNS_7Vector4E(struct godot::Vector4* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:124:10
new (__claw_result_) godot::Vector4(__claw_this_->xform(*p_vec4));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC2Ev() {
return alignof(std::_List_base<godot::StringName,std::allocator<godot::StringName>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_unregister_extension_class() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:187:64

return godot::internal::gdextension_interface_classdb_unregister_extension_class;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MIDIMessageE23v_claw_dtor(godot::GetTypeInfo<const godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API enum godot::Orientation __claw__ZN5godot13VariantCasterINS_11OrientationEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
return godot::VariantCaster<godot::Orientation>::cast(*p_variant);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:242:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(__n, *__a);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt6atomicIbE12is_lock_freeEv(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:93:5
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot7CowDataIDiEC2Ev() {
return sizeof(godot::CowData<char32>);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_name(struct godot::PropertyInfo* __claw_this_, godot::StringName* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->name = *__claw_value_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis4lerpERKS0_RKf(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* p_to, const real_t* p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:151:8
new (__claw_result_) godot::Basis(__claw_this_->lerp(*p_to, *p_weight));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEmmEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String4lpadElRKS0_(godot::String* __claw_result_, godot::String* __claw_this_, int64_t min_length, const godot::String* character) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:360:9
new (__claw_result_) godot::String(__claw_this_->lpad(min_length, *character));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPropertyHint1() {
return sizeof(godot::PtrToArg<godot::PropertyHint>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEEC1El(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::Node::ProcessThreadMessages>(p_value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWCallableCustom() {
return sizeof(godot::CallableCustom);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node30is_physics_processing_internalEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:213:7
return __claw_this_->is_physics_processing_internal();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcmRKS3_(std::basic_string<char>* __claw_this_, const char* __s, std::basic_string<char>::size_type __n, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:619:7
new (__claw_this_) std::basic_string<char>(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_dtor(godot::GetTypeInfo<const godot::Variant::Type&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Rb_tree_node_base() {
return alignof(std::_Rb_tree_node_base);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWQuaternion11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>);
}
}

namespace godot {
__CLAW_API godot::CowData<char32>::Size __claw__ZNK5godot7CowDataIDiE4findERKDil(godot::CowData<char32>* __claw_this_, const char32* p_val, godot::CowData<char32>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:242:7
return __claw_this_->find(*p_val, p_from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5BasiseqERKS0_(struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:133:7
return __claw_this_->operator==(*p_matrix);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6repeatEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:287:9
new (__claw_result_) godot::String(__claw_this_->repeat(count));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2neERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:148:7
return __claw_this_->operator!=(*p_vec2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8CallableEEaSERKNS_5ArrayE(godot::TypedArray<godot::Callable>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:106:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbEaSEb(std::atomic<bool>* __claw_this_, bool __i) {
// /usr/include/c++/13/atomic:83:5
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZNK5godot10Dictionary9duplicateEb(godot::Dictionary* __claw_result_, godot::Dictionary* __claw_this_, bool deep) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:107:13
new (__claw_result_) godot::Dictionary(__claw_this_->duplicate(deep));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEmmEi(std::__atomic_base<unsigned int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node22set_editor_descriptionERKNS_6StringE(godot::Node* __claw_this_, const godot::String* editor_description) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:233:7
__claw_this_->set_editor_description(*editor_description);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2miERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:130:10
new (__claw_result_) godot::Vector2(__claw_this_->operator-(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API uint8_t __claw__ZN5godot8PtrToArgIRKbE10encode_argEb(bool p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
return godot::PtrToArg<const bool&>::encode_arg(p_val);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_RKS3_(std::basic_string<char>* __claw_this_, const std::basic_string<char>* __str, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:711:7
new (__claw_this_) std::basic_string<char>(*__str, *__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE8exchangeEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector2leERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:152:7
return __claw_this_->operator<=(*p_vec2);
}
}

namespace std {
__CLAW_API std::basic_string<char32>::size_type __claw__ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8max_sizeEv(std::basic_string<char32>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1084:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWJoyAxisR1() {
return alignof(godot::GetTypeInfo<godot::JoyAxis&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEEEC2Ev() {
return alignof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1ERKS3_RKS2_(std::vector<godot::Variant>* __claw_this_, const std::vector<godot::Variant>* __x, const std::allocator<godot::Variant>* __a) {
// /usr/include/c++/13/bits/stl_vector.h:624:7
new (__claw_this_) std::vector<godot::Variant>(*__x, *__a);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDsE23compare_exchange_strongERDsDsSt12memory_orderS2_(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p1D_claw_dtor(std::common_type<long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2299:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_8Vector3iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIiEC1Ev(std::initializer_list<int>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<int>();
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::int_type __claw__ZN9__gnu_cxx11char_traitsIcE11to_int_typeERKc(const __gnu_cxx::char_traits<char>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:166:7
return __gnu_cxx::char_traits<char>::to_int_type(*__c);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_order(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m) {
// /usr/include/c++/13/atomic:138:5
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedVector3ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIyEC1Ey(std::atomic<unsigned long long>* __claw_this_, std::atomic<unsigned long long>::__integral_type __i) {
// /usr/include/c++/13/atomic:948:17
new (__claw_this_) std::atomic<unsigned long long>(__i);
}
}

namespace std {
__CLAW_API std::char_traits<char32>::int_type __claw__ZNSt11char_traitsIDiE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:994:7
return std::char_traits<char32>::eof();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEoREa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector2iR1() {
return alignof(godot::PtrToArg<const godot::Vector2i&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_12PropertyHintEE6encodeES1_Pv(enum godot::PropertyHint p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
godot::PtrToArg<godot::PropertyHint>::encode(p_val, p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_utility_function(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:103:61

godot::internal::gdextension_interface_variant_get_ptr_utility_function = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array13ConstIteratorC1Ev(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:183:3
new (__claw_this_) godot::PackedInt32Array::ConstIterator();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIyEC1Ev(std::atomic<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/atomic:942:7
new (__claw_this_) std::atomic<unsigned long long>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D8rotate_yEd(godot::Node3D* __claw_this_, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:133:7
__claw_this_->rotate_y(angle);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40HorizontalAlignment_claw_ctor(godot::VariantCaster<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_this_) godot::VariantCaster<godot::HorizontalAlignment>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_15PackedByteArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedByteArray&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWPropertyUsageFlagsR11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot11Transform2D8get_skewEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:70:9
return __claw_this_->get_skew();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEmIEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_16PackedInt32ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:431:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6rstripERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:319:9
new (__claw_result_) godot::String(__claw_this_->rstrip(*chars));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWVector31R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>);
}
}

namespace std {
__CLAW_API std::char_traits<char16>::int_type __claw__ZNSt11char_traitsIDsE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:865:7
return std::char_traits<char16>::eof();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D27get_global_rotation_degreesEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:99:10
new (__claw_result_) godot::Vector3(__claw_this_->get_global_rotation_degrees());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::DuplicateFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4iplERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:96:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator+(*p_v));
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3logEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:395:14
return godot::Math::log(p_x);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array11operatornotEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:129:7
return __claw_this_->operatornot();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3logEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:392:15
return godot::Math::log(p_x);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIhE12is_lock_freeEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0int1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<int>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIdEC2EPKdm() {
return alignof(std::initializer_list<double>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5sincnEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:329:14
return godot::Math::sincn(p_x);
}
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5sincnEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:332:15
return godot::Math::sincn(p_x);
}
}
}

namespace godot {
__CLAW_API enum godot::MIDIMessage __claw__ZN5godot13VariantCasterINS_11MIDIMessageEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
return godot::VariantCaster<godot::MIDIMessage>::cast(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC2Ev() {
return alignof(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWJoyAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::JoyAxis&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane9is_finiteEv(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:80:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot11Transform3D9xform_invERKNS_18PackedVector3ArrayE(godot::PackedVector3Array* __claw_result_, struct godot::Transform3D* __claw_this_, const godot::PackedVector3Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:95:36
new (__claw_result_) godot::PackedVector3Array(__claw_this_->xform_inv(*p_array));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEC1EPNS_10_Hash_nodeIS7_Lb0EEE(std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>* __claw_this_, std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>::__node_type* __p) {
// /usr/include/c++/13/bits/hashtable_policy.h:436:7
new (__claw_this_) std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>(__p);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedFloat64ArrayW_MethodBindings() {
return alignof(godot::PackedFloat64Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2pLERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:129:7
__claw_this_->operator+=(*p_v);
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot11Transform2D9xform_invERKNS_18PackedVector2ArrayE(godot::PackedVector2Array* __claw_result_, struct godot::Transform2D* __claw_this_, const godot::PackedVector2Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:123:36
new (__claw_result_) godot::PackedVector2Array(__claw_this_->xform_inv(*p_array));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEaNEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4idVERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:101:27
return (struct godot::Vector4i*) (&__claw_this_->operator/=(*p_v));
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKS5_RKS7_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::Object*>::key_equal* __eql, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:158:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(__n, *__hf, *__eql, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWMouseButtonMask11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIcEaSERKc(godot::CharProxy<char>* __claw_this_, const char* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:74:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2mLERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:136:7
__claw_this_->operator*=(*rvalue);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12ctype_bynameIwEC1EPKcm(std::ctype_byname<wchar_t>* __claw_this_, const char* __s, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1529:7
new (__claw_this_) std::ctype_byname<wchar_t>(__s, __refs);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPlane_d(struct godot::Plane* __claw_this_, real_t __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:41:21

__claw_this_->d = __claw_value_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23s_claw_dtor(godot::TypedArray<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:81:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4idVEi(struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:108:27
return (struct godot::Vector4i*) (&__claw_this_->operator/=(p_scalar));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<const godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<const godot::KeyModifierMask>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringaSEOS0_(godot::String* __claw_this_, godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:440:10
return (godot::String*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_keyed_checker() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:101:58

return godot::internal::gdextension_interface_variant_get_ptr_keyed_checker;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_4AABBEE6encodeES3_Pv(const struct godot::AABB* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
godot::PtrToArg<const godot::AABB&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZNK5godot16PackedInt32Array8IteratorptEv(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:144:27
return (int32_t*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName14is_valid_floatEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:337:7
return __claw_this_->is_valid_float();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0wchar_tP1() {
return alignof(godot::PtrToArg<wchar_t*>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_int64_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:143:62

return godot::internal::gdextension_interface_packed_int64_array_operator_index;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVKSt13__atomic_baseIDiE4loadESt12memory_order(std::__atomic_base<char32>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWRect21() {
return alignof(godot::GetTypeInfo<godot::Rect2>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40InlineAlignment_claw_dtor(godot::PtrToArg<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40JoyAxisE23v_claw_ctor(godot::GetTypeInfo<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::GetTypeInfo<godot::JoyAxis>();
}
}

namespace godot {
__CLAW_API const double* __claw__ZNK5godot18PackedFloat64Array13ConstIteratordeEv(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:166:32
return (double*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1ERKNS_8NodePathE(godot::String* __claw_this_, const godot::NodePath* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:267:2
new (__claw_this_) godot::String(*from);
}
}

__CLAW_API long __claw_get_pthread_attr_t___align(union pthread_attr_t* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:7

return __claw_this_->__align;
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot8Vector3iixEi(struct godot::Vector3i* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:66:26
return (int32_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6SignalD1Ev(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:90:2
__claw_this_->~Signal();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWRect21() {
return alignof(godot::PtrToArg<godot::Rect2>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector36rotateERKS0_f(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_axis, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:103:7
__claw_this_->rotate(*p_axis, p_angle);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray20get_string_from_utf8Ev(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:169:9
new (__claw_result_) godot::String(__claw_this_->get_string_from_utf8());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWMouseButtonMaskR11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40AABB_claw_dtor(godot::PtrToArg<const godot::AABB&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedInt64Array9push_backEl(godot::PackedInt64Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:109:7
return __claw_this_->push_back(value);
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE3subEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:102:20
return __claw_this_->sub(p_value);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot11Transform2D5tdotxERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const struct godot::Vector2* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:56:24
return __claw_this_->tdotx(*v);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5PlaneneERKS0_(struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:83:22
return __claw_this_->operator!=(*p_plane);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTransform2D1() {
return alignof(godot::GetTypeInfo<godot::Transform2D>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String13simplify_pathEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:337:9
new (__claw_result_) godot::String(__claw_this_->simplify_path());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWunsignedWcharR1() {
return alignof(godot::GetTypeInfo<const unsigned char&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWProjectionWPlanes1() {
return sizeof(godot::GetTypeInfo<const godot::Projection::Planes>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1Em(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, std::size_t __n) {
// /usr/include/c++/13/bits/stl_vector.h:327:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(__n);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0float1() {
return alignof(godot::GetTypeInfo<float>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt32Array4findEll(godot::PackedInt32Array* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:124:10
return __claw_this_->find(value, from);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIwEaSERKw(godot::CharProxy<wchar_t>* __claw_this_, const wchar_t* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:74:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D12global_scaleERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:127:7
__claw_this_->global_scale(*scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot16PackedColorArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedColorArray);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_16PackedColorArrayEE6encodeES1_Pv(godot::PackedColorArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
godot::PtrToArg<godot::PackedColorArray>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2iC1Ev(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:128:9
new (__claw_this_) godot::Vector2i();
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE3subEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:102:20
return __claw_this_->sub(p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector29normalizeEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:82:7
__claw_this_->normalize();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Node_handleIN5godot10StringNameES1_SaISt13_Rb_tree_nodeIS1_EEEC1Ev(std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/bits/node_handle.h:346:17
new (__claw_this_) std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_8Vector3iEE6encodeES3_Pv(const struct godot::Vector3i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
godot::PtrToArg<const godot::Vector3i&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWKeyR1() {
return sizeof(godot::GetTypeInfo<godot::Key&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_18PackedFloat64ArrayEE6encodeES1_Pv(godot::PackedFloat64Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
godot::PtrToArg<const godot::PackedFloat64Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWintR1() {
return sizeof(godot::PtrToArg<const unsigned int&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1Ev(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:315:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector47inverseEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:109:10
new (__claw_result_) godot::Vector4(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementC2Ev() {
return sizeof(godot::List<godot::PropertyInfo>::Element);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWTransform3D1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect23absEv(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:286:23
new (__claw_result_) godot::Rect2(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName18validate_node_nameEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:333:9
new (__claw_result_) godot::String(__claw_this_->validate_node_name());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWRect2i1() {
return alignof(godot::GetTypeInfo<godot::Rect2i>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array6assignERKS0_(godot::Array* __claw_this_, const godot::Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:165:7
__claw_this_->assign(*array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::BitField<godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char11() {
return alignof(std::__hash_base<unsigned long,std::basic_string_view<char>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Corner_claw_dtor(godot::PtrToArg<godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNKSt13__atomic_baseIjEcvjEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator unsigned int();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5PlaneeqERKS0_(struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:82:22
return __claw_this_->operator==(*p_plane);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector210orthogonalEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:163:10
new (__claw_result_) godot::Vector2(__claw_this_->orthogonal());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_8Vector2iEE6encodeES1_Pv(struct godot::Vector2i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
godot::PtrToArg<const godot::Vector2i&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4igtERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:119:22
return __claw_this_->operator>(*p_v);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_5ColorE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Color* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:419:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40ClockDirection_claw_dtor(godot::VariantCaster<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDsE11eq_int_typeERKtS2_(const std::char_traits<char16>::int_type* __c1, const std::char_traits<char16>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:856:7
return std::char_traits<char16>::eq_int_type(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedStringArray1() {
return sizeof(godot::PtrToArg<godot::PackedStringArray>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodInfoltERKS0_(struct godot::MethodInfo* __claw_this_, const struct godot::MethodInfo* p_method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:73:14
return __claw_this_->operator<(*p_method);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_int32_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:141:62

godot::internal::gdextension_interface_packed_int32_array_operator_index = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4AABBEEC1ERKNS_5ArrayE(godot::TypedArray<godot::AABB>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:99:1
new (__claw_this_) godot::TypedArray<godot::AABB>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Color_claw_dtor(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:40:21
__claw_this_->~Color();
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D13rotated_localERKNS_7Vector3Ef(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:53:14
new (__claw_result_) godot::Transform3D(__claw_this_->rotated_local(*p_axis, p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot5Basis29get_rotation_axis_angle_localERNS_7Vector3ERf(struct godot::Basis* __claw_this_, struct godot::Vector3* p_axis, real_t* p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:78:7
__claw_this_->get_rotation_axis_angle_local(*p_axis, *p_angle);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIiE23compare_exchange_strongERiiSt12memory_orderS2_(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodePath1() {
return sizeof(godot::GetTypeInfo<godot::NodePath>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::HorizontalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object15add_user_signalERKNS_6StringERKNS_5ArrayE(godot::Object* __claw_this_, const godot::String* signal, const godot::Array* arguments) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:86:7
__claw_this_->add_user_signal(*signal, *arguments);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__exception_ptr13exception_ptrC2EPv() {
return alignof(std::__exception_ptr::exception_ptr);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot12PropertyInfoEEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::PropertyInfo>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail20_Prime_rehash_policyC1Ef(struct std::__detail::_Prime_rehash_policy* __claw_this_, float __z) {
// /usr/include/c++/13/bits/hashtable_policy.h:544:5
new (__claw_this_) std::__detail::_Prime_rehash_policy(__z);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDeqERKNS_7VariantE(godot::RID* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:79:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBasis1() {
return alignof(godot::GetTypeInfo<godot::Basis>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4sinhEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:318:14
return godot::Math::sinh(p_x);
}
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4sinhEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:315:15
return godot::Math::sinh(p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot18GDExtensionBinding10InitObjectC2EiiPi() {
return sizeof(godot::GDExtensionBinding::InitObject);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEoREh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_6SignalEE6encodeES1_Pv(godot::Signal* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
godot::PtrToArg<const godot::Signal&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWKeyModifierMask1() {
return alignof(godot::GetTypeInfo<godot::KeyModifierMask>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWintP1() {
return sizeof(godot::PtrToArg<const unsigned int*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedInt32Array_claw_dtor(godot::TypedArray<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:111:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot6String11_native_ptrEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:263:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcEC1ERKS1_(godot::CharStringT<char>* __claw_this_, const godot::CharStringT<char>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:108:17
new (__claw_this_) godot::CharStringT<char>(*p_str);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayD1Ev(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:107:2
__claw_this_->~PackedStringArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0unsignedWint11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<unsigned int>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedColorArrayWIterator() {
return sizeof(godot::PackedColorArray::Iterator);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::BitField<const godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40PropertyHintE23v_claw_dtor(godot::GetTypeInfo<godot::PropertyHint&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const struct godot::Basis* __claw__ZNK5godot11Transform3D9get_basisEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:70:15
return (struct godot::Basis*) (&__claw_this_->get_basis());
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWatomic_flag() {
return alignof(std::atomic_flag);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godotmlEfRKNS_8Vector4iE(struct godot::Vector4i* __claw_result_, const float p_scalar, const struct godot::Vector4i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:235:25
new (__claw_result_) godot::Vector4i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDiEC1ERKS0_(std::__new_allocator<char32>* __claw_this_, const std::__new_allocator<char32>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<char32>(*arg0);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<0,std::equal_to<int>,std::equal_to<int>>);
}
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot16PackedInt32Array13ConstIteratorptEv(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:169:33
return (const int32_t*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEEltERKS2_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Ref<godot::MultiplayerAPI>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:81:22
return __claw_this_->operator<(*p_r);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__failure_type() {
return sizeof(std::__failure_type);
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE8scan_notEtPKwS2_(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::ctype_base::mask __m, const std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:221:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->scan_not(__m, __lo, __hi);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorC1EPKNS3_7ElementE(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_, const godot::List<godot::PropertyInfo>::Element* p_E) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:184:18
new (__claw_this_) godot::List<godot::PropertyInfo>::ConstIterator(p_E);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array13ConstIteratorC1EPKf(struct godot::PackedFloat32Array::ConstIterator* __claw_this_, const float* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:182:3
new (__claw_this_) godot::PackedFloat32Array::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API godot::RID* __claw__ZN5godot8PtrToArgIRKNS_3RIDEE7convertEPKv(godot::RID* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
new (__claw_result_) godot::RID(godot::PtrToArg<const godot::RID&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWless() {
return sizeof(std::less);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector33dotERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_with) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:122:24
return __claw_this_->dot(*p_with);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40MouseButton_claw_dtor(godot::PtrToArg<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIcEC2Ev() {
return alignof(std::__new_allocator<char>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4iltERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:117:22
return __claw_this_->operator<(*p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D4showEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:119:7
__claw_this_->show();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40integral_constantE3EE23bE23Vb1_claw_ctor(std::integral_constant<bool,true>* __claw_this_) {
// /usr/include/c++/13/type_traits:62:12
new (__claw_this_) std::integral_constant<bool,true>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedByteArrayWConstIterator() {
return sizeof(godot::PackedByteArray::ConstIterator);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRNS_15KeyModifierMaskEEC2El() {
return sizeof(godot::BitField<godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4imlERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:100:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator*(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNodePath1() {
return sizeof(godot::PtrToArg<godot::NodePath>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_17PackedStringArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedStringArray>);
}
}

namespace godot {
__CLAW_API godot::CharProxy<wchar_t>* __claw__ZN5godot11CharStringTIwEixEl(godot::CharProxy<wchar_t>* __claw_result_, godot::CharStringT<wchar_t>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:105:30
new (__claw_result_) godot::CharProxy<wchar_t>(__claw_this_->operator[](p_index));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_dictionary_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:156:61

return godot::internal::gdextension_interface_dictionary_operator_index_const;
}
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZN5godot8PtrToArgIRKNS_18PackedVector3ArrayEE7convertEPKv(godot::PackedVector3Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
new (__claw_result_) godot::PackedVector3Array(godot::PtrToArg<const godot::PackedVector3Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::Color* __claw__ZNK5godot16PackedColorArray3ptrEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:139:15
return (const struct godot::Color*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot16ClassDBSingleton31class_get_integer_constant_enumERKNS_10StringNameES3_b(godot::StringName* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* name, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:78:13
new (__claw_result_) godot::StringName(__claw_this_->class_get_integer_constant_enum(*_class, *name, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array7reverseEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:122:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API std::vector<godot::StringName>::size_type __claw__ZNKSt6vectorIN5godot10StringNameESaIS1_EE4sizeEv(std::vector<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:992:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEpLEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKiiELb0EEEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>, false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>, false>>>();
}
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot11CharStringTIDiE6resizeEl(godot::CharStringT<char32>* __claw_this_, int64_t p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:94:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API godot::World3D* __claw__ZNK5godot3RefINS_7World3DEEptEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:95:20
return (godot::World3D*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot8Callable10get_methodEv(godot::StringName* __claw_result_, godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:109:13
new (__claw_result_) godot::StringName(__claw_this_->get_method());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Size2* __claw_get_godotWRect2_size(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:43:21

return (godot::Size2*)&__claw_this_->size;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVerticalAlignmentR1() {
return sizeof(godot::GetTypeInfo<const godot::VerticalAlignment&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0floatP1() {
return alignof(godot::PtrToArg<float*>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_value0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1() {
return alignof(std::__detail::_Hash_node_value<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE9fetch_andEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEmmEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6SignalEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Signal>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:107:1
new (__claw_this_) godot::TypedArray<godot::Signal>(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameeqERKNS_7VariantE(godot::StringName* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:359:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColormIERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:82:7
__claw_this_->operator-=(*p_color);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEmmEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWOrientation1() {
return sizeof(godot::GetTypeInfo<const godot::Orientation>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_11Transform2DEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC1EOSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1942:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>(std::move(*arg0));
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWProjection1() {
return alignof(godot::PtrToArg<godot::Projection>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgImE6encodeEmPv(uint64_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
godot::PtrToArg<unsigned long>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWRect2_size(struct godot::Rect2* __claw_this_, godot::Size2* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:43:21

__claw_this_->size = *__claw_value_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNKSt13__atomic_baseImEcvmEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator unsigned long();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6Object9get_classEv(godot::String* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:66:9
new (__claw_result_) godot::String(__claw_this_->get_class());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE9fetch_subEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorneERKS4_(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:182:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2mLERKf(struct godot::Vector2* __claw_this_, const real_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:135:7
__claw_this_->operator*=(*rvalue);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String6matchnERKS0_(godot::String* __claw_this_, const godot::String* expr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:290:7
return __claw_this_->matchn(*expr);
}
}

namespace godot {
__CLAW_API enum godot::Node::DuplicateFlags __claw__ZN5godot8PtrToArgINS_4Node14DuplicateFlagsEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
return godot::PtrToArg<godot::Node::DuplicateFlags>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0unsignedWchar11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<unsigned char>>);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE4sizeEv(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:647:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3pLERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:153:26
return (struct godot::Vector3*) (&__claw_this_->operator+=(*p_v));
}
}

namespace godot {
__CLAW_API enum godot::Key __claw__ZN5godot8PtrToArgINS_3KeyEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
return godot::PtrToArg<godot::Key>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0bool1() {
return sizeof(godot::PtrToArg<bool>);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot5Basis14get_quaternionEv(struct godot::Quaternion* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:93:13
new (__claw_result_) godot::Quaternion(__claw_this_->get_quaternion());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot22_err_print_index_errorEPKcS1_illS1_S1_RKNS_6StringEbb(const char* p_function, const char* p_file, int p_line, int64_t p_index, int64_t p_size, const char* p_index_str, const char* p_size_str, const godot::String* p_message, bool p_editor_notify, bool p_fatal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:49:6
godot::_err_print_index_error(p_function, p_file, p_line, p_index, p_size, p_index_str, p_size_str, *p_message, p_editor_notify, p_fatal);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW__detailW_Node_iterator0stdWpair0constWgodotWStringNameWgodotWMethodBindP1WfalseWfalse11() {
return alignof(std::__type_identity<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__common_type_impl0longWdoubleWlongWdoubleWlongWdoubleWlongWdouble1() {
return sizeof(std::__common_type_impl<long double,long double,long double,long double>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector3iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3i>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEE11instantiateEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_6SignalE(godot::Variant* __claw_this_, const godot::Signal* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:203:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String7replaceERKS0_S2_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* what, const godot::String* forwhat) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:298:9
new (__claw_result_) godot::String(__claw_this_->replace(*what, *forwhat));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEE8is_validEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3mLERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:157:26
return (struct godot::Vector3*) (&__claw_this_->operator*=(*p_v));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40String_claw_dtor(godot::PtrToArg<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261f_claw_dtor(godot::PtrToArg<const float&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC2Ev() {
return alignof(std::unordered_map<int,int>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE9fetch_addEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector2EEC1ERKNS_7VariantE(godot::TypedArray<godot::Vector2>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:90:1
new (__claw_this_) godot::TypedArray<godot::Vector2>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2iE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1EmRKS2_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, std::size_t __n, const std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:333:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(__n, *__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE9fetch_andEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API char16* __claw__ZN5godot11CharStringTIDsE4ptrwEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:91:20
return (char16*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWPropertyUsageFlags11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIKNS_15KeyModifierMaskEEC2El() {
return sizeof(godot::BitField<const godot::KeyModifierMask>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40SignalE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_17PackedStringArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedStringArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:115:1
new (__claw_this_) godot::TypedArray<godot::PackedStringArray>(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1EmRKS2_(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>::size_type __n, const std::vector<godot::Variant>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:556:7
new (__claw_this_) std::vector<godot::Variant>(__n, *__a);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIaEC1Ea(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<char>(__i);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot7ClassDB18class_set_propertyEPNS_6ObjectERKNS_10StringNameERKNS_7VariantE(godot::Object* object, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_set_property(object, *property, *value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1S_claw_ctor(godot::PtrToArg<const short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
new (__claw_this_) godot::PtrToArg<const short*>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedColorArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:167:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIhEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<unsigned char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261cE23v_claw_ctor(godot::GetTypeInfo<const unsigned char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
new (__claw_this_) godot::GetTypeInfo<const unsigned char&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10rpc_configERKNS_10StringNameERKNS_7VariantE(godot::Node* __claw_this_, const godot::StringName* method, const godot::Variant* config) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:232:7
__claw_this_->rpc_config(*method, *config);
}
}

namespace godot {
__CLAW_API enum godot::Vector3i::Axis __claw__ZN5godot13VariantCasterINS_8Vector3i4AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
return godot::VariantCaster<godot::Vector3i::Axis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector2EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0unsignedWint11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<unsigned int>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratoreqERKS4_(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:181:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__is_charE3EE23C_claw_ctor(std::__is_char<char>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:407:12
new (__claw_this_) std::__is_char<char>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0bool11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<bool>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseIKiiEC2Ev() {
return sizeof(std::__pair_base<const int,int>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIaEC1Ev(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<char>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE8exchangeEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE9fetch_addEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWintR1() {
return sizeof(godot::GetTypeInfo<const int&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D22set_subgizmo_selectionERKNS_3RefINS_11Node3DGizmoEEEiRKNS_11Transform3DE(godot::Node3D* __claw_this_, const godot::Ref<godot::Node3DGizmo>* gizmo, int32_t id, const struct godot::Transform3D* transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:114:7
__claw_this_->set_subgizmo_selection(*gizmo, id, *transform);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt19_Node_handle_commonIN5godot10StringNameESaISt13_Rb_tree_nodeIS1_EEEC2Ev() {
return alignof(std::_Node_handle_common<godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ef(godot::Variant* __claw_this_, float v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:170:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3i::Axis&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D9set_basisERKNS_5BasisE(struct godot::Transform3D* __claw_this_, const struct godot::Basis* p_basis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:71:7
__claw_this_->set_basis(*p_basis);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot6String6rsplitERKS0_bl(godot::PackedStringArray* __claw_result_, godot::String* __claw_this_, const godot::String* delimiter, bool allow_empty, int64_t maxsplit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:309:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->rsplit(*delimiter, allow_empty, maxsplit));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot15PackedByteArray6insertEll(godot::PackedByteArray* __claw_this_, int64_t at_index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:155:10
return __claw_this_->insert(at_index, value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_6CornerEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Corner>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Es(godot::Variant* __claw_this_, int16_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:157:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ei(godot::Variant* __claw_this_, int native_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:150:11
new (__claw_this_) godot::Variant(native_ptr);
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node10find_childERKNS_6StringEbb(godot::Node* __claw_this_, const godot::String* pattern, bool recursive, bool owned) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:155:8
return (godot::Node*) __claw_this_->find_child(*pattern, recursive, owned);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Callable11is_standardEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:105:7
return __claw_this_->is_standard();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_6ObjectEELb0EEEEC2Ev() {
return sizeof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessModeR1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessMode&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWlong1() {
return alignof(godot::PtrToArg<unsigned long>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodBind8is_constEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:104:22
return __claw_this_->is_const();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E2AE24E40NE40godotE40SE40MethodBind_claw_ctor(std::__type_identity<godot::MethodBind*>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<godot::MethodBind*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP111() {
return alignof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Et(godot::Variant* __claw_this_, uint16_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:165:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40StringE40SE40_MethodBindings_claw_dtor(struct godot::String::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:86:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_dtor(godot::GetTypeInfo<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:166:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Select1st() {
return alignof(std::__detail::_Select1st);
}
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot6Object28_gde_binding_create_callbackEPvS1_(void* p_token, void* p_instance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
return (void*) godot::Object::_gde_binding_create_callback(p_token, p_instance);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ev(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:147:2
new (__claw_this_) godot::Variant();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant11set_indexedElRKS0_RbS3_(godot::Variant* __claw_this_, int64_t index, const godot::Variant* value, bool* r_valid, bool* r_oob) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:304:7
__claw_this_->set_indexed(index, *value, *r_valid, *r_oob);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMouseButtonMaskR1() {
return sizeof(godot::GetTypeInfo<godot::MouseButtonMask&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ej(godot::Variant* __claw_this_, uint32_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:163:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1El(godot::Variant* __claw_this_, int64_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:154:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Eh(godot::Variant* __claw_this_, uint8_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:167:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_6StringEE6encodeES1_Pv(godot::String* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
godot::PtrToArg<const godot::String&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2i::Axis&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array8is_emptyEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:107:7
return __claw_this_->is_empty();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_dictionary_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:156:61

godot::internal::gdextension_interface_dictionary_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Em(godot::Variant* __claw_this_, uint64_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:161:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Eb(godot::Variant* __claw_this_, bool v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:153:2
new (__claw_this_) godot::Variant(v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseIPSt18_Rb_tree_node_baseS1_EC2Ev() {
return alignof(std::__pair_base<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ea(godot::Variant* __claw_this_, int8_t v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:159:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot15PackedByteArrayplERKS0_(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:212:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261bE23v_claw_ctor(godot::GetTypeInfo<const bool&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
new (__claw_this_) godot::GetTypeInfo<const bool&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1Ed(godot::Variant* __claw_this_, double v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:169:2
new (__claw_this_) godot::Variant(v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC2Ev() {
return alignof(std::basic_string_view<char32>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt5mutexD1Ev(std::mutex* __claw_this_) {
// /usr/include/c++/13/bits/std_mutex.h:105:5
__claw_this_->~mutex();
}
}

namespace std {
__CLAW_API std::__new_allocator<char>::size_type __claw__ZNKSt15__new_allocatorIcE8max_sizeEv(std::__new_allocator<char>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEaSEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23I_claw_ctor(godot::PtrToArg<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
new (__claw_this_) godot::PtrToArg<int>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsE3setElRKDs(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_index, const char16* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:199:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEoREw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40AABB_claw_dtor(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:46:21
__claw_this_->~AABB();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIwE21compare_exchange_weakERwwSt12memory_orderS2_(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName4findERKNS_6StringEl(godot::StringName* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:270:10
return __claw_this_->find(*what, from);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZNK5godot10MethodBind17get_argument_infoEi(struct godot::PropertyInfo* __claw_result_, godot::MethodBind* __claw_this_, int p_argument) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:119:15
new (__claw_result_) godot::PropertyInfo(__claw_this_->get_argument_info(p_argument));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS2_7ClassDB9ClassInfoEELb0EEEEC2Ev() {
return alignof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4i::Axis&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDsEC1EDs(std::atomic<char16>* __claw_this_, std::atomic<char16>::__integral_type __i) {
// /usr/include/c++/13/atomic:1020:17
new (__claw_this_) std::atomic<char16>(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector24AxisEE6encodeES2_Pv(enum godot::Vector2::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
godot::PtrToArg<godot::Vector2::Axis>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEEC2El() {
return sizeof(godot::BitField<godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40KeyE23v_claw_dtor(godot::GetTypeInfo<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldINS_18PropertyUsageFlagsEEC2El() {
return sizeof(godot::BitField<godot::PropertyUsageFlags>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEEC1ERKS7_(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_, const std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_17VerticalAlignmentEE6encodeES1_Pv(enum godot::VerticalAlignment p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
godot::PtrToArg<godot::VerticalAlignment>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWClockDirection1() {
return sizeof(godot::GetTypeInfo<godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node16_unhandled_inputERKNS_3RefINS_10InputEventEEE(godot::Node* __claw_this_, const godot::Ref<godot::InputEvent>* event) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:286:15
__claw_this_->_unhandled_input(*event);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2irmERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:103:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator%(*p_v1));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDsE23compare_exchange_strongERDsDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2i8set_sizeERKNS_8Vector2iE(struct godot::Rect2i* __claw_this_, const godot::Size2i* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:49:7
__claw_this_->set_size(*p_size);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot31CallableCustomMethodPointerBase8get_hashEv(godot::CallableCustomMethodPointerBase* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_method_pointer.hpp:50:26
return __claw_this_->get_hash();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math23cubic_interpolate_angleEddddd(double p_from, double p_to, double p_pre, double p_post, double p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:433:15
return godot::Math::cubic_interpolate_angle(p_from, p_to, p_pre, p_post, p_weight);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4i::Axis>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE8exchangeExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::ConstIterator* __claw__ZN5godot16PackedColorArray13ConstIteratorppEv(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:172:33
return (struct godot::PackedColorArray::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3iR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3i&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10Dictionary4hashEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:104:10
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector34AxisEE6encodeES2_Pv(enum godot::Vector3::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
godot::PtrToArg<godot::Vector3::Axis>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsEaSEPKDs(godot::CharStringT<char16>* __claw_this_, const char16* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:112:7
__claw_this_->operator=(p_cstr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_6StringE(godot::Variant* __claw_this_, const godot::String* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:172:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedVector2Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:116:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RefINS_14MultiplayerAPIEEC2ERKS2_() {
return alignof(godot::Ref<godot::MultiplayerAPI>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEoREl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKS0_(godot::Variant* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:151:2
new (__claw_this_) godot::Variant(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform3D15is_equal_approxERKS0_(struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:80:7
return __claw_this_->is_equal_approx(*p_transform);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2i::Axis>();
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::Iterator* __claw__ZN5godot18PackedFloat32Array3endEv(struct godot::PackedFloat32Array::Iterator* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:193:26
new (__claw_result_) godot::PackedFloat32Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC1ERKS2_(std::basic_string_view<char32>* __claw_this_, const std::basic_string_view<char32>* arg0) {
// /usr/include/c++/13/string_view:136:17
new (__claw_this_) std::basic_string_view<char32>(*arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIjEC1Ej(std::atomic<unsigned int>* __claw_this_, std::atomic<unsigned int>::__integral_type __i) {
// /usr/include/c++/13/atomic:856:17
new (__claw_this_) std::atomic<unsigned int>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3i::Axis>();
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxWchar_traits0wchar_t1() {
return sizeof(__gnu_cxx::char_traits<wchar_t>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7Variant10has_memberENS0_4TypeERKNS_10StringNameE(enum godot::Variant::Type type, const godot::StringName* member) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:319:14
return godot::Variant::has_member(type, *member);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect28set_sizeERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:50:7
__claw_this_->set_size(*p_size);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Vector4i14length_squaredEv(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:84:25
return __claw_this_->length_squared();
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZN5godot8PtrToArgINS_8CallableEE7convertEPKv(godot::Callable* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
new (__claw_result_) godot::Callable(godot::PtrToArg<godot::Callable>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector2EEC1Ev(godot::TypedArray<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:90:1
new (__claw_this_) godot::TypedArray<godot::Vector2>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_6ObjectEE8callbackEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:128:14
godot::internal::EngineClassRegistration<godot::Object>::callback();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot10StringNameEEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWString1() {
return sizeof(godot::GetTypeInfo<godot::String>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Vector2i14length_squaredEv(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:117:10
return __claw_this_->length_squared();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIdEC1Ev(godot::TypedArray<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:88:1
new (__claw_this_) godot::TypedArray<double>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC2Ev() {
return sizeof(std::__detail::_Node_iterator_base<std::pair<const int,int>,false>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMIDIMessage1() {
return alignof(godot::GetTypeInfo<const godot::MIDIMessage>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Aw_claw_dtor(godot::PtrToArg<char32*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEaSEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40hashE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::hash<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::hash<godot::StringName>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionmLERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:89:7
__claw_this_->operator*=(*p_q);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWQuaternion11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWProjection1() {
return sizeof(godot::PtrToArg<godot::Projection>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector311move_towardERKS0_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to, const real_t p_delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:114:10
new (__claw_result_) godot::Vector3(__claw_this_->move_toward(*p_to, p_delta));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261r_claw_ctor(godot::PtrToArg<const char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
new (__claw_this_) godot::PtrToArg<const char&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRKNS_18PropertyUsageFlagsEE8has_flagES3_(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_, const enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWString11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::String>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWhash0godotWStringName11() {
return alignof(std::__type_identity<std::hash<godot::StringName>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIjEC1Ev(std::atomic<unsigned int>* __claw_this_) {
// /usr/include/c++/13/atomic:850:7
new (__claw_this_) std::atomic<unsigned int>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEmIEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWCallable1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis14set_quaternionERKNS_10QuaternionE(struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:94:7
__claw_this_->set_quaternion(*p_quaternion);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWInlineAlignmentR1() {
return sizeof(godot::GetTypeInfo<const godot::InlineAlignment&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWSafeRefCount() {
return sizeof(godot::SafeRefCount);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmEd(godot::String* __claw_result_, godot::String* __claw_this_, double other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:395:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array9set_typedEjRKNS_10StringNameERKNS_7VariantE(godot::Array* __claw_this_, uint32_t p_type, const godot::StringName* p_class_name, const godot::Variant* p_script) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:225:7
__claw_this_->set_typed(p_type, *p_class_name, *p_script);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector211move_towardERKS0_f(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_to, const real_t p_delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:118:10
new (__claw_result_) godot::Vector2(__claw_this_->move_toward(*p_to, p_delta));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23D_claw_dtor(std::__success_type<long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
__claw_this_->~__success_type();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<const godot::VerticalAlignment>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt19_Node_handle_commonISt4pairIKiiESaINSt8__detail10_Hash_nodeIS2_Lb0EEEEEC2Ev() {
return sizeof(std::_Node_handle_common<std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:394:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionpLERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:105:22
__claw_this_->operator+=(*p_q);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot10StringNameEEC1ERKS2_(std::__new_allocator<godot::StringName>* __claw_this_, const std::__new_allocator<godot::StringName>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<godot::StringName>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_5BasisE(godot::Variant* __claw_this_, const struct godot::Basis* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:193:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIsEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<short>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIKNS_18PropertyUsageFlagsEEcvlEv(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmEb(godot::String* __claw_result_, godot::String* __claw_this_, bool other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:393:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector4WAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessMode_claw_ctor(godot::PtrToArg<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::PtrToArg<godot::Node::ProcessMode>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8CallableE(godot::Variant* __claw_this_, const godot::Callable* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:202:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector44AxisEE6encodeES2_Pv(enum godot::Vector4::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
godot::PtrToArg<godot::Vector4::Axis>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEED1Ev(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:758:2
__claw_this_->~List();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKS5_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:246:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(__n, *__hf, *__a);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2igeERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:112:7
return __claw_this_->operator>=(*p_vec2);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_has_key(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:84:46

godot::internal::gdextension_interface_variant_has_key = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ListE3EE23E24E40NE40godotE40SE40PropertyInfoE23E24E40NE40godotE40SE40DefaultAllocatorE40SE40Element_claw_dtor(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:53:8
__claw_this_->~Element();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot6ObjectC2EPKc() {
return sizeof(godot::Object);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNKSt13__atomic_baseIwEcvwEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator wchar_t();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15_Rb_tree_headerC1Ev(struct std::_Rb_tree_header* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:173:5
new (__claw_this_) std::_Rb_tree_header();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIaE23compare_exchange_strongERaaSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__failure_type() {
return alignof(std::__failure_type);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev() {
return alignof(std::__new_allocator<std::__detail::_Hash_node_base*>);
}
}

namespace std {
__CLAW_API std::basic_string<char>::size_type __claw__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(std::basic_string<char>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1071:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D10set_originERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_origin) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:87:22
__claw_this_->set_origin(*p_origin);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE8exchangeEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEpLEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2ieqERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:114:7
return __claw_this_->operator==(*p_vec2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWObjectDB() {
return alignof(godot::ObjectDB);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D6scaledERKNS_7Vector3E(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:62:14
new (__claw_result_) godot::Transform3D(__claw_this_->scaled(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:403:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3idVERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:99:27
return (struct godot::Vector3i*) (&__claw_this_->operator/=(*p_v));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_dtor(godot::GetTypeInfo<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:173:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMouseButtonMask1() {
return sizeof(godot::GetTypeInfo<const godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10MethodBind26get_default_argument_countEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:78:21
return __claw_this_->get_default_argument_count();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5clearEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:462:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4WAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIKNS_15MouseButtonMaskEEC2El() {
return sizeof(godot::BitField<const godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_15MouseButtonMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MouseButtonMask&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw_get_godotWAABB_size(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:46:21

return (struct godot::Vector3*)&__claw_this_->size;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_18PackedFloat32ArrayEE6encodeES1_Pv(godot::PackedFloat32Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
godot::PtrToArg<godot::PackedFloat32Array>::encode(*p_val, p_ptr);
}
}

__CLAW_API unsigned long long __claw_alignof___iseqsig_type0longWdouble1() {
return alignof(__iseqsig_type<long double>);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDB_claw_dtor(godot::ClassDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:83:7
__claw_this_->~ClassDB();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDleERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:85:7
return __claw_this_->operator<=(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWhash0int1() {
return sizeof(std::hash<int>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23wE23v_claw_ctor(godot::GetTypeInfo<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
new (__claw_this_) godot::GetTypeInfo<char32>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40RIDE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW__detailW_Select1st1() {
return alignof(std::__type_identity<std::__detail::_Select1st>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC2Ev() {
return alignof(std::unordered_map<godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0unsignedWshort11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<unsigned short>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_8Vector3i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11Transform2DEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Transform2D>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEC1ERKNS_7VariantE(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref<godot::Node3DGizmo>(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIfEC2EPKfm() {
return alignof(std::initializer_list<float>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedStringArrayWIterator() {
return alignof(godot::PackedStringArray::Iterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2iC1Eiiii(struct godot::Rect2i* __claw_this_, int p_x, int p_y, int p_width, int p_height) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:237:2
new (__claw_this_) godot::Rect2i(p_x, p_y, p_width, p_height);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2ineERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:115:7
return __claw_this_->operator!=(*p_vec2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator0void1() {
return sizeof(std::allocator<void>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23sE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDneERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:83:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadMessages1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRNS_15MouseButtonMaskEEC2El() {
return sizeof(godot::BitField<godot::MouseButtonMask&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40MethodInfo_claw_dtor(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8
__claw_this_->~MethodInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVKSt13__atomic_baseIhE4loadESt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8NodePathC2EPKNS_7VariantE() {
return sizeof(godot::NodePath);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEED1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7Variant11can_convertENS0_4TypeES1_(enum godot::Variant::Type from, enum godot::Variant::Type to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:331:14
return godot::Variant::can_convert(from, to);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector2ileERKS0_(struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vec2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:111:7
return __claw_this_->operator<=(*p_vec2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D33set_ignore_transform_notificationEb(godot::Node3D* __claw_this_, bool enabled) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:101:7
__claw_this_->set_ignore_transform_notification(enabled);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__ptr_traits_ptr_toE3EE23E2AE24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23S1_E23Vb0_claw_dtor(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>* __claw_this_) {
// /usr/include/c++/13/bits/ptr_traits.h:130:12
__claw_this_->~__ptr_traits_ptr_to();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessThreadMessagesR1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDiEC1Ev(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<char32>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:396:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNKSt13__atomic_baseIDiE4loadESt12memory_order(std::__atomic_base<char32>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5PlaneEEaSERKNS_5ArrayE(godot::TypedArray<godot::Plane>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:97:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWAABB11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::AABB>>);
}
}

namespace std {
__CLAW_API std::vector<godot::Variant>::size_type __claw__ZNKSt6vectorIN5godot7VariantESaIS1_EE8max_sizeEv(std::vector<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:998:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2imiERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:92:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator-(*p_v));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1ERKS3_RKS2_(std::vector<godot::StringName>* __claw_this_, const std::vector<godot::StringName>* __x, const std::allocator<godot::StringName>* __a) {
// /usr/include/c++/13/bits/stl_vector.h:624:7
new (__claw_this_) std::vector<godot::StringName>(*__x, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node28notify_deferred_thread_groupEi(godot::Node* __claw_this_, int32_t what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:266:7
__claw_this_->notify_deferred_thread_group(what);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWunsignedWintR1() {
return sizeof(godot::GetTypeInfo<const unsigned int&>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6Object2trERKNS_10StringNameES3_(godot::String* __claw_result_, godot::Object* __claw_this_, const godot::StringName* message, const godot::StringName* context) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:130:9
new (__claw_result_) godot::String(__claw_this_->tr(*message, *context));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_18PackedVector2ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:406:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<char>::char_type* __claw__ZNSt11char_traitsIcE6assignEPcmc(std::char_traits<char>::char_type* __s, std::size_t __n, std::char_traits<char>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:439:7
return (std::char_traits<char>::char_type*) std::char_traits<char>::assign(__s, __n, __a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::ProcessMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::ProcessMode&>();
}
}

namespace godot {
__CLAW_API std::list<godot::StringName>* __claw_get_godotWMethodDefinition_args(struct godot::MethodDefinition* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:66:8

return (std::list<godot::StringName>*)&__claw_this_->args;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWunsignedWshortR1() {
return alignof(godot::GetTypeInfo<const unsigned short&>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_ref_set_object() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:172:45

return godot::internal::gdextension_interface_ref_set_object;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3i::Axis>();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector211distance_toERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:98:9
return __claw_this_->distance_to(*p_vector2);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIDiE12is_lock_freeEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2i::Axis>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23I_claw_ctor(std::__type_identity<int>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<int>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedStringArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedStringArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedStringArray&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedFloat64Array_claw_dtor(godot::TypedArray<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:114:1
__claw_this_->~TypedArray();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_value0stdWpair0constWintWint1Wfalse1() {
return sizeof(std::__detail::_Hash_node_value<std::pair<const int,int>,false>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDsED1Ev(std::__new_allocator<char16>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1Ev(std::unordered_map<int,int>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:148:7
new (__claw_this_) std::unordered_map<int,int>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4i::Axis>();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot7VariantcvmEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:222:2
return __claw_this_->operator unsigned long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedVector2Array_claw_dtor(godot::PtrToArg<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDeqERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:82:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0godotWPropertyInfo11() {
return alignof(std::__type_identity<std::allocator<godot::PropertyInfo>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringgeERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:401:7
return __claw_this_->operator>=(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedInt64Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedInt64Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23r_claw_dtor(godot::TypedArray<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:80:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261fE23v_claw_ctor(godot::GetTypeInfo<const float&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
new (__claw_this_) godot::GetTypeInfo<const float&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIdEC1ERKNS_5ArrayE(godot::TypedArray<double>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:88:1
new (__claw_this_) godot::TypedArray<double>(*p_array);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWunsignedWlong1() {
return alignof(std::__hash_base<unsigned long,unsigned long>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_can_convert_strict() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:87:56

return godot::internal::gdextension_interface_variant_can_convert_strict;
}
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4absfEf(float g) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:676:14
return godot::Math::absf(g);
}
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<char>>::size_type __claw__ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_(const std::allocator_traits<std::allocator<char>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<char>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40ClockDirectionE23v_claw_dtor(godot::GetTypeInfo<const godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio060W11() {
return sizeof(std::ratio<60,1>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIaE5storeEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API struct std::__failure_type* __claw_cE3AE40NE40stdE40SE40__do_common_type_implE40FTE40E3E2E23TE23T_S_test_2E2EE23E24E40NE40stdE40SE40__failure_typeE23S(struct std::__failure_type* __claw_result_, struct std::__do_common_type_impl* __claw_this_) {
// /usr/include/c++/13/type_traits:2285:7
new (__claw_result_) std::__failure_type(__claw_this_->_S_test_2());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector317octahedron_decodeERKNS_7Vector2E(struct godot::Vector3* __claw_result_, const struct godot::Vector2* p_oct) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:117:17
new (__claw_result_) godot::Vector3(godot::Vector3::octahedron_decode(*p_oct));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1EmRKS1_RKS3_RKS7_(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::hasher* __hf, const std::unordered_map<int,int>::key_equal* __eql, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:158:7
new (__claw_this_) std::unordered_map<int,int>(__n, *__hf, *__eql, *__a);
}
}

__CLAW_API wint_t __claw_cE3AE40FE40getwchar_unlocked() {
// /usr/include/wchar.h:991:15
return getwchar_unlocked();
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDgeERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:87:7
return __claw_this_->operator>=(*other);
}
}

namespace std {
__CLAW_API void __claw__ZNSt10bad_typeidD1Ev(std::bad_typeid* __claw_this_) {
// /usr/include/c++/13/typeinfo:244:13
__claw_this_->~bad_typeid();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC2ERNS_16_Hashtable_allocIS6_EE() {
return alignof(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8ios_baseC2Ev() {
return sizeof(std::ios_base);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D8set_skewEf(struct godot::Transform2D* __claw_this_, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:71:7
__claw_this_->set_skew(p_angle);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseItE21compare_exchange_weakERttSt12memory_orderS2_(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_11OrientationEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Orientation>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_worker_thread_pool_add_native_group_task(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:131:67

godot::internal::gdextension_interface_worker_thread_pool_add_native_group_task = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE9fetch_subEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_11MethodFlagsEE10clear_flagES1_(godot::BitField<const godot::MethodFlags>* __claw_this_, const enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEaNEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23rE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<char>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodDefinition_name(struct godot::MethodDefinition* __claw_this_, godot::StringName* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:66:8

__claw_this_->name = *__claw_value_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4E23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEmmEi(std::__atomic_base<bool>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE8fetch_orEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_6ObjectEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return sizeof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array14make_read_onlyEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:205:7
__claw_this_->make_read_only();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector45clampERKS0_S2_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_min, const struct godot::Vector4* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:107:10
new (__claw_result_) godot::Vector4(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbE8exchangeEbSt12memory_order(std::atomic<bool>* __claw_this_, bool __i, std::memory_order __m) {
// /usr/include/c++/13/atomic:119:5
return __claw_this_->exchange(__i, __m);
}
}

__CLAW_API int __claw__ZZ7isctypeE3(int __c, int __mask) {
// /usr/include/ctype.h:135:12
return isctype(__c, __mask);
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_value_base0stdWpair0constWgodotWStringNameWgodotWMethodBindP11() {
return alignof(std::__detail::_Hash_node_value_base<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot11CharStringTIDsE6resizeEl(godot::CharStringT<char16>* __claw_this_, int64_t p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:94:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZN5godot18PackedFloat32Array9duplicateEv(godot::PackedFloat32Array* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:123:21
new (__claw_result_) godot::PackedFloat32Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1Ev(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:148:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7VarianteqERKS0_(godot::Variant* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:266:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEmmEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIwE2eqERKwS3_(const __gnu_cxx::char_traits<wchar_t>::char_type* __c1, const __gnu_cxx::char_traits<wchar_t>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:136:7
return __gnu_cxx::char_traits<wchar_t>::eq(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringleERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:399:7
return __claw_this_->operator<=(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector3ArrayE40SE40Iterator_claw_dtor(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:145:12
__claw_this_->~Iterator();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_has_member() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:83:49

return godot::internal::gdextension_interface_variant_has_member;
}
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector414length_squaredEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:81:24
return __claw_this_->length_squared();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE9fetch_xorEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__ptr_traits_ptr_to0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1PWstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return sizeof(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Variant4TypeEE6encodeES2_Pv(enum godot::Variant::Type p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
godot::PtrToArg<godot::Variant::Type>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40OrientationE23v_claw_ctor(godot::GetTypeInfo<godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<godot::Orientation>();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2DmlERKS0_(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:110:14
new (__claw_result_) godot::Transform2D(__claw_this_->operator*(*p_transform));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::ConstIterator* __claw__ZN5godot18PackedVector3Array13ConstIteratorppEv(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:175:33
return (struct godot::PackedVector3Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>);
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_plus_eq_wcstr(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:124:58

godot::internal::gdextension_interface_string_operator_plus_eq_wcstr = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiE9fetch_xorEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:397:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEaSERKNS_7VariantE(godot::Ref<godot::World3D>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE9fetch_andEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIwEC1Ev(std::allocator<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<wchar_t>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis10get_columnEi(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, int p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:176:25
new (__claw_result_) godot::Vector3(__claw_this_->get_column(p_index));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40hashE3EE23I_claw_ctor(std::__type_identity<std::hash<int>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::hash<int>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_6Rect2iEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Rect2i>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_3KeyEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Key&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::Iterator* __claw__ZN5godot18PackedVector3Array3endEv(struct godot::PackedVector3Array::Iterator* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:198:26
new (__claw_result_) godot::PackedVector3Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7VariantneERKS0_(godot::Variant* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:267:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE9fetch_addEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0unsignedWchar1() {
return alignof(godot::GetTypeInfo<unsigned char>);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect212intersectionERKS0_(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:150:15
new (__claw_result_) godot::Rect2(__claw_this_->intersection(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D9to_globalERKNS_7Vector3E(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_, const struct godot::Vector3* local_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:141:10
new (__claw_result_) godot::Vector3(__claw_this_->to_global(*local_point));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_keyed_getter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:100:57

godot::internal::gdextension_interface_variant_get_ptr_keyed_getter = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZN5godot8PtrToArgINS_18PackedVector2ArrayEE7convertEPKv(godot::PackedVector2Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
new (__claw_result_) godot::PackedVector2Array(godot::PtrToArg<godot::PackedVector2Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_8Vector2i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt5ctypeIcEC2EPKtbm() {
return alignof(std::ctype<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector4WAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3E23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayC1ERKS0_(godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:104:2
new (__claw_this_) godot::PackedColorArray(*from);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return alignof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot16PackedInt32Array4ptrwEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:138:11
return (int32_t*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_8CallableEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Callable>);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5BasismlEf(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:145:23
new (__claw_result_) godot::Basis(__claw_this_->operator*(p_val));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqEPKc(godot::String* __claw_this_, const char* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:445:7
return __claw_this_->operator==(p_str);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedColorArray4sizeEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:108:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIKNS_11MethodFlagsEEcvlEv(godot::BitField<const godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_dtor(godot::GetTypeInfo<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E40SE40__get_value_typeE3EE23S1__claw_ctor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const int,int>,false>>();
}
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot5Color6get_b8Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:212:25
return __claw_this_->get_b8();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_6CornerEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Corner&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10QuaternioncvNS_6StringEEv(godot::String* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:118:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqEPKw(godot::String* __claw_this_, const wchar_t* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:446:7
return __claw_this_->operator==(p_str);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_has_member(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:83:49

godot::internal::gdextension_interface_variant_has_member = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEC1EPS1_(godot::Ref<godot::InputEvent>* __claw_this_, godot::InputEvent* p_reference) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:178:2
new (__claw_this_) godot::Ref<godot::InputEvent>(p_reference);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23rE23v_claw_ctor(godot::GetTypeInfo<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
new (__claw_this_) godot::GetTypeInfo<char>();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3sinEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:297:14
return godot::Math::sin(p_x);
}
}
}

__CLAW_API const __int32_t** __claw_cE3AE40FE40__ctype_tolower_loc() {
// /usr/include/ctype.h:81:26
return (const __int32_t**) __ctype_tolower_loc();
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3sinEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:294:15
return godot::Math::sin(p_x);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot7VariantEEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::Variant>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object10disconnectERKNS_10StringNameERKNS_8CallableE(godot::Object* __claw_this_, const godot::StringName* signal, const godot::Callable* callable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:123:7
__claw_this_->disconnect(*signal, *callable);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261dE23v_claw_ctor(godot::GetTypeInfo<const double&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<const double&>();
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZNK5godot7VariantcvNS_16PackedColorArrayEEv(godot::PackedColorArray* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:262:2
new (__claw_result_) godot::PackedColorArray(__claw_this_->operator PackedColorArray());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__false_type() {
return alignof(std::__false_type);
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color5clampERKS0_S2_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_min, const struct godot::Color* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:96:8
new (__claw_result_) godot::Color(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIcE21compare_exchange_weakERccSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector411distance_toERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:90:9
return __claw_this_->distance_to(*p_to);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8PtrToArgINS_8Vector4iEE7convertEPKv(struct godot::Vector4i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
new (__claw_result_) godot::Vector4i(godot::PtrToArg<godot::Vector4i>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWDuplicateFlagsR1() {
return sizeof(godot::GetTypeInfo<const godot::Node::DuplicateFlags&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE9fetch_andExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRID1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hash_node_value0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1() {
return sizeof(std::__detail::_Hash_node_value<std::pair<const godot::StringName,godot::MethodBind*>,false>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10QuaternionEEC1Ev(godot::TypedArray<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:98:1
new (__claw_this_) godot::TypedArray<godot::Quaternion>();
}
}

namespace godot {
__CLAW_API enum godot::Node::ProcessMode __claw__ZN5godot8PtrToArgINS_4Node11ProcessModeEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
return godot::PtrToArg<godot::Node::ProcessMode>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot18PackedVector2Array13ConstIteratorptEv(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:174:33
return (const struct godot::Vector2*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot8PtrToArgINS_7Vector3EE7convertEPKv(struct godot::Vector3* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
new (__claw_result_) godot::Vector3(godot::PtrToArg<godot::Vector3>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Object* __claw__ZN5godot8ObjectDB12get_instanceEm(uint64_t p_object_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:113:17
return (godot::Object*) godot::ObjectDB::get_instance(p_object_id);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEE5unrefEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8SafeFlagC1Eb(godot::SafeFlag* __claw_this_, bool p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:162:27
new (__claw_this_) godot::SafeFlag(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE9fetch_addExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwEC1ERS1_(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:248:17
new (__claw_this_) godot::CowData<wchar_t>(*p_from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodePathR1() {
return sizeof(godot::GetTypeInfo<const godot::NodePath&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKiiELb0ELb0EEEbEC2ERKS5_() {
return alignof(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEmIEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2E23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWCallableCustomBase() {
return sizeof(godot::CallableCustomBase);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEmmEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEeOEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray12encode_floatEld(godot::PackedByteArray* __claw_this_, int64_t byte_offset, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:204:7
__claw_this_->encode_float(byte_offset, value);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC1ERKS7_(std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_, const std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::MethodBind*>>(*arg0);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector23dotERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:104:9
return __claw_this_->dot(*p_other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIhEaSERKNS_5ArrayE(godot::TypedArray<unsigned char>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:79:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantComparator() {
return sizeof(godot::VariantComparator);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40unordered_mapE3EE23E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfoE23E24E40NE40stdE40SE40hashE3EE23S0_E23E24E40NE40stdE40SE40equal_toE3EE23S0_E23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231S0_E23S1__claw_ctor(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:109:11
new (__claw_this_) std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName4hashEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:358:10
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API const godot::Point2i* __claw__ZNK5godot6Rect2i12get_positionEv(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:46:17
return (godot::Point2i*) (&__claw_this_->get_position());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt64ArrayW_MethodBindings() {
return sizeof(godot::PackedInt64Array::_MethodBindings);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVKSt13__atomic_baseImEcvmEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator unsigned long();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23q_claw_ctor(std::char_traits<char16>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:750:12
new (__claw_this_) std::char_traits<char16>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:120:57

return godot::internal::gdextension_interface_string_operator_index_const;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23sE23v_claw_ctor(godot::GetTypeInfo<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
new (__claw_this_) godot::GetTypeInfo<unsigned short>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWString1() {
return sizeof(godot::PtrToArg<godot::String>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MouseButtonMask_claw_dtor(godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector2i1() {
return alignof(godot::PtrToArg<godot::Vector2i>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIhEC2Ev() {
return alignof(std::__atomic_base<unsigned char>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6Rect2icvNS_6StringEEv(godot::String* __claw_result_, struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:233:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_6Node3D16RotationEditModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node3D::RotationEditMode>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_18PropertyUsageFlagsEEC1El(godot::BitField<godot::PropertyUsageFlags>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::PropertyUsageFlags>(p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RIDC1Ev(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:74:2
new (__claw_this_) godot::RID();
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot18PackedVector3Array5sliceEll(godot::PackedVector3Array* __claw_result_, godot::PackedVector3Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:123:21
new (__claw_result_) godot::PackedVector3Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6dedentEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:325:9
new (__claw_result_) godot::String(__claw_this_->dedent());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWRIDR1() {
return sizeof(godot::GetTypeInfo<const godot::RID&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC2ENS4_12__sv_wrapperERKS3_() {
return sizeof(std::basic_string<char32>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1ERKNS_7Vector3E(struct godot::Quaternion* __claw_this_, const struct godot::Vector3* p_euler) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:131:2
new (__claw_this_) godot::Quaternion(*p_euler);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0longW10000000001() {
return sizeof(std::integral_constant<long,1000000000>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Array_claw_dtor(godot::PtrToArg<const godot::Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse111() {
return alignof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEmmEi(std::__atomic_base<char16>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZNK5godot16ClassDBSingleton18class_set_propertyEPNS_6ObjectERKNS_10StringNameERKNS_7VariantE(godot::ClassDBSingleton* __claw_this_, godot::Object* object, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:69:8
return __claw_this_->class_set_property(object, *property, *value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWSignal11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Signal>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot8PtrToArgINS_7Vector2EE7convertEPKv(struct godot::Vector2* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
new (__claw_result_) godot::Vector2(godot::PtrToArg<godot::Vector2>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWbool1() {
return sizeof(std::__hash_base<unsigned long,bool>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABBneERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_rval) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:65:7
return __claw_this_->operator!=(*p_rval);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWDuplicateFlags1() {
return sizeof(godot::GetTypeInfo<const godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedByteArrayW_MethodBindings() {
return alignof(godot::PackedByteArray::_MethodBindings);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt9type_infoC2EPKc() {
return sizeof(std::type_info);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_10QuaternionEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_script_instance_create2(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:173:54

godot::internal::gdextension_interface_script_instance_create2 = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::list<godot::StringName>::size_type __claw__ZNKSt7__cxx114listIN5godot10StringNameESaIS2_EE4sizeEv(std::list<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:1149:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIsE21compare_exchange_weakERssSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseItE5storeEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVerticalAlignment1() {
return alignof(godot::GetTypeInfo<godot::VerticalAlignment>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_worker_thread_pool_add_native_task() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:132:62

return godot::internal::gdextension_interface_worker_thread_pool_add_native_task;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedVector2Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:116:1
new (__claw_this_) godot::TypedArray<godot::PackedVector2Array>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPDsE6encodeES1_Pv(char16* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
godot::PtrToArg<char16*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_8NodePathEE6encodeES1_Pv(godot::NodePath* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
godot::PtrToArg<const godot::NodePath&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1EPKw(godot::NodePath* __claw_this_, const wchar_t* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:91:2
new (__claw_this_) godot::NodePath(from);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat64Array5rfindEdl(godot::PackedFloat64Array* __claw_this_, double value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:125:10
return __claw_this_->rfind(value, from);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEEC2Ev() {
return sizeof(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40HorizontalAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::HorizontalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_get_instance_binding(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:161:57

godot::internal::gdextension_interface_object_get_instance_binding = __claw_value_;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEEC2Ev() {
return sizeof(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4E40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_3RIDEEC1Ev(godot::TypedArray<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:105:1
new (__claw_this_) godot::TypedArray<godot::RID>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWProjectionWPlanes1() {
return sizeof(godot::VariantCaster<godot::Projection::Planes>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedVector2Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedVector2Array>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_set_instance_binding(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:162:57

godot::internal::gdextension_interface_object_set_instance_binding = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40CallableE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Callable>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWbidirectional_iterator_tag() {
return alignof(std::bidirectional_iterator_tag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector3i4zeroEv(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:85:22
__claw_this_->zero();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWMethodFlagsR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot7ClassDB26class_get_integer_constantERKNS_10StringNameES3_(const godot::StringName* _class, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_get_integer_constant(*_class, *name);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array8IteratorC1ERKS1_(struct godot::PackedFloat64Array::Iterator* __claw_this_, const struct godot::PackedFloat64Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:159:3
new (__claw_this_) godot::PackedFloat64Array::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6insertElRKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t position, const godot::String* what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:289:9
new (__claw_result_) godot::String(__claw_this_->insert(position, *what));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayC1ESt16initializer_listIfE(godot::PackedFloat32Array* __claw_this_, std::initializer_list<float>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:205:20
new (__claw_this_) godot::PackedFloat32Array(*p_init);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWKey1() {
return alignof(godot::GetTypeInfo<godot::Key>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_duplicate(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:79:49

godot::internal::gdextension_interface_variant_duplicate = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot18PackedVector2Array5sliceEll(godot::PackedVector2Array* __claw_result_, godot::PackedVector2Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:123:21
new (__claw_result_) godot::PackedVector2Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedFloat64Array_claw_dtor(godot::PtrToArg<const godot::PackedFloat64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_editor_add_plugin() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:189:48

return godot::internal::gdextension_interface_editor_add_plugin;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_3KeyEE6encodeES1_Pv(enum godot::Key p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
godot::PtrToArg<godot::Key>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261i_claw_dtor(godot::PtrToArg<const unsigned int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Mod_range_hashing_claw_dtor(std::__type_identity<std::__detail::_Mod_range_hashing>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_hash_compare(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:77:51

godot::internal::gdextension_interface_variant_hash_compare = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Signal_claw_ctor(godot::PtrToArg<const godot::Signal&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
new (__claw_this_) godot::PtrToArg<const godot::Signal&>();
}
}

namespace godot {
__CLAW_API const void* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE2idEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:741:14
return (const void*) __claw_this_->id();
}
}

__CLAW_API unsigned long long __claw_sizeof___pthread_mutex_s() {
return sizeof(__pthread_mutex_s);
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math15is_equal_approxEddd(double a, double b, double tolerance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:663:13
return godot::Math::is_equal_approx(a, b, tolerance);
}
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection23create_depth_correctionEb(struct godot::Projection* __claw_result_, bool p_flip_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:85:20
new (__claw_result_) godot::Projection(godot::Projection::create_depth_correction(p_flip_y));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Plane7projectERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Plane* __claw_this_, const struct godot::Vector3* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:71:25
new (__claw_result_) godot::Vector3(__claw_this_->project(*p_point));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIsEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<short>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D12get_positionEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:75:10
new (__claw_result_) godot::Vector3(__claw_this_->get_position());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_11MethodFlagsEE8set_flagES2_(godot::BitField<godot::MethodFlags&>* __claw_this_, enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2_claw_dtor(godot::PtrToArg<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIdEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<double>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_8CallableEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Callable>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWMethodDefinition() {
return sizeof(godot::MethodDefinition);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10ProjectioncvNS_6StringEEv(godot::String* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:127:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Dictionary_claw_dtor(godot::TypedArray<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:108:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EmRKS5_RKS7_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::MethodBind*>::key_equal* __eql, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:158:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(__n, *__hf, *__eql, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt32ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:165:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DC1Ev(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:146:2
new (__claw_this_) godot::Transform2D();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__success_type0longWdouble1() {
return alignof(std::__success_type<long double>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MouseButtonE23v_claw_ctor(godot::GetTypeInfo<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::GetTypeInfo<godot::MouseButton>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE8exchangeEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName4leftEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:301:9
new (__claw_result_) godot::String(__claw_this_->left(length));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEmIEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::ConstIterator* __claw__ZNK5godot18PackedVector2Array3endEv(struct godot::PackedVector2Array::ConstIterator* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:205:31
new (__claw_result_) godot::PackedVector2Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E40SE40__get_value_typeE3EE23S1__claw_dtor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
__claw_this_->~__get_value_type();
}
}
}

__CLAW_API int __claw__ZZ7putcharE3(int __c) {
// /usr/include/stdio.h:614:12
return putchar(__c);
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC2Ev() {
return alignof(std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Transform3D_claw_ctor(godot::PtrToArg<const godot::Transform3D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
new (__claw_this_) godot::PtrToArg<const godot::Transform3D&>();
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot6String12split_floatsERKS0_b(godot::PackedFloat64Array* __claw_result_, godot::String* __claw_this_, const godot::String* delimiter, bool allow_empty) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:310:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->split_floats(*delimiter, allow_empty));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__common_type_implE3EE23LE23LE23LE23L_claw_dtor(std::__common_type_impl<long,long,long,long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2314:12
__claw_this_->~__common_type_impl();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__is_char0char1() {
return alignof(std::__is_char<char>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4SideEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Side>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10error_codeC2Ev() {
return sizeof(std::error_code);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector2_claw_dtor(godot::PtrToArg<const godot::Vector2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4imLEi(struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:106:27
return (struct godot::Vector4i*) (&__claw_this_->operator*=(p_scalar));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_18PropertyUsageFlagsEE8set_flagES2_(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_, enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayC1Ev(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:101:2
new (__claw_this_) godot::PackedInt64Array();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23qE23v_claw_ctor(godot::GetTypeInfo<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
new (__claw_this_) godot::GetTypeInfo<char16>();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot8PtrToArgIRKNS_5ColorEE7convertEPKv(struct godot::Color* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
new (__claw_result_) godot::Color(godot::PtrToArg<const godot::Color&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector49is_finiteEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:84:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect215grow_individualEffff(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, real_t p_left, real_t p_top, real_t p_right, real_t p_bottom) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:243:15
new (__claw_result_) godot::Rect2(__claw_this_->grow_individual(p_left, p_top, p_right, p_bottom));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWNodePathW_MethodBindings() {
return alignof(godot::NodePath::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261iE23v_claw_ctor(godot::GetTypeInfo<const unsigned int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
new (__claw_this_) godot::GetTypeInfo<const unsigned int&>();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion10normalizedEv(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:61:13
new (__claw_result_) godot::Quaternion(__claw_this_->normalized());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<1,std::hash<int>,std::hash<int>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<1,std::hash<int>,std::hash<int>>();
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEaSEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEmmEi(std::__atomic_base<unsigned long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10StringNameEE6encodeES1_Pv(godot::StringName* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
godot::PtrToArg<godot::StringName>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEmmEv(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayC1ESt16initializer_listIiE(godot::PackedInt32Array* __claw_this_, std::initializer_list<int>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:205:20
new (__claw_this_) godot::PackedInt32Array(*p_init);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node9set_ownerEPS0_(godot::Node* __claw_this_, godot::Node* owner) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:170:7
__claw_this_->set_owner(owner);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABBeqERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_rval) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:64:7
return __claw_this_->operator==(*p_rval);
}
}

namespace godot {
__CLAW_API void __claw__ZZN5godot3RefaSERKNS_7VariantEE9(godot::Ref* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWdouble1() {
return alignof(std::__hash_base<unsigned long,double>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEaNEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIDsEC2Ev() {
return sizeof(std::atomic<char16>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedByteArray_claw_dtor(godot::PtrToArg<const godot::PackedByteArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_10Projection6PlanesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Projection::Planes&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1EPKc(godot::NodePath* __claw_this_, const char* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:90:2
new (__claw_this_) godot::NodePath(from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWRID1() {
return sizeof(godot::PtrToArg<godot::RID>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE8fetch_orEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalMode_claw_dtor(godot::VariantCaster<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~VariantCaster();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hash_code_baseIiSt4pairIKiiENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return alignof(std::__detail::_Hash_code_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIiE10encode_argEi(int32_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
return godot::PtrToArg<int>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE7postsubEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:107:20
return __claw_this_->postsub(p_value);
}
}

namespace godot {
__CLAW_API enum godot::EulerOrder __claw__ZNK5godot6Node3D18get_rotation_orderEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:81:13
return __claw_this_->get_rotation_order();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNKSt13__atomic_baseIyE4loadESt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D8rotate_xEd(godot::Node3D* __claw_this_, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:132:7
__claw_this_->rotate_x(angle);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIwEC2Ev() {
return alignof(std::atomic<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i9grow_sideENS_4SideEi(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, enum godot::Side p_side, int p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:165:16
new (__claw_result_) godot::Rect2i(__claw_this_->grow_side(p_side, p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedVector3ArrayWConstIterator() {
return sizeof(godot::PackedVector3Array::ConstIterator);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11MouseButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::MouseButton>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::StringName>* __claw__ZNK5godot6Object13get_meta_listEv(godot::TypedArray<godot::StringName>* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:85:25
new (__claw_result_) godot::TypedArray<godot::StringName>(__claw_this_->get_meta_list());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10get_slicecEll(godot::String* __claw_result_, godot::String* __claw_this_, int64_t delimiter, int64_t slice) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:281:9
new (__claw_result_) godot::String(__claw_this_->get_slicec(delimiter, slice));
return __claw_result_;
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptrC1EDn(std::__exception_ptr::exception_ptr* __claw_this_, std::nullptr_t* arg0) {
// /usr/include/c++/13/bits/exception_ptr.h:119:7
new (__claw_this_) std::__exception_ptr::exception_ptr(*arg0);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIiEC1Ev(godot::TypedArray<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:84:1
new (__claw_this_) godot::TypedArray<int>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedVector3Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:117:1
new (__claw_this_) godot::TypedArray<godot::PackedVector3Array>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector3i4AxisEE6encodeES2_Pv(enum godot::Vector3i::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
godot::PtrToArg<godot::Vector3i::Axis>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEC2Ev() {
return sizeof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace std {
__CLAW_API std::initializer_list<godot::StringName>::size_type __claw__ZNKSt16initializer_listIN5godot10StringNameEE4sizeEv(std::initializer_list<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40StringE23v_claw_dtor(godot::GetTypeInfo<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_6ObjectEELb0EEEED1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_ctor(godot::GetTypeInfo<godot::Projection::Planes&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<godot::Projection::Planes&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIyEC1Ev(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<unsigned long long>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261IE23v_claw_dtor(godot::GetTypeInfo<const int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKS0_(godot::Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:148:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIKNS_11MethodFlagsEE8has_flagES1_(godot::BitField<const godot::MethodFlags>* __claw_this_, const enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_constant_value() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:102:56

return godot::internal::gdextension_interface_variant_get_constant_value;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWwchar_tP1() {
return sizeof(godot::PtrToArg<const wchar_t*>);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot11CharStringTIwE6resizeEl(godot::CharStringT<wchar_t>* __claw_this_, int64_t p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:94:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10Dictionary4sizeEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:96:10
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1EOS3_(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:620:7
new (__claw_this_) std::vector<godot::Variant>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5PlaneC1Ev(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:86:17
new (__claw_this_) godot::Plane();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40EulerOrderE23v_claw_dtor(godot::GetTypeInfo<godot::EulerOrder&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ArrayE40SE40_MethodBindings_claw_dtor(struct godot::Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:63:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_17PackedStringArrayEE6encodeES1_Pv(godot::PackedStringArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
godot::PtrToArg<const godot::PackedStringArray&>::encode(*p_val, p_ptr);
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23D_claw_ctor(__iseqsig_type<long double>* __claw_this_) {
// /usr/include/math.h:1383:19
new (__claw_this_) __iseqsig_type<long double>();
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE19exchange_if_greaterEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:111:20
return __claw_this_->exchange_if_greater(p_value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedColorArrayWConstIterator() {
return alignof(godot::PackedColorArray::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayC1Ev(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:105:2
new (__claw_this_) godot::PackedVector2Array();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23c_claw_dtor(godot::PtrToArg<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNode3DWRotationEditModeR1() {
return sizeof(godot::GetTypeInfo<godot::Node3D::RotationEditMode&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWRect2R1() {
return alignof(godot::PtrToArg<const godot::Rect2&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIcEC2Ev() {
return sizeof(std::__new_allocator<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40ClockDirectionE23v_claw_ctor(godot::GetTypeInfo<const godot::ClockDirection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<const godot::ClockDirection&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt32ArrayW_MethodBindings() {
return alignof(godot::PackedInt32Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWCallable11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Callable>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23lE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const int64_t* __claw__ZNK5godot16PackedInt64Array13ConstIteratorptEv(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:169:33
return (const int64_t*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIlEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node17set_process_inputEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:191:7
__claw_this_->set_process_input(enable);
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math9is_finiteEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:616:13
return godot::Math::is_finite(p_val);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMouseButton1() {
return alignof(godot::GetTypeInfo<const godot::MouseButton>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIN5godot12PropertyInfoEEC2Ev() {
return alignof(std::allocator<godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10EulerOrderEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::EulerOrder>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWDictionary1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String6to_intEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:356:10
return __claw_this_->to_int();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNode3DWRotationEditMode1() {
return sizeof(godot::GetTypeInfo<const godot::Node3D::RotationEditMode>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_3KeyEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Key>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0double1() {
return sizeof(godot::PtrToArg<double>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray13ConstIteratorC1Ev(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:263:3
new (__claw_this_) godot::PackedByteArray::ConstIterator();
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math9is_finiteEd(double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:620:13
return godot::Math::is_finite(p_val);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15KeyModifierMaskEE10clear_flagES1_(godot::BitField<const godot::KeyModifierMask>* __claw_this_, const enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_resize() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:126:45

return godot::internal::gdextension_interface_string_resize;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1EOS3_(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>* arg0) {
// /usr/include/c++/13/bits/stl_vector.h:620:7
new (__claw_this_) std::vector<godot::PropertyInfo>(std::move(*arg0));
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIbEC1Eb(std::atomic<bool>* __claw_this_, bool __i) {
// /usr/include/c++/13/atomic:76:15
new (__claw_this_) std::atomic<bool>(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIyEC1Ey(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<unsigned long long>(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEmmEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGDExtensionBindingWInitData() {
return alignof(godot::GDExtensionBinding::InitData);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Av_claw_dtor(godot::PtrToArg<void*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40SignalE23v_claw_ctor(godot::GetTypeInfo<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
new (__claw_this_) godot::GetTypeInfo<godot::Signal>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MIDIMessageE23v_claw_dtor(godot::GetTypeInfo<godot::MIDIMessage&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1Ev(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:148:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIDsE2ltERKDsS2_(const std::char_traits<char16>::char_type* __c1, const std::char_traits<char16>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:785:7
return std::char_traits<char16>::lt(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWRect2i11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Rect2i>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWProjectionR1() {
return sizeof(godot::PtrToArg<const godot::Projection&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEEeqEPKS1_(godot::Ref<godot::World3D>* __claw_this_, const godot::World3D* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:74:22
return __claw_this_->operator==(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEeOEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWshortP1() {
return alignof(godot::PtrToArg<unsigned short*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Transform2DE23v_claw_ctor(godot::GetTypeInfo<const godot::Transform2D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
new (__claw_this_) godot::GetTypeInfo<const godot::Transform2D&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWchar1() {
return sizeof(godot::PtrToArg<unsigned char>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return alignof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWCallableW_MethodBindings() {
return alignof(godot::Callable::_MethodBindings);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot10StringNameEED1Ev(std::allocator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40RIDE23v_claw_ctor(godot::GetTypeInfo<const godot::RID&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
new (__claw_this_) godot::GetTypeInfo<const godot::RID&>();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIhE23compare_exchange_strongERhhSt12memory_orderS2_(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector2::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2::Axis&>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15error_conditionC1ERKS_(std::error_condition* __claw_this_, const std::error_condition* arg0) {
// /usr/include/c++/13/system_error:378:5
new (__claw_this_) std::error_condition(*arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot3RefINS_5TweenEEC2ERKS2_() {
return alignof(godot::Ref<godot::Tween>);
}
}

namespace godot {
__CLAW_API const uint8_t* __claw__ZNK5godot15PackedByteArray13ConstIteratordeEv(struct godot::PackedByteArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:246:33
return (uint8_t*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot7CowDataIcE6insertElRKc(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_pos, const char* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:231:8
return __claw_this_->insert(p_pos, *p_val);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1EOSC_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:191:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(std::move(*arg0));
}
}

__CLAW_API int __claw__ZZ10iswctype_lE4(wint_t __wc, wctype_t __desc, locale_t __locale) {
// /usr/include/wctype.h:122:12
return iswctype_l(__wc, __desc, __locale);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedFloat64ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedFloat64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedFloat64Array&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot18PackedFloat32ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedFloat32Array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object3setERKNS_10StringNameERKNS_7VariantE(godot::Object* __claw_this_, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:68:7
__claw_this_->set(*property, *value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector4i4zeroEv(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:87:22
__claw_this_->zero();
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7Element3getEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:123:27
return (struct godot::PropertyInfo*) (&__claw_this_->get());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array13ConstIteratorC1Ev(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:183:3
new (__claw_this_) godot::PackedInt64Array::ConstIterator();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math10rad_to_degEf(float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:582:14
return godot::Math::rad_to_deg(p_y);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat32ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedFloat32Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math10rad_to_degEd(double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:579:15
return godot::Math::rad_to_deg(p_y);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt64ArrayWConstIterator() {
return sizeof(godot::PackedInt64Array::ConstIterator);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Equality0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Equality<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP111() {
return sizeof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBind_claw_ctor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
new (__claw_this_) std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::MethodBind*>>();
}
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot5Plane10normalizedEv(struct godot::Plane* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:49:8
new (__claw_result_) godot::Plane(__claw_this_->normalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40PropertyHint_claw_ctor(godot::VariantCaster<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::VariantCaster<godot::PropertyHint>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23LE23v_claw_ctor(godot::GetTypeInfo<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
new (__claw_this_) godot::GetTypeInfo<long>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPropertyUsageFlags1() {
return sizeof(godot::GetTypeInfo<godot::PropertyUsageFlags>);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect26expandERKNS_7Vector2E(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:253:23
new (__claw_result_) godot::Rect2(__claw_this_->expand(*p_vector));
return __claw_result_;
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API std::__exception_ptr::exception_ptr* __claw__ZNSt15__exception_ptr13exception_ptraSEOS0_(std::__exception_ptr::exception_ptr* __claw_this_, std::__exception_ptr::exception_ptr* __o) {
// /usr/include/c++/13/bits/exception_ptr.h:140:7
return (std::__exception_ptr::exception_ptr*) (&__claw_this_->operator=(std::move(*__o)));
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D19set_global_rotationERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* euler_radians) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:96:7
__claw_this_->set_global_rotation(*euler_radians);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqEPKDs(godot::String* __claw_this_, const char16* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:447:7
return __claw_this_->operator==(p_str);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot7CowDataIwE6insertElRKw(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_pos, const wchar_t* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:231:8
return __claw_this_->insert(p_pos, *p_val);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_warning_with_message(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:54:56

godot::internal::gdextension_interface_print_warning_with_message = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt5ctypeIwEC1Em(std::ctype<wchar_t>* __claw_this_, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1227:7
new (__claw_this_) std::ctype<wchar_t>(__refs);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector2i1() {
return sizeof(godot::GetTypeInfo<godot::Vector2i>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12ctype_bynameIcEC2EPKcm() {
return alignof(std::ctype_byname<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedVector2Array>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton12class_existsERKNS_10StringNameE(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:60:7
return __claw_this_->class_exists(*_class);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIjE23compare_exchange_strongERjjSt12memory_orderS2_(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math23cubic_interpolate_angleEfffff(float p_from, float p_to, float p_pre, float p_post, float p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:448:14
return godot::Math::cubic_interpolate_angle(p_from, p_to, p_pre, p_post, p_weight);
}
}
}

namespace godot {
__CLAW_API const float* __claw__ZNK5godot18PackedFloat32Array3ptrEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:137:15
return (const float*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API enum godot::Projection::Planes __claw__ZN5godot13VariantCasterINS_10Projection6PlanesEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
return godot::VariantCaster<godot::Projection::Planes>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API enum godot::JoyButton __claw__ZN5godot13VariantCasterINS_9JoyButtonEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
return godot::VariantCaster<godot::JoyButton>::cast(*p_variant);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<char32>>::size_type __claw__ZNSt16allocator_traitsISaIDiEE8max_sizeERKS0_(const std::allocator_traits<std::allocator<char32>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<char32>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldINS_15KeyModifierMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EED1Ev(std::vector<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:733:7
__claw_this_->~vector();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_to_wide_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:118:50

return godot::internal::gdextension_interface_string_to_wide_chars;
}
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIjE23compare_exchange_strongERjjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray8is_emptyEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:149:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API real_t __claw__ZN5godot10Projection8get_fovyEff(real_t p_fovx, real_t p_aspect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:100:16
return godot::Projection::get_fovy(p_fovx, p_aspect);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqEPKDi(godot::String* __claw_this_, const char32* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:448:7
return __claw_this_->operator==(p_str);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedFloat32ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedFloat32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedFloat32Array&>();
}
}

namespace std {
__CLAW_API std::char_traits<char>::char_type* __claw__ZNSt11char_traitsIcE4copyEPcPKcm(std::char_traits<char>::char_type* __s1, const std::char_traits<char>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:427:7
return (std::char_traits<char>::char_type*) std::char_traits<char>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_17PackedStringArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PackedStringArray>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEEneEPKS1_(godot::Ref<godot::World3D>* __claw_this_, const godot::World3D* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:77:22
return __claw_this_->operator!=(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt32ArrayWConstIterator() {
return sizeof(godot::PackedInt32Array::ConstIterator);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIbEC1Ev(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:70:5
new (__claw_this_) std::atomic<bool>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot9CharProxyIcEC1ERKS1_(godot::CharProxy<char>* __claw_this_, const godot::CharProxy<char>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:58:17
new (__claw_this_) godot::CharProxy<char>(*p_other);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35clampERKS0_S2_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_min, const struct godot::Vector3* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:130:10
new (__claw_result_) godot::Vector3(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt19_Node_handle_commonIN5godot10StringNameESaISt13_Rb_tree_nodeIS1_EEEC2Ev() {
return sizeof(std::_Node_handle_common<godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseItE12is_lock_freeEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseItE23compare_exchange_strongERttSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEmmEi(std::__atomic_base<unsigned long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedInt64Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:112:1
new (__claw_this_) godot::TypedArray<godot::PackedInt64Array>(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB15is_equal_approxERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:67:7
return __claw_this_->is_equal_approx(*p_aabb);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40CornerE23v_claw_dtor(godot::GetTypeInfo<godot::Corner&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEaSEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot10Projection20get_projection_planeENS0_6PlanesE(struct godot::Plane* __claw_result_, struct godot::Projection* __claw_this_, enum godot::Projection::Planes p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:96:8
new (__claw_result_) godot::Plane(__claw_this_->get_projection_plane(p_plane));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0wchar_t11() {
return alignof(std::__hash_base<unsigned long,std::basic_string_view<wchar_t>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37rotatedERKS0_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_axis, const real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:104:10
new (__claw_result_) godot::Vector3(__claw_this_->rotated(*p_axis, p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot15PackedByteArray6appendEl(godot::PackedByteArray* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:152:7
return __claw_this_->append(value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::String>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::String>&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godotmlEdRKNS_8Vector3iE(struct godot::Vector3i* __claw_result_, const double p_scalar, const struct godot::Vector3i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:229:25
new (__claw_result_) godot::Vector3i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::Node::DuplicateFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array16get_typed_scriptEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:204:10
new (__claw_result_) godot::Variant(__claw_this_->get_typed_script());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_7JoyAxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::JoyAxis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5PlaneC1ERKNS_7Vector3Ef(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_normal, real_t p_d) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:91:17
new (__claw_this_) godot::Plane(*p_normal, p_d);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZN5godot7ClassDB23class_get_property_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::TypedArray<godot::Dictionary>(godot::ClassDB::class_get_property_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array13ConstIteratorneERKS1_(struct godot::PackedFloat32Array::ConstIterator* __claw_this_, const struct godot::PackedFloat32Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:180:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWcharPP1() {
return sizeof(godot::PtrToArg<unsigned char**>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godotmlEiRKNS_8Vector4iE(struct godot::Vector4i* __claw_result_, const int32_t p_scalar, const struct godot::Vector4i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:227:25
new (__claw_result_) godot::Vector4i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Node3DGizmo* __claw__ZNK5godot3RefINS_11Node3DGizmoEEptEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:95:20
return (godot::Node3DGizmo*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWcharPP1() {
return sizeof(godot::PtrToArg<const unsigned char**>);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEmIEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6locale2idC2ERKS0_() {
return alignof(std::locale::id);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/atomic:128:5
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEaSEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2i_claw_dtor(godot::PtrToArg<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_6StringEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:156:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::String&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_to_utf16_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:116:51

return godot::internal::gdextension_interface_string_to_utf16_chars;
}
}
}

namespace godot {
__CLAW_API godot::CharStringT<char>* __claw__ZN5godot11CharStringTIcEpLEc(godot::CharStringT<char>* __claw_this_, char p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:114:18
return (godot::CharStringT<char>*) (&__claw_this_->operator+=(p_char));
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::ConstIterator* __claw__ZNK5godot15PackedByteArray5beginEv(struct godot::PackedByteArray::ConstIterator* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:277:31
new (__claw_result_) godot::PackedByteArray::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Object* __claw__ZNK5godot6Signal10get_objectEv(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:92:11
return (godot::Object*) __claw_this_->get_object();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23iE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRKNS_11MethodFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godot8PtrToArgINS_7Vector4EE7convertEPKv(struct godot::Vector4* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
new (__claw_result_) godot::Vector4(godot::PtrToArg<godot::Vector4>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedColorArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedColorArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:118:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedFloat32Array_claw_dtor(godot::PtrToArg<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6StringEEC1ERKNS_7VariantE(godot::TypedArray<godot::String>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:89:1
new (__claw_this_) godot::TypedArray<godot::String>(*p_variant);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIsE23compare_exchange_strongERssSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type* __i1, std::__atomic_base<short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D21look_at_from_positionERKNS_7Vector3ES3_S3_b(godot::Node3D* __claw_this_, const struct godot::Vector3* position, const struct godot::Vector3* target, const struct godot::Vector3* up, bool use_model_front) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:139:7
__claw_this_->look_at_from_position(*position, *target, *up, use_model_front);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_to_utf32_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:117:51

return godot::internal::gdextension_interface_string_to_utf32_chars;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__truth_type0true1() {
return alignof(std::__truth_type<true>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat64ArrayW_MethodBindings() {
return sizeof(godot::PackedFloat64Array::_MethodBindings);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_orderS2_(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedColorArrayWIterator() {
return alignof(godot::PackedColorArray::Iterator);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_16PackedColorArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedColorArray&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array13ConstIteratoreqERKS1_(struct godot::PackedFloat32Array::ConstIterator* __claw_this_, const struct godot::PackedFloat32Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:179:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mRKS3_(std::basic_string<char>* __claw_this_, const std::basic_string<char>* __str, std::basic_string<char>::size_type __pos, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/basic_string.h:564:7
new (__claw_this_) std::basic_string<char>(*__str, __pos, *__a);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName10casecmp_toERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:261:10
return __claw_this_->casecmp_to(*to);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String14num_scientificEd(godot::String* __claw_result_, double number) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:372:16
new (__claw_result_) godot::String(godot::String::num_scientific(number));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E2AE24E40NE40stdE40SE40_Rb_tree_node_base_claw_dtor(std::__type_identity<std::_Rb_tree_node_base*>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWchar321() {
return alignof(std::__hash_base<unsigned long,char32>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIfEC1Ev(std::initializer_list<float>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<float>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot18PackedVector3Array4ptrwEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:143:11
return (struct godot::Vector3*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5PlaneEEC1ERKNS_7VariantE(godot::TypedArray<godot::Plane>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:97:1
new (__claw_this_) godot::TypedArray<godot::Plane>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedFloat64Array_claw_ctor(godot::PtrToArg<godot::PackedFloat64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
new (__claw_this_) godot::PtrToArg<godot::PackedFloat64Array>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName13simplify_pathEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:323:9
new (__claw_result_) godot::String(__claw_this_->simplify_path());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray8IteratorC1ERKS1_(struct godot::PackedStringArray::Iterator* __claw_this_, const struct godot::PackedStringArray::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:161:3
new (__claw_this_) godot::PackedStringArray::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWEulerOrder1() {
return alignof(godot::VariantCaster<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWCorner1() {
return alignof(godot::GetTypeInfo<godot::Corner>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat32ArrayW_MethodBindings() {
return sizeof(godot::PackedFloat32Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261lE23v_claw_ctor(godot::GetTypeInfo<const unsigned long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
new (__claw_this_) godot::GetTypeInfo<const unsigned long&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEeOEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10Projection20get_pixels_per_meterEi(struct godot::Projection* __claw_this_, int p_for_pixel_width) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:132:6
return __claw_this_->get_pixels_per_meter(p_for_pixel_width);
}
}

namespace godot {
__CLAW_API char16* __claw__ZN5godot8PtrToArgIPDsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
return (char16*) godot::PtrToArg<char16*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWEulerOrder1() {
return alignof(godot::GetTypeInfo<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_4Node14DuplicateFlagsEE6encodeES2_Pv(enum godot::Node::DuplicateFlags p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
godot::PtrToArg<godot::Node::DuplicateFlags>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWSignalR1() {
return sizeof(godot::PtrToArg<const godot::Signal&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4dvERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:121:25
new (__claw_result_) godot::Vector4(__claw_this_->operator/(*p_vec4));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::MouseButtonMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::MouseButtonMask&>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_traits0falseWfalseWfalse1() {
return sizeof(std::__detail::_Hashtable_traits<false,false,false>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray8IteratorC1EPNS_6StringE(struct godot::PackedStringArray::Iterator* __claw_this_, godot::String* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:159:3
new (__claw_this_) godot::PackedStringArray::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot8PtrToArgIPDiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
return (char32*) godot::PtrToArg<char32*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::BitField<godot::Node::ProcessThreadMessages>* __claw__ZN5godot8PtrToArgINS_8BitFieldINS_4Node21ProcessThreadMessagesEEEE7convertEPKv(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::BitField<godot::Node::ProcessThreadMessages>(godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbE23compare_exchange_strongERbbSt12memory_order(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m) {
// /usr/include/c++/13/atomic:158:5
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Dictionary3hasERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* key) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:100:7
return __claw_this_->has(*key);
}
}

namespace std {
__CLAW_API std::basic_string<char32>::size_type __claw__ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4sizeEv(std::basic_string<char32>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1071:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7CowDataIcEC2Ev() {
return alignof(godot::CowData<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0double11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<double>>);
}
}

namespace godot {
__CLAW_API real_t* __claw__ZN5godot7Vector3ixEi(struct godot::Vector3* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:68:25
return (real_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type0longWdoubleWlongWdouble1() {
return sizeof(std::common_type<long double,long double>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNodeWDuplicateFlags1() {
return sizeof(godot::PtrToArg<godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection14set_orthogonalEffffff(struct godot::Projection* __claw_this_, real_t p_left, real_t p_right, real_t p_bottom, real_t p_top, real_t p_znear, real_t p_zfar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:79:7
__claw_this_->set_orthogonal(p_left, p_right, p_bottom, p_top, p_znear, p_zfar);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40setE3EE23E24E40NE40godotE40SE40StringNameE23E24E40NE40stdE40SE40lessE3EE23S0_E23E24E40NE40stdE40SE40allocatorE3EE23S0__claw_dtor(std::set<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_set.h:96:11
__claw_this_->~set();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector2Array4sizeEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:110:10
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40ratioE3EE23VL1E23VL1000000000_claw_dtor(std::ratio<1,1000000000>* __claw_this_) {
// /usr/include/c++/13/ratio:266:12
__claw_this_->~ratio();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIKNS_15MouseButtonMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5BasisEEaSERKNS_5ArrayE(godot::TypedArray<godot::Basis>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:100:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return alignof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Map_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Map_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot7VariantaSEOS0_(godot::Variant* __claw_this_, godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:265:11
return (godot::Variant*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_11MethodFlagsEEC1El(godot::BitField<godot::MethodFlags&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::MethodFlags&>(p_value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt17basic_string_viewIwSt11char_traitsIwEEC2Ev() {
return sizeof(std::basic_string_view<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector4iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4i>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_latin1_chars_and_len() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:109:63

return godot::internal::gdextension_interface_string_new_with_latin1_chars_and_len;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector4R1() {
return sizeof(godot::PtrToArg<const godot::Vector4&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedInt64Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:112:1
new (__claw_this_) godot::TypedArray<godot::PackedInt64Array>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261LE23v_claw_dtor(godot::GetTypeInfo<const long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1I_claw_dtor(godot::PtrToArg<const int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot6String6resizeEl(godot::String* __claw_this_, int64_t p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:388:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261sE23v_claw_ctor(godot::GetTypeInfo<const unsigned short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
new (__claw_this_) godot::GetTypeInfo<const unsigned short&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0double1() {
return alignof(godot::GetTypeInfo<double>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13ConstIteratorC1Ev(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:185:18
new (__claw_this_) godot::List<godot::PropertyInfo>::ConstIterator();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__ptr_traits_ptr_toE3EE23E2AE24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23S1_E23Vb0_claw_ctor(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>* __claw_this_) {
// /usr/include/c++/13/bits/ptr_traits.h:130:12
new (__claw_this_) std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector4EvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayD1Ev(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:107:2
__claw_this_->~PackedColorArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZN5godot16PackedColorArray9duplicateEv(godot::PackedColorArray* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:125:19
new (__claw_result_) godot::PackedColorArray(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3mLEf(struct godot::Vector3* __claw_this_, const real_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:162:26
return (struct godot::Vector3*) (&__claw_this_->operator*=(p_scalar));
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EE6resizeEm(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>::size_type __new_size) {
// /usr/include/c++/13/bits/stl_list.h:1169:7
__claw_this_->resize(__new_size);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array8IteratoreqERKS1_(struct godot::PackedVector2Array::Iterator* __claw_this_, const struct godot::PackedVector2Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:159:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWRect2_position(struct godot::Rect2* __claw_this_, godot::Point2* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:43:21

__claw_this_->position = *__claw_value_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName13strip_escapesEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:304:9
new (__claw_result_) godot::String(__claw_this_->strip_escapes());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWBasisR1() {
return alignof(godot::PtrToArg<const godot::Basis&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_5Rect2EE6encodeES1_Pv(struct godot::Rect2* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
godot::PtrToArg<godot::Rect2>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayC1ERKNS_5ArrayE(godot::PackedVector2Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:107:2
new (__claw_this_) godot::PackedVector2Array(*from);
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZNK5godot18PackedVector2ArraymlERKNS_11Transform2DE(godot::PackedVector2Array* __claw_result_, godot::PackedVector2Array* __claw_this_, const struct godot::Transform2D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:134:21
new (__claw_result_) godot::PackedVector2Array(__claw_this_->operator*(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDiE23compare_exchange_strongERDiDiSt12memory_orderS2_(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv(std::type_info* __claw_this_, const __cxxabiv1::__class_type_info* __target, void** __obj_ptr) {
// /usr/include/c++/13/typeinfo:146:18
return __claw_this_->__do_upcast(__target, __obj_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Identity0godotWStringName1() {
return sizeof(std::_Identity<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0int1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<int>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SafeRefCount_claw_ctor(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:167:7
new (__claw_this_) godot::SafeRefCount();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE9fetch_subEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_15InlineAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::InlineAlignment>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot6StringixEl(godot::String* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:464:12
return (char32*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC1EOS3_RKS2_(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __claw_this_, std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>* __x, const std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:347:7
new (__claw_this_) std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>(std::move(*__x), *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayC1ERKNS_5ArrayE(godot::PackedVector3Array* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:107:2
new (__claw_this_) godot::PackedVector3Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261s_claw_dtor(godot::PtrToArg<const unsigned short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BasisE23v_claw_dtor(godot::GetTypeInfo<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev() {
return alignof(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>);
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE11bucket_sizeEm(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt) {
// /usr/include/c++/13/bits/hashtable.h:679:7
return __claw_this_->bucket_size(__bkt);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect28enclosesERKS0_(struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:134:14
return __claw_this_->encloses(*p_rect);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3E40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw_get_godotWTransform2D_columns(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:42:21

return (struct godot::Vector2*)__claw_this_->columns;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Rect2iE23v_claw_ctor(godot::GetTypeInfo<const godot::Rect2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
new (__claw_this_) godot::GetTypeInfo<const godot::Rect2i&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWKeyModifierMaskR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_base() {
return sizeof(std::__allocator_traits_base);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4Node21ProcessThreadMessagesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessThreadMessages>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261SE23v_claw_dtor(godot::GetTypeInfo<const short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::char_type* __claw__ZNSt11char_traitsIwE4moveEPwPKwm(std::char_traits<wchar_t>::char_type* __s1, const std::char_traits<wchar_t>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:546:7
return (std::char_traits<wchar_t>::char_type*) std::char_traits<wchar_t>::move(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDneERKNS_7VariantE(godot::RID* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:80:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261rE23v_claw_ctor(godot::GetTypeInfo<const char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
new (__claw_this_) godot::GetTypeInfo<const char&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40ErrorE23v_claw_ctor(godot::GetTypeInfo<const godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::GetTypeInfo<const godot::Error>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC1Ev(std::basic_string_view<char16>* __claw_this_) {
// /usr/include/c++/13/string_view:132:7
new (__claw_this_) std::basic_string_view<char16>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMIDIMessageR1() {
return sizeof(godot::GetTypeInfo<const godot::MIDIMessage&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIlEaSERKNS_5ArrayE(godot::TypedArray<long>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:86:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40InlineAlignment_claw_dtor(godot::VariantCaster<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWArray11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Array>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_ctor(godot::GetTypeInfo<const godot::Variant::Type&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::GetTypeInfo<const godot::Variant::Type&>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIcE2eqERKcS2_(const std::char_traits<char>::char_type* __c1, const std::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:362:7
return std::char_traits<char>::eq(*__c1, *__c2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWchar_traits0char161() {
return alignof(std::char_traits<char16>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot3RefINS_7World3DEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIwE21compare_exchange_weakERwwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_4Node21ProcessThreadMessagesEE10clear_flagES2_(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_, enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10MethodBind17get_argument_typeEi(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:114:40
return __claw_this_->get_argument_type();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object19is_blocking_signalsEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:126:7
return __claw_this_->is_blocking_signals();
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot11CharStringTIcE8get_dataEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:124:32
return (const char*) __claw_this_->get_data();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15KeyModifierMaskEE8set_flagES1_(godot::BitField<const godot::KeyModifierMask>* __claw_this_, const enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot14CallableCustom11get_as_textEv(godot::String* __claw_result_, godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:54:17
new (__claw_result_) godot::String(__claw_this_->get_as_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2Array8IteratorneERKS1_(struct godot::PackedVector2Array::Iterator* __claw_this_, const struct godot::PackedVector2Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:160:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEoREm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23fE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<float>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot16PackedColorArrayixEl(godot::PackedColorArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:138:9
return (struct godot::Color*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWDuplicateFlags1() {
return sizeof(godot::GetTypeInfo<godot::Node::DuplicateFlags>);
}
}

__CLAW_API unsigned long long __claw_alignof_pthread_attr_t() {
return alignof(pthread_attr_t);
}

namespace godot {
__CLAW_API int64_t* __claw__ZNK5godot16PackedInt64Array8IteratorptEv(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:144:27
return (int64_t*) __claw_this_->operator->();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__failure_type_claw_ctor(struct std::__failure_type* __claw_this_) {
// /usr/include/c++/13/type_traits:2260:10
new (__claw_this_) std::__failure_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIsE6encodeEsPv(int16_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
godot::PtrToArg<short>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE8fetch_orEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object8has_metaERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:84:7
return __claw_this_->has_meta(*name);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDiEC1ERKS_(std::allocator<char32>* __claw_this_, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<char32>(*__a);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis17get_main_diagonalEv(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:188:25
new (__claw_result_) godot::Vector3(__claw_this_->get_main_diagonal());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector2iEE6encodeES1_Pv(struct godot::Vector2i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:133:1
godot::PtrToArg<godot::Vector2i>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWStringR1() {
return alignof(godot::GetTypeInfo<const godot::String&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_variant_from_type_constructor(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:88:62

godot::internal::gdextension_interface_get_variant_from_type_constructor = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Plane10get_normalEv(struct godot::Vector3* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:46:25
new (__claw_result_) godot::Vector3(__claw_this_->get_normal());
return __claw_result_;
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API std::__exception_ptr::exception_ptr* __claw__ZNSt15__exception_ptr13exception_ptraSERKS0_(std::__exception_ptr::exception_ptr* __claw_this_, const std::__exception_ptr::exception_ptr* arg0) {
// /usr/include/c++/13/bits/exception_ptr.h:136:7
return (std::__exception_ptr::exception_ptr*) (&__claw_this_->operator=(*arg0));
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWColorR1() {
return alignof(godot::GetTypeInfo<const godot::Color&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRNS_18PropertyUsageFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Default_ranged_hash() {
return alignof(std::__detail::_Default_ranged_hash);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23IE23v_claw_ctor(godot::GetTypeInfo<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
new (__claw_this_) godot::GetTypeInfo<int>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector21() {
return sizeof(godot::GetTypeInfo<godot::Vector2>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector214angle_to_pointERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:101:9
return __claw_this_->angle_to_point(*p_vector2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261qE23v_claw_ctor(godot::GetTypeInfo<const char16&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
new (__claw_this_) godot::GetTypeInfo<const char16&>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKhE10encode_argEh(uint8_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
return godot::PtrToArg<const unsigned char&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector4WAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector4::Axis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMIDIMessage1() {
return alignof(godot::GetTypeInfo<godot::MIDIMessage>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node14is_inside_treeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:160:7
return __claw_this_->is_inside_tree();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPlaneR1() {
return sizeof(godot::GetTypeInfo<const godot::Plane&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIhE12is_lock_freeEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array3setEld(godot::PackedFloat32Array* __claw_this_, int64_t index, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:108:7
__claw_this_->set(index, value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector34snapES0_(struct godot::Vector3* __claw_this_, struct godot::Vector3* const p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:100:7
__claw_this_->snap(*p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWcharR1() {
return alignof(godot::GetTypeInfo<const char&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector41() {
return sizeof(godot::GetTypeInfo<godot::Vector4>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::DuplicateFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::DuplicateFlags&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6Rect2iEEC1Ev(godot::TypedArray<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:93:1
new (__claw_this_) godot::TypedArray<godot::Rect2i>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8BitFieldINS_15MouseButtonMaskEEEE6encodeES3_Pv(godot::BitField<godot::MouseButtonMask>* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEmmEi(std::__atomic_base<unsigned int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector31() {
return sizeof(godot::GetTypeInfo<godot::Vector3>);
}
}

namespace godot {
__CLAW_API double* __claw__ZNK5godot18PackedFloat64Array8IteratordeEv(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:141:26
return (double*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0short1() {
return sizeof(godot::PtrToArg<short>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf8_chars_and_len() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:110:61

return godot::internal::gdextension_interface_string_new_with_utf8_chars_and_len;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWOrientation1() {
return sizeof(godot::VariantCaster<godot::Orientation>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10DictionaryneERKS0_(godot::Dictionary* __claw_this_, const godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:115:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairIKN5godot10StringNameEPNS0_10MethodBindEEC2ERKS5_() {
return sizeof(std::pair<const godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API const void* __claw__ZN5godot8PtrToArgIPKvE7convertES2_(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
return (const void*) godot::PtrToArg<const void*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWKeyR1() {
return alignof(godot::GetTypeInfo<const godot::Key&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_8Vector4i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Signal* __claw__ZN5godot8PtrToArgIRKNS_6SignalEE7convertEPKv(godot::Signal* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
new (__claw_result_) godot::Signal(godot::PtrToArg<const godot::Signal&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEmmEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SafeNumericE3EE23l_claw_dtor(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:61:7
__claw_this_->~SafeNumeric();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_script_error() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:55:49

return godot::internal::gdextension_interface_print_script_error;
}
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName15to_wchar_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:357:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_wchar_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector2WAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector2::Axis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWStringNameW_MethodBindings() {
return sizeof(godot::StringName::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector2i4AxisEE6encodeES2_Pv(enum godot::Vector2i::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
godot::PtrToArg<godot::Vector2i::Axis>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::Iterator* __claw__ZN5godot16PackedInt64Array3endEv(struct godot::PackedInt64Array::Iterator* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:193:26
new (__claw_result_) godot::PackedInt64Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt5mutexC2Ev() {
return sizeof(std::mutex);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_6StringEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::String>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3_claw_dtor(godot::PtrToArg<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector3WAxisR1() {
return alignof(godot::GetTypeInfo<godot::Vector3::Axis&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEEC1Ev(std::__new_allocator<std::_List_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::_List_node<godot::StringName>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect28has_areaEv(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:145:22
return __claw_this_->has_area();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8CallableC2EPKNS_7VariantE() {
return alignof(godot::Callable);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__erased_type_claw_dtor(struct std::__erased_type* __claw_this_) {
// /usr/include/c++/13/bits/uses_allocator.h:46:10
__claw_this_->~__erased_type();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWBitField0godotWNodeWProcessThreadMessages11() {
return alignof(godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_17VerticalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::VerticalAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6SignalEEC1Ev(godot::TypedArray<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:107:1
new (__claw_this_) godot::TypedArray<godot::Signal>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSJ_RKS7_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* arg0, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::allocator_type* arg1) {
// /usr/include/c++/13/bits/hashtable.h:534:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(*arg0, *arg1);
}
}

namespace godot {
__CLAW_API enum godot::Node3D::RotationEditMode __claw__ZNK5godot6Node3D22get_rotation_edit_modeEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:83:27
return __claw_this_->get_rotation_edit_mode();
}
}

namespace std {
__CLAW_API std::initializer_list<godot::Vector2>::size_type __claw__ZNKSt16initializer_listIN5godot7Vector2EE4sizeEv(std::initializer_list<godot::Vector2>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot7VariantcvNS_8Vector4iEEv(struct godot::Vector4i* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:237:2
new (__claw_result_) godot::Vector4i(__claw_this_->operator Vector4i());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIDsEC2Ev() {
return sizeof(std::allocator<char16>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt11char_traitsIcE6assignERcRKc(std::char_traits<char>::char_type* __c1, const std::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:351:7
std::char_traits<char>::assign(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector3_claw_dtor(godot::PtrToArg<const godot::Vector3&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
__claw_this_->~PtrToArg();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEEC1ERKSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* __claw_this_, const std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1941:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>(*arg0);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIPNSt8__detail15_Hash_node_baseEEC2Ev() {
return alignof(std::allocator<std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_dtor(godot::GetTypeInfo<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40KeyE23v_claw_ctor(godot::GetTypeInfo<godot::Key&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::GetTypeInfo<godot::Key&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40_Rb_tree_key_compareE3EE23E24E40NE40stdE40SE40lessE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::_Rb_tree_key_compare<std::less<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::_Rb_tree_key_compare<std::less<godot::StringName>>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGDExtensionBinding() {
return sizeof(godot::GDExtensionBinding);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String12get_base_dirEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:338:9
new (__claw_result_) godot::String(__claw_this_->get_base_dir());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23dE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<double>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIdEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<double>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIjEC1Ev(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<unsigned int>();
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVKSt13__atomic_baseIsEcvsEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator short();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot7Vector3EEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::Vector3>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10DictionaryeqERKS0_(godot::Dictionary* __claw_this_, const godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:114:7
return __claw_this_->operator==(*other);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return sizeof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWStringName1() {
return alignof(godot::GetTypeInfo<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWJoyAxis1() {
return alignof(godot::VariantCaster<godot::JoyAxis>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIjEC1Ej(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<unsigned int>(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWchar321() {
return sizeof(std::__hash_base<unsigned long,char32>);
}
}

namespace godot {
__CLAW_API godot::Ref<godot::Node3DGizmo>* __claw__ZN5godot3RefINS_11Node3DGizmoEE25_gde_internal_constructorEPNS_6ObjectE(godot::Ref<godot::Node3DGizmo>* __claw_result_, godot::Object* obj) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:222:23
new (__claw_result_) godot::Ref<godot::Node3DGizmo>(godot::Ref<godot::Node3DGizmo>::_gde_internal_constructor(obj));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIhEC2Ev() {
return sizeof(std::atomic<unsigned char>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_unregister_extension_class(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:187:64

godot::internal::gdextension_interface_classdb_unregister_extension_class = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsE3setElRKDs(godot::CharStringT<char16>* __claw_this_, int64_t p_index, const char16* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:97:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIwE21compare_exchange_weakERwwSt12memory_orderS2_(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIwSt11char_traitsIwEEC1Ev(std::basic_string_view<wchar_t>* __claw_this_) {
// /usr/include/c++/13/string_view:132:7
new (__claw_this_) std::basic_string_view<wchar_t>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15MouseButtonMaskEEC1El(godot::BitField<const godot::MouseButtonMask>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::MouseButtonMask>(p_value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E2E23TE23TE40ListE40SE40IteratorE40FE40IteratorE23(struct godot::List::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:160:3
new (__claw_this_) godot::List::Iterator();
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node9get_indexEb(godot::Node* __claw_this_, bool include_internal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:172:10
return __claw_this_->get_index(include_internal);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWint1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedInt64Array_claw_dtor(godot::TypedArray<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:112:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIxE5storeExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0godotWVariant1WgodotWVariant1() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<godot::Variant>,godot::Variant>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_set_indexed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:67:50

return godot::internal::gdextension_interface_variant_set_indexed;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Rehash_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return alignof(std::__detail::_Rehash_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0unsignedWshort11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<unsigned short>>);
}
}

__CLAW_API int __claw__ZZ6dysizeE6(int __year) {
// /usr/include/time.h:272:12
return dysize(__year);
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWunsignedWlongR1() {
return sizeof(godot::GetTypeInfo<const unsigned long&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261wE23v_claw_ctor(godot::GetTypeInfo<const char32&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
new (__claw_this_) godot::GetTypeInfo<const char32&>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_script_error(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:55:49

godot::internal::gdextension_interface_print_script_error = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(std::locale* __claw_this_, const std::string* __s) {
// /usr/include/c++/13/bits/locale_classes.h:167:5
new (__claw_this_) std::locale(*__s);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D19get_global_positionEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:93:10
new (__claw_result_) godot::Vector3(__claw_this_->get_global_position());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPlane_normal(struct godot::Plane* __claw_this_, struct godot::Vector3* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:41:21

__claw_this_->normal = *__claw_value_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWVector211() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot7ClassDB16get_parent_classERKNS_10StringNameE(godot::StringName* __claw_result_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::StringName(godot::ClassDB::get_parent_class(*_class));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat32ArrayWIterator() {
return sizeof(godot::PackedFloat32Array::Iterator);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWHorizontalAlignment1() {
return alignof(godot::PtrToArg<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot7VariantcvlEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:218:2
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API enum godot::PropertyHint __claw__ZN5godot8PtrToArgINS_12PropertyHintEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
return godot::PtrToArg<godot::PropertyHint>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::BitField<godot::PropertyUsageFlags>* __claw__ZN5godot13VariantCasterINS_8BitFieldINS_18PropertyUsageFlagsEEEE4castERKNS_7VariantE(godot::BitField<godot::PropertyUsageFlags>* __claw_result_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::BitField<godot::PropertyUsageFlags>(godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>::cast(*p_variant));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_18PropertyUsageFlagsEE10clear_flagES1_(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_, const enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIKNS_15KeyModifierMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}
}

namespace godot {
__CLAW_API struct godot::_GlobalNil* __claw_get_godotW_GlobalNil_left(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

return (struct godot::_GlobalNil*)__claw_this_->left;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWStringNameR1() {
return sizeof(godot::GetTypeInfo<const godot::StringName&>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_get_method_bind(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:177:53

godot::internal::gdextension_interface_classdb_get_method_bind = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Object19property_can_revertERKNS_10StringNameE(godot::Object* __claw_this_, const godot::StringName* property) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:74:7
return __claw_this_->property_can_revert(*property);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40ClockDirection_claw_ctor(godot::VariantCaster<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::VariantCaster<godot::ClockDirection>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ColorE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Color>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Color>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23cE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array11operatornotEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:129:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot18GDExtensionBinding10InitObject19register_terminatorEPFvNS_25ModuleInitializationLevelEE(godot::GDExtensionBinding::InitObject* __claw_this_, godot::GDExtensionBinding::Callback p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:241:8
__claw_this_->register_terminator(p_init);
}
}

namespace godot {
__CLAW_API enum godot::Projection::Planes __claw__ZN5godot8PtrToArgINS_10Projection6PlanesEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
return godot::PtrToArg<godot::Projection::Planes>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40_GlobalNilClass_claw_ctor(struct godot::_GlobalNilClass* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:211:8
new (__claw_this_) godot::_GlobalNilClass();
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot5Color16find_named_colorERKNS_6StringE(const godot::String* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:195:13
return godot::Color::find_named_color(*p_name);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMIDIMessageR1() {
return sizeof(godot::GetTypeInfo<godot::MIDIMessage&>);
}
}

namespace godot {
__CLAW_API const char* __claw__ZN5godot8PtrToArgIPKcE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
return (const char*) godot::PtrToArg<const char*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWClassDBWClassInfo() {
return alignof(godot::ClassDB::ClassInfo);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev() {
return sizeof(std::__new_allocator<std::__detail::_Hash_node_base*>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_6Node3DEE8callbackEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:128:14
godot::internal::EngineClassRegistration<godot::Node3D>::callback();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64ArrayeqERKNS_7VariantE(godot::PackedFloat64Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:127:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CallableE40SE40_MethodBindings_claw_dtor(struct godot::Callable::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBitField0godotWPropertyUsageFlags11() {
return sizeof(godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC1EOS7_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1942:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>(std::move(*arg0));
}
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7Variant18can_convert_strictENS0_4TypeES1_(enum godot::Variant::Type from, enum godot::Variant::Type to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:332:14
return godot::Variant::can_convert_strict(from, to);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE11bucket_sizeEm(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n) {
// /usr/include/c++/13/bits/unordered_map.h:1029:7
return __claw_this_->bucket_size(__n);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedInt32Array_claw_ctor(godot::PtrToArg<const godot::PackedInt32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
new (__claw_this_) godot::PtrToArg<const godot::PackedInt32Array&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedInt32ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedInt32Array&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godotmlEdRKNS_7Vector4E(struct godot::Vector4* __claw_result_, const double p_scalar, const struct godot::Vector4* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:297:24
new (__claw_result_) godot::Vector4(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIwSt11char_traitsIwEEC1ERKS2_(std::basic_string_view<wchar_t>* __claw_this_, const std::basic_string_view<wchar_t>* arg0) {
// /usr/include/c++/13/string_view:136:17
new (__claw_this_) std::basic_string_view<wchar_t>(*arg0);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot15PackedByteArray10decode_varElb(godot::Variant* __claw_result_, godot::PackedByteArray* __claw_this_, int64_t byte_offset, bool allow_objects) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:189:10
new (__claw_result_) godot::Variant(__claw_this_->decode_var(byte_offset, allow_objects));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNode3DWRotationEditModeR1() {
return alignof(godot::GetTypeInfo<godot::Node3D::RotationEditMode&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWError1() {
return alignof(godot::VariantCaster<godot::Error>);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEmIEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot17PackedStringArray8IteratordeEv(struct godot::PackedStringArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:143:26
return (godot::String*) (&__claw_this_->operator*());
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo111() {
return alignof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant9get_keyedERKS0_Rb(godot::Variant* __claw_result_, godot::Variant* __claw_this_, const godot::Variant* key, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:309:10
new (__claw_result_) godot::Variant(__claw_this_->get_keyed(*key, *r_valid));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedColorArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedColorArray&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23b_claw_dtor(godot::PtrToArg<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_8Vector4iE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector4i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:412:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_placeholder_script_instance_update() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:175:64

return godot::internal::gdextension_interface_placeholder_script_instance_update;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2WAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2::Axis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWJoyButton1() {
return alignof(godot::GetTypeInfo<godot::JoyButton>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKS5_RKS7_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>* __l, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::MethodBind*>::key_equal* __eql, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:234:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*__l, __n, *__hf, *__eql, *__a);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hash_code_baseIiSt4pairIKiiENS_10_Select1stESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC2Ev() {
return sizeof(std::__detail::_Hash_code_base<int,std::pair<const int,int>,std::__detail::_Select1st,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Select1st>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName12get_basenameEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:308:9
new (__claw_result_) godot::String(__claw_this_->get_basename());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color9lightenedEf(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, float p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:123:23
new (__claw_result_) godot::Color(__claw_this_->lightened(p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector415is_equal_approxERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:82:7
return __claw_this_->is_equal_approx(*p_vec4);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWHorizontalAlignmentR1() {
return alignof(godot::GetTypeInfo<godot::HorizontalAlignment&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldINS_15MouseButtonMaskEEC2El() {
return alignof(godot::BitField<godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray7reverseEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:160:7
__claw_this_->reverse();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEaSEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15MouseButtonMaskEEC1El(godot::BitField<godot::MouseButtonMask&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::MouseButtonMask&>(p_value);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw_get_godotWTransform3D_origin(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:42:21

return (struct godot::Vector3*)&__claw_this_->origin;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3WAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3::Axis&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedColorArray_claw_dtor(godot::PtrToArg<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBindingE40SE40InitObject_claw_dtor(godot::GDExtensionBinding::InitObject* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:231:8
__claw_this_->~InitObject();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIcEC2Ev() {
return alignof(std::allocator<char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEpLEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AI_claw_dtor(godot::PtrToArg<int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEoREx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWKeyModifierMask1() {
return sizeof(godot::GetTypeInfo<godot::KeyModifierMask>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4WAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4::Axis&>);
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZNK5godot18PackedFloat32Array5sliceEll(godot::PackedFloat32Array* __claw_result_, godot::PackedFloat32Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:119:21
new (__claw_result_) godot::PackedFloat32Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23bE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<bool>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayC1EOS0_(godot::PackedByteArray* __claw_this_, godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:146:2
new (__claw_this_) godot::PackedByteArray(std::move(*other));
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIDsEC1EDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<char16>(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_16PackedInt64ArrayE(godot::Array* __claw_this_, const godot::PackedInt64Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:152:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32ArrayeqERKS0_(godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:130:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaternionngEv(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:111:28
new (__claw_result_) godot::Quaternion(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_5Rect2EEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Rect2>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedInt32ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedInt32Array>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat64Array6insertEld(godot::PackedFloat64Array* __claw_this_, int64_t at_index, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:113:10
return __claw_this_->insert(at_index, value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWTransform2D11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40OrientationE23v_claw_ctor(godot::GetTypeInfo<godot::Orientation&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<godot::Orientation&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePath11operatornotEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:107:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRKNS_15MouseButtonMaskEEC2El() {
return alignof(godot::BitField<const godot::MouseButtonMask&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEmmEi(std::__atomic_base<long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9_() {
return sizeof(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedFloat32Array_claw_dtor(godot::TypedArray<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:113:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_5ColorE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Color* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:385:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot17PackedStringArray6insertElRKNS_6StringE(godot::PackedStringArray* __claw_this_, int64_t at_index, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:115:10
return __claw_this_->insert(at_index, *value);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis6scaledERKNS_7Vector3E(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:100:8
new (__claw_result_) godot::Basis(__claw_this_->scaled(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godotmlEfRKNS_7Vector2E(struct godot::Vector2* __claw_result_, const float p_scalar, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:303:24
new (__claw_result_) godot::Vector2(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB22_register_engine_classERKNS_10StringNameEPKi(const godot::StringName* p_name, const int* p_callbacks) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:153:29
godot::ClassDB::_register_engine_class(*p_name, p_callbacks);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWshortR1() {
return alignof(godot::GetTypeInfo<const short&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton26class_has_integer_constantERKNS_10StringNameES3_(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:73:7
return __claw_this_->class_has_integer_constant(*_class, *name);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::DuplicateFlags>();
}
}

namespace godot {
__CLAW_API const float* __claw__ZN5godot8PtrToArgIPKfE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
return (const float*) godot::PtrToArg<const float*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D19is_set_as_top_levelEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:103:7
return __claw_this_->is_set_as_top_level();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIDsEC2Ev() {
return alignof(std::__new_allocator<char16>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWOrientation1() {
return sizeof(godot::GetTypeInfo<godot::Orientation>);
}
}

namespace godot {
__CLAW_API const double* __claw__ZN5godot8PtrToArgIPKdE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
return (const double*) godot::PtrToArg<const double*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D6scaledERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:90:14
new (__claw_result_) godot::Transform2D(__claw_this_->scaled(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName12pad_decimalsEl(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t digits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:348:9
new (__claw_result_) godot::String(__claw_this_->pad_decimals(digits));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPlaneR1() {
return alignof(godot::PtrToArg<const godot::Plane&>);
}
}

namespace godot {
__CLAW_API const bool* __claw__ZN5godot8PtrToArgIPKbE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
return (const bool*) godot::PtrToArg<const bool*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ListE3EE23E24E40NE40godotE40SE40PropertyInfoE23E24E40NE40godotE40SE40DefaultAllocatorE40SE40Iterator_claw_dtor(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:142:9
__claw_this_->~Iterator();
}
}

namespace godot {
__CLAW_API const int8_t* __claw__ZN5godot8PtrToArgIPKaE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
return (const int8_t*) godot::PtrToArg<const char*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEaSEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4i3minERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_vector4i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:76:11
new (__claw_result_) godot::Vector4i(__claw_this_->min(*p_vector4i));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot16PackedColorArray8IteratorptEv(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:146:25
return (struct godot::Color*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedVector3Array6appendERKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:114:7
return __claw_this_->append(*value);
}
}

namespace godot {
__CLAW_API const int16_t* __claw__ZN5godot8PtrToArgIPKsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
return (const int16_t*) godot::PtrToArg<const short*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_15PackedByteArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:430:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot6Memory14realloc_staticEPvmb(void* p_memory, size_t p_bytes, bool p_pad_align) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:81:15
return (void*) godot::Memory::realloc_static(p_memory, p_bytes, p_pad_align);
}
}

namespace godot {
__CLAW_API const uint64_t* __claw__ZN5godot8PtrToArgIPKmE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
return (const uint64_t*) godot::PtrToArg<const unsigned long*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API const int64_t* __claw__ZN5godot8PtrToArgIPKlE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
return (const int64_t*) godot::PtrToArg<const long*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIaEC1Ev(godot::TypedArray<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:80:1
new (__claw_this_) godot::TypedArray<char>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMIDIMessageR1() {
return alignof(godot::GetTypeInfo<godot::MIDIMessage&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIwEC2Ev() {
return sizeof(std::__atomic_base<wchar_t>);
}
}

namespace godot {
__CLAW_API const uint32_t* __claw__ZN5godot8PtrToArgIPKjE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
return (const uint32_t*) godot::PtrToArg<const unsigned int*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godotmlEfRKNS_7Vector3E(struct godot::Vector3* __claw_result_, const float p_scalar, const struct godot::Vector3* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:371:24
new (__claw_result_) godot::Vector3(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZN5godot8PtrToArgIPKiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
return (const int32_t*) godot::PtrToArg<const int*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt17basic_string_viewIcSt11char_traitsIcEEC2Ev() {
return alignof(std::basic_string_view<char>);
}
}

namespace godot {
__CLAW_API const uint8_t* __claw__ZN5godot8PtrToArgIPKhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
return (const uint8_t*) godot::PtrToArg<const unsigned char*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEmmEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZN5godot8PtrToArgIPKwE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
return (const wchar_t*) godot::PtrToArg<const wchar_t*>::convert(p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEoREDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_float64_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:140:69

return godot::internal::gdextension_interface_packed_float64_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32ArrayneERKS0_(godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:131:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API const uint16_t* __claw__ZN5godot8PtrToArgIPKtE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
return (const uint16_t*) godot::PtrToArg<const unsigned short*>::convert(p_ptr);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math5atan2Edd(double p_y, double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:371:15
return godot::Math::atan2(p_y, p_x);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEEeqEPKS1_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::InputEvent* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:74:22
return __claw_this_->operator==(p_ptr);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC2Ev() {
return sizeof(std::__detail::_Node_iterator<std::pair<const int,int>,false,false>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector2WAxis1() {
return alignof(godot::VariantCaster<godot::Vector2::Axis>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEoREw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__true_type() {
return sizeof(std::__true_type);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_color_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:135:62

return godot::internal::gdextension_interface_packed_color_array_operator_index;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type() {
return sizeof(std::common_type);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40ctype_base_claw_ctor(struct std::ctype_base* __claw_this_) {
// /usr/include/x86_64-linux-gnu/c++/13/bits/ctype_base.h:41:10
new (__claw_this_) std::ctype_base();
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D12scaled_localERKNS_7Vector3E(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:63:14
new (__claw_result_) godot::Transform3D(__claw_this_->scaled_local(*p_scale));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseItE21compare_exchange_weakERttSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ERKS4_mmRKS3_(std::basic_string<wchar_t>* __claw_this_, const std::basic_string<wchar_t>* __str, std::basic_string<wchar_t>::size_type __pos, std::basic_string<wchar_t>::size_type __n, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:599:7
new (__claw_this_) std::basic_string<wchar_t>(*__str, __pos, __n, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedInt64ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedInt64Array>();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godotmlEfRKNS_7Vector4E(struct godot::Vector4* __claw_result_, const float p_scalar, const struct godot::Vector4* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:293:24
new (__claw_result_) godot::Vector4(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZN5godot8PtrToArgIRKNS_11Transform3DEE7convertEPKv(struct godot::Transform3D* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
new (__claw_result_) godot::Transform3D(godot::PtrToArg<const godot::Transform3D&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E2AE24E40NE40godotE40SE40MethodBind_claw_dtor(std::__type_identity<godot::MethodBind*>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBindingE40SE40InitDataList_claw_ctor(godot::GDExtensionBinding::InitDataList* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:212:8
new (__claw_this_) godot::GDExtensionBinding::InitDataList();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray11operatornotEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:209:7
return __claw_this_->operatornot();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWctype_base() {
return sizeof(std::ctype_base);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE8exchangeElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector4() {
return sizeof(godot::Vector4);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1ERKNS_10QuaternionE(struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:229:2
new (__claw_this_) godot::Basis(*p_quaternion);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RID11operatornotEv(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:81:7
return __claw_this_->operatornot();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIPNSt8__detail15_Hash_node_baseEED1Ev(std::allocator<std::__detail::_Hash_node_base*>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_stringify(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:80:49

godot::internal::gdextension_interface_variant_stringify = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4iWAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector4i::Axis&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10QuaternionEEaSERKNS_5ArrayE(godot::TypedArray<godot::Quaternion>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:98:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE13insert_beforeEPNS3_7ElementERKS1_(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_element, const struct godot::PropertyInfo* p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:384:11
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->insert_before(p_element, *p_value);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEEneEPKS1_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::InputEvent* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:77:22
return __claw_this_->operator!=(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1S_claw_dtor(godot::PtrToArg<const short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE8exchangeEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Rect2E23v_claw_ctor(godot::GetTypeInfo<const godot::Rect2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
new (__claw_this_) godot::GetTypeInfo<const godot::Rect2&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
new (__claw_this_) godot::GetTypeInfo<godot::Array>();
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot4Node23get_parent_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:2
return (godot::StringName*) (&godot::Node::get_parent_class_static());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector2() {
return sizeof(godot::Vector2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ai_claw_ctor(godot::PtrToArg<unsigned int*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
new (__claw_this_) godot::PtrToArg<unsigned int*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEC1EPS1_(godot::Ref<godot::Node3DGizmo>* __claw_this_, godot::Node3DGizmo* p_reference) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:178:2
new (__claw_this_) godot::Ref<godot::Node3DGizmo>(p_reference);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Callable_claw_dtor(godot::PtrToArg<const godot::Callable&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray8IteratorC1Ev(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:238:3
new (__claw_this_) godot::PackedByteArray::Iterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadMessagesR1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40InlineAlignmentE23v_claw_ctor(godot::GetTypeInfo<const godot::InlineAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<const godot::InlineAlignment&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNKSt13__atomic_baseIaEcvaEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator signed char();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVector3() {
return sizeof(godot::Vector3);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWPlane1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Plane>&>);
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot6Object31_gde_binding_reference_callbackEPvS1_i() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
return godot::Object::_gde_binding_reference_callback();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5atan2Eff(float p_y, float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:374:14
return godot::Math::atan2(p_y, p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWInlineAlignmentR1() {
return alignof(godot::GetTypeInfo<const godot::InlineAlignment&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Quaternion9normalizeEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:60:7
__claw_this_->normalize();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWBitField0godotWMethodFlags11() {
return sizeof(godot::VariantCaster<godot::BitField<godot::MethodFlags>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5Rect2EEC1ERKNS_7VariantE(godot::TypedArray<godot::Rect2>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:92:1
new (__claw_this_) godot::TypedArray<godot::Rect2>(*p_variant);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray21get_string_from_utf32Ev(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:171:9
new (__claw_result_) godot::String(__claw_this_->get_string_from_utf32());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Plane_claw_ctor(godot::PtrToArg<const godot::Plane&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
new (__claw_this_) godot::PtrToArg<const godot::Plane&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_5Rect2EE6encodeES1_Pv(struct godot::Rect2* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
godot::PtrToArg<const godot::Rect2&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWTransform3D1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Transform3D>&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godotmlEdRKNS_7Vector2E(struct godot::Vector2* __claw_result_, const double p_scalar, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:307:24
new (__claw_result_) godot::Vector2(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__ptr_traits_ptr_to0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1PWstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindWP1Wfalse11() {
return alignof(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_9JoyButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::JoyButton>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array3hasEl(godot::PackedInt64Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:117:7
return __claw_this_->has(value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40BasisE23v_claw_ctor(godot::GetTypeInfo<const godot::Basis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
new (__claw_this_) godot::GetTypeInfo<const godot::Basis&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt27_Enable_default_constructorILb1ENSt8__detail15_Hash_node_baseEEC2Ev() {
return sizeof(std::_Enable_default_constructor<true,std::__detail::_Hash_node_base>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessMode_claw_ctor(godot::VariantCaster<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_this_) godot::VariantCaster<godot::Node::ProcessMode>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Array>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Array>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40JoyAxisE23v_claw_ctor(godot::GetTypeInfo<godot::JoyAxis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::GetTypeInfo<godot::JoyAxis&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__is_charE3EE23C_claw_dtor(std::__is_char<char>* __claw_this_) {
// /usr/include/c++/13/bits/cpp_type_traits.h:407:12
__claw_this_->~__is_char();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedInt32Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessThreadGroup>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node25set_deferred_thread_groupERKNS_10StringNameERKNS_7VariantE(godot::Node* __claw_this_, const godot::StringName* property, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:265:7
__claw_this_->set_deferred_thread_group(*property, *value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWunsignedWchar1() {
return alignof(std::__hash_base<unsigned long,unsigned char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE8fetch_orEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_set_instance() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:164:50

return godot::internal::gdextension_interface_object_set_instance;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB16class_has_signalERKNS_10StringNameES3_(const godot::StringName* _class, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_has_signal(*_class, *signal);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKtE6encodeEtPv(uint16_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
godot::PtrToArg<const unsigned short&>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWcommon_type0longWdouble1() {
return sizeof(std::common_type<long double>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEmmEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40JoyButtonE23v_claw_dtor(godot::GetTypeInfo<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseItE23compare_exchange_strongERttSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node21is_physics_processingEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:183:7
return __claw_this_->is_physics_processing();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEaSERKS2_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Ref<godot::Node3DGizmo>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:107:7
__claw_this_->operator=(*p_from);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE9fetch_subEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot8NodePath25get_concatenated_subnamesEv(godot::StringName* __claw_result_, godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:102:13
new (__claw_result_) godot::StringName(__claw_this_->get_concatenated_subnames());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godotmlEdRKNS_7Vector3E(struct godot::Vector3* __claw_result_, const double p_scalar, const struct godot::Vector3* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:375:24
new (__claw_result_) godot::Vector3(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot17VariantComparator7compareERKNS_7VariantES3_(const godot::Variant* p_lhs, const godot::Variant* p_rhs) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:342:29
return godot::VariantComparator::compare(*p_lhs, *p_rhs);
}
}

namespace godot {
__CLAW_API real_t __claw_get_godotWPlane_d(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:41:21

return __claw_this_->d;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditMode_claw_dtor(godot::PtrToArg<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40SideE23v_claw_dtor(godot::GetTypeInfo<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector33maxERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_vector3) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:85:10
new (__claw_result_) godot::Vector3(__claw_this_->max(*p_vector3));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIKNS_15MouseButtonMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API enum godot::JoyAxis __claw__ZN5godot8PtrToArgINS_7JoyAxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
return godot::PtrToArg<godot::JoyAxis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String13to_camel_caseEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:305:9
new (__claw_result_) godot::String(__claw_this_->to_camel_case());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIiE5storeEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15MouseButtonMaskEE10clear_flagES2_(godot::BitField<godot::MouseButtonMask&>* __claw_this_, enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40RIDE40SE40_MethodBindings_claw_ctor(struct godot::RID::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:50:16
new (__claw_this_) godot::RID::_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaterniondVERKf(struct godot::Quaternion* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:108:22
__claw_this_->operator/=(*s);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10QuaternionEE6encodeES1_Pv(struct godot::Quaternion* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
godot::PtrToArg<godot::Quaternion>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2E24E40NE40stdE40NE40chronoE40SE40durationE3EE23LE23E24E40NE40stdE40SE40ratioE3EE23VL1E23VL1000000000S0__claw_ctor(std::common_type<std::chrono::duration<long,std::ratio<1,1000000000>>,std::chrono::duration<long,std::ratio<1,1000000000>>>* __claw_this_) {
// /usr/include/c++/13/bits/chrono.h:112:12
new (__claw_this_) std::common_type<std::chrono::duration<long,std::ratio<1,1000000000>>,std::chrono::duration<long,std::ratio<1,1000000000>>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWKey1() {
return alignof(godot::VariantCaster<godot::Key>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRKNS_4Node21ProcessThreadMessagesEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedVector2Array6appendERKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:114:7
return __claw_this_->append(*value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWforward_iterator_tag() {
return sizeof(std::forward_iterator_tag);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_getter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:96:52

return godot::internal::gdextension_interface_variant_get_ptr_getter;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot18PackedVector3Array8IteratorptEv(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:149:27
return (struct godot::Vector3*) __claw_this_->operator->();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2E40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIsE5storeEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEmmEi(std::__atomic_base<char32>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWAABB_position(struct godot::AABB* __claw_this_, struct godot::Vector3* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:46:21

__claw_this_->position = *__claw_value_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array13ConstIteratorC1EPKNS_7Vector2E(struct godot::PackedVector2Array::ConstIterator* __claw_this_, const struct godot::Vector2* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:187:3
new (__claw_this_) godot::PackedVector2Array::ConstIterator(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot17PackedStringArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedStringArray);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math7snappedEdd(double p_value, double p_step) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:791:15
return godot::Math::snapped(p_value, p_step);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIyE23compare_exchange_strongERyySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZN5godot13VariantHasher4hashERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:338:33
return godot::VariantHasher::hash(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23L_claw_dtor(godot::PtrToArg<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIaEC1ERKNS_7VariantE(godot::TypedArray<char>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:80:1
new (__claw_this_) godot::TypedArray<char>(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::_GlobalNil* __claw_get_godotW_GlobalNil_parent(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

return (struct godot::_GlobalNil*)__claw_this_->parent;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64ArrayneERKS0_(godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:131:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo111() {
return alignof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayItEC1Ev(godot::TypedArray<unsigned short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:81:1
new (__claw_this_) godot::TypedArray<unsigned short>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40DefaultAllocator_claw_ctor(godot::DefaultAllocator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:131:7
new (__claw_this_) godot::DefaultAllocator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__erased_type() {
return alignof(std::__erased_type);
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB4growEf(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_, real_t p_by) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:95:7
new (__claw_result_) godot::AABB(__claw_this_->grow(p_by));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb0EEEEC2ERKS9_RKS7_RKS3_() {
return sizeof(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray13ConstIteratorneERKS1_(struct godot::PackedByteArray::ConstIterator* __claw_this_, const struct godot::PackedByteArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:260:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE9fetch_subExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis12scaled_localERKNS_7Vector3E(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:103:8
new (__claw_result_) godot::Basis(__claw_this_->scaled_local(*p_scale));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE9fetch_xorEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__atomic_flag_base_claw_ctor(struct std::__atomic_flag_base* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:200:10
new (__claw_this_) std::__atomic_flag_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_u64Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:201:7
__claw_this_->encode_u64(byte_offset, value);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIcE23compare_exchange_strongERccSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API godot::CowData<wchar_t>::Size __claw__ZNK5godot7CowDataIwE5rfindERKwl(godot::CowData<wchar_t>* __claw_this_, const wchar_t* p_val, godot::CowData<wchar_t>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:243:7
return __claw_this_->rfind(*p_val, p_from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWSide1() {
return alignof(godot::PtrToArg<godot::Side>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_ctor(godot::GetTypeInfo<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
new (__claw_this_) godot::GetTypeInfo<godot::Transform2D>();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant8iter_getERKS0_Rb(godot::Variant* __claw_result_, godot::Variant* __claw_this_, const godot::Variant* r_iter, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:314:10
new (__claw_result_) godot::Variant(__claw_this_->iter_get(*r_iter, *r_valid));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Node3D_claw_dtor(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:55:7
__claw_this_->~Node3D();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_hash_compare() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:77:51

return godot::internal::gdextension_interface_variant_hash_compare;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayneERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:211:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE231I_claw_ctor(std::__type_identity<const int>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<const int>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot18PackedVector3ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedVector3Array);
}
}

namespace std {
__CLAW_API std::__new_allocator<std::_Rb_tree_node<godot::StringName>>::size_type __claw__ZNKSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEE8max_sizeEv(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot7CowDataIDsE6insertElRKDs(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_pos, const char16* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:231:8
return __claw_this_->insert(p_pos, *p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_6SignalEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Signal>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWClockDirection1() {
return alignof(godot::GetTypeInfo<godot::ClockDirection>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEaNEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZN5godot18PackedVector2Array9duplicateEv(godot::PackedVector2Array* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:127:21
new (__claw_result_) godot::PackedVector2Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot18PackedVector2Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:124:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE9fetch_xorEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE9fetch_subEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_set_godotW_GlobalNil_parent(struct godot::_GlobalNil* __claw_this_, struct godot::_GlobalNil* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

__claw_this_->parent = __claw_value_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEED1Ev(std::basic_string<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:803:7
__claw_this_->~basic_string();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIjE21compare_exchange_weakERjjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayleERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:213:7
return __claw_this_->operator<=(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261r_claw_dtor(godot::PtrToArg<const char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKaE10encode_argEa(int8_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
return godot::PtrToArg<const char&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIhEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4asinEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:350:15
return godot::Math::asin(p_x);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBasis1() {
return sizeof(godot::GetTypeInfo<godot::Basis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedVector2ArrayWConstIterator() {
return alignof(godot::PackedVector2Array::ConstIterator);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_base() {
return alignof(std::__allocator_traits_base);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt64Array7bsearchElb(godot::PackedInt64Array* __claw_this_, int64_t value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:122:10
return __claw_this_->bsearch(value, before);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Plane9normalizeEv(struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:48:7
__claw_this_->normalize();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4asinEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:353:14
return godot::Math::asin(p_x);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedColorArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedColorArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:57:16
new (__claw_this_) godot::PackedColorArray::_MethodBindings();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot18PackedVector2Array4ptrwEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:143:11
return (struct godot::Vector2*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIlE6encodeElPv(int64_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
godot::PtrToArg<long>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::VariantCaster<godot::BitField<godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API char32 __claw__ZNK5godot9CharProxyIDiEcvDiEv(godot::CharProxy<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:62:17
return __claw_this_->operator char32_t();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZN5godot15PackedByteArrayaSEOS0_(godot::PackedByteArray* __claw_this_, godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:214:19
return (godot::PackedByteArray*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColordvEf(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, float p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:90:8
new (__claw_result_) godot::Color(__claw_this_->operator/(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Vector2::Axis __claw__ZN5godot8PtrToArgINS_7Vector24AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
return godot::PtrToArg<godot::Vector2::Axis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API enum godot::Vector4::Axis __claw__ZN5godot8PtrToArgINS_7Vector44AxisEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
return godot::PtrToArg<godot::Vector4::Axis>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot16PackedInt32Array13ConstIteratordeEv(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:166:33
return (int32_t*) (&__claw_this_->operator*());
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEC2Ev() {
return sizeof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWallocator0godotWPropertyInfo11() {
return sizeof(std::__type_identity<std::allocator<godot::PropertyInfo>>);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZNK5godot4Node8get_pathEv(godot::NodePath* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:163:11
new (__claw_result_) godot::NodePath(__claw_this_->get_path());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEaNEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayeqERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:210:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64ArrayeqERKS0_(godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:130:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE13postdecrementEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:89:20
return __claw_this_->postdecrement();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWAABBR1() {
return alignof(godot::GetTypeInfo<const godot::AABB&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray13ConstIteratoreqERKS1_(struct godot::PackedByteArray::ConstIterator* __claw_this_, const struct godot::PackedByteArray::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:259:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE9fetch_addEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE9fetch_addEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArraygeERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:215:7
return __claw_this_->operator>=(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0intP1() {
return alignof(godot::PtrToArg<int*>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName5eraseEll(godot::String* __claw_result_, godot::StringName* __claw_this_, int64_t position, int64_t chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:290:9
new (__claw_result_) godot::String(__claw_this_->erase(position, chars));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE9fetch_subEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Node_claw_dtor(godot::TypedArray<godot::Node>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:40:7
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWTransform2D() {
return sizeof(godot::Transform2D);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWProjectionWPlanesR1() {
return sizeof(godot::GetTypeInfo<godot::Projection::Planes&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWTransform3D() {
return sizeof(godot::Transform3D);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array4hashEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:164:10
return __claw_this_->hash();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE8exchangeEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE9fetch_andEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName9path_joinERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* file) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:309:9
new (__claw_result_) godot::String(__claw_this_->path_join(*file));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0char32P1() {
return alignof(godot::PtrToArg<char32*>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEE8has_flagES4_(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_, const enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Projection_claw_ctor(godot::PtrToArg<const godot::Projection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
new (__claw_this_) godot::PtrToArg<const godot::Projection&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40RIDE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::RID>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:387:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Transform3D>>();
}
}

namespace godot {
__CLAW_API uint8_t** __claw__ZN5godot8PtrToArgIPPhE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
return (uint8_t**) godot::PtrToArg<unsigned char**>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ArrayEEC1Ev(godot::TypedArray<godot::Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:109:1
new (__claw_this_) godot::TypedArray<godot::Array>();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_6ObjectEELb0EEEEC1ERKS9_(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_, const std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedFloat32Array_claw_ctor(godot::PtrToArg<const godot::PackedFloat32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
new (__claw_this_) godot::PtrToArg<const godot::PackedFloat32Array&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt17basic_string_viewIcSt11char_traitsIcEEC2Ev() {
return sizeof(std::basic_string_view<char>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWwchar_t1() {
return alignof(std::__hash_base<unsigned long,wchar_t>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot11CharStringTIwEC2Ev() {
return sizeof(godot::CharStringT<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector312limit_lengthEf(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const real_t p_len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:96:10
new (__claw_result_) godot::Vector3(__claw_this_->limit_length(p_len));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot10MethodBind20has_default_argumentEi(godot::Variant* __claw_result_, godot::MethodBind* __claw_this_, int p_arg) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:80:25
new (__claw_result_) godot::Variant(__claw_this_->has_default_argument(p_arg));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40CornerE23v_claw_ctor(godot::GetTypeInfo<const godot::Corner>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<const godot::Corner>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PlaneE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Plane>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:383:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Rehash_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWintegral_constant0boolWtrue11() {
return sizeof(std::__detail::_Rehash_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot15PackedByteArray11decode_halfEl(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:185:9
return __claw_this_->decode_half(byte_offset);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot18PackedFloat64ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedFloat64Array);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW__detailW_Node_iterator0stdWpair0constWintWint1WfalseWfalse11() {
return sizeof(std::__type_identity<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIcE11eq_int_typeERKiS2_(const std::char_traits<char>::int_type* __c1, const std::char_traits<char>::int_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:461:7
return std::char_traits<char>::eq_int_type(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API float* __claw__ZNK5godot18PackedFloat32Array8IteratordeEv(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:141:25
return (float*) (&__claw_this_->operator*());
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseImEC2Ev() {
return alignof(std::__atomic_base<unsigned long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIaEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<char>);
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt5ctypeIcE5widenEPKcS2_Pc(std::ctype<char>* __claw_this_, const char* __lo, const char* __hi, std::ctype<char>::char_type* __to) {
// /usr/include/c++/13/bits/locale_facets.h:907:7
return (const char*) __claw_this_->widen(__lo, __hi, __to);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIaE21compare_exchange_weakERaaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWClockDirection1() {
return sizeof(godot::PtrToArg<godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedByteArrayWConstIterator() {
return alignof(godot::PackedByteArray::ConstIterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2C1Eff(struct godot::Vector2* __claw_this_, const real_t p_x, const real_t p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:179:17
new (__claw_this_) godot::Vector2(p_x, p_y);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector3Array4sizeEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:110:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Transform2D_claw_dtor(godot::PtrToArg<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_iter_next() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:73:48

return godot::internal::gdextension_interface_variant_iter_next;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt4pairIKiiEC1EOS1_(std::pair<const int,int>* __claw_this_, std::pair<const int,int>* arg0) {
// /usr/include/c++/13/bits/stl_pair.h:198:17
new (__claw_this_) std::pair<const int,int>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion9get_eulerEv(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:71:10
new (__claw_result_) godot::Vector3(__claw_this_->get_euler());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt4pairIKN5godot10StringNameEPNS0_6ObjectEEEC2Ev() {
return sizeof(std::allocator<std::pair<const godot::StringName,godot::Object*>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessThreadMessages1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math10deg_to_radEf(float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:575:14
return godot::Math::deg_to_rad(p_y);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWError1() {
return sizeof(godot::VariantCaster<godot::Error>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math10deg_to_radEd(double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:572:15
return godot::Math::deg_to_rad(p_y);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayItEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<unsigned short>>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail14_Node_iteratorISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEC2Ev() {
return sizeof(std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane9has_pointERKNS_7Vector3Ef(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_point, real_t p_tolerance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:58:22
return __claw_this_->has_point(*p_point, p_tolerance);
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE9fetch_andEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4_claw_dtor(godot::PtrToArg<godot::Vector4>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMouseButtonR1() {
return sizeof(godot::GetTypeInfo<godot::MouseButton&>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot11Transform2D5tdotyERKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const struct godot::Vector2* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:57:24
return __claw_this_->tdoty(*v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVector4WAxis1() {
return alignof(godot::PtrToArg<godot::Vector4::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector4WAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector4::Axis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNode3DWRotationEditMode1() {
return sizeof(godot::GetTypeInfo<godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEEcvlEv(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWSignalR1() {
return alignof(godot::GetTypeInfo<const godot::Signal&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector3WAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector3::Axis&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArrayeqERKS0_(godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:132:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API godot::Callable* __claw__ZN5godot8internal25create_callable_from_ccmpEPNS_31CallableCustomMethodPointerBaseE(godot::Callable* __claw_result_, godot::CallableCustomMethodPointerBase* p_callable_method_pointer) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_method_pointer.hpp:55:10
new (__claw_result_) godot::Callable(godot::internal::create_callable_from_ccmp(p_callable_method_pointer));
return __claw_result_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2mlERKf(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:134:10
new (__claw_result_) godot::Vector2(__claw_this_->operator*(*rvalue));
return __claw_result_;
}
}

namespace godot {
__CLAW_API uint8_t* __claw__ZNK5godot15PackedByteArray8IteratordeEv(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:221:27
return (uint8_t*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RefINS_11Node3DGizmoEEC2ERKS2_() {
return sizeof(godot::Ref<godot::Node3DGizmo>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0char161Wchar161() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<char16>,char16>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2i12set_positionERKNS_8Vector2iE(struct godot::Rect2i* __claw_this_, const godot::Point2i* p_position) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:47:7
__claw_this_->set_position(*p_position);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String18validate_node_nameEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:347:9
new (__claw_result_) godot::String(__claw_this_->validate_node_name());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection17add_jitter_offsetERKNS_7Vector2E(struct godot::Projection* __claw_this_, const struct godot::Vector2* p_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:130:7
__claw_this_->add_jitter_offset(*p_offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array8IteratorC1Ev(struct godot::PackedInt64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:158:3
new (__claw_this_) godot::PackedInt64Array::Iterator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Node3DGizmoEEC1Ev(godot::TypedArray<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:52:17
new (__claw_this_) godot::TypedArray<godot::Node3DGizmo>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWEulerOrder1() {
return sizeof(godot::VariantCaster<godot::EulerOrder>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2i5clampERKS0_S2_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_min, const struct godot::Vector2i* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:123:11
new (__claw_result_) godot::Vector2i(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharStringTE3EE23q_claw_dtor(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:84:7
__claw_this_->~CharStringT();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot10StringNameEEC2EPKS1_m() {
return alignof(std::initializer_list<godot::StringName>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_int64_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:143:62

godot::internal::gdextension_interface_packed_int64_array_operator_index = __claw_value_;
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_get_class_tag(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:178:51

godot::internal::gdextension_interface_classdb_get_class_tag = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40InlineAlignment_claw_ctor(godot::PtrToArg<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::PtrToArg<godot::InlineAlignment>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40JoyAxisE23v_claw_dtor(godot::GetTypeInfo<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEE10clear_flagES2_(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_, const enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedVector2ArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedVector2Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedVector2Array>();
}
}

namespace godot {
__CLAW_API enum godot::MouseButton __claw__ZN5godot8PtrToArgINS_11MouseButtonEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
return godot::PtrToArg<godot::MouseButton>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWStringW_MethodBindings() {
return alignof(godot::String::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1EOS0_(godot::NodePath* __claw_this_, godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:89:2
new (__claw_this_) godot::NodePath(std::move(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4E23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godotmlElRKNS_7Vector4E(struct godot::Vector4* __claw_result_, const int64_t p_scalar, const struct godot::Vector4* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:305:24
new (__claw_result_) godot::Vector4(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev() {
return sizeof(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ac_claw_dtor(godot::PtrToArg<unsigned char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWCorner1() {
return alignof(godot::PtrToArg<godot::Corner>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0short11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<short>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIcED1Ev(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector2WAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector2::Axis&>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p1D_claw_ctor(std::common_type<long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2299:12
new (__claw_this_) std::common_type<long double>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return sizeof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color8invertedEv(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:98:8
new (__claw_result_) godot::Color(__claw_this_->inverted());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40RefE23(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String15to_ascii_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:366:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_ascii_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector3i1() {
return sizeof(godot::GetTypeInfo<godot::Vector3i>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_type() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:81:47

return godot::internal::gdextension_interface_variant_get_type;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathD1Ev(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:94:2
__claw_this_->~NodePath();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array3anyERKNS_8CallableE(godot::Array* __claw_this_, const godot::Callable* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:196:7
return __claw_this_->any(*method);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::int_type __claw__ZN9__gnu_cxx11char_traitsIwE11to_int_typeERKw(const __gnu_cxx::char_traits<wchar_t>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:166:7
return __gnu_cxx::char_traits<wchar_t>::to_int_type(*__c);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWCorner1() {
return sizeof(godot::GetTypeInfo<const godot::Corner>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection6flip_yEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:135:7
__claw_this_->flip_y();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_orderS2_(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/atomic:153:5
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0bool11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<bool>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEpLEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName10hex_decodeEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:356:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->hex_decode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2iR1() {
return alignof(godot::GetTypeInfo<const godot::Vector2i&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_8Vector2iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_6Rect2iE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Rect2i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:373:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIjE21compare_exchange_weakERjjSt12memory_orderS2_(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEEcvlEv(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedInt32Array_claw_dtor(godot::PtrToArg<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_4AABBE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::AABB* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:381:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot5Array6resizeEl(godot::Array* __claw_this_, int64_t size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:170:10
return __claw_this_->resize(size);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEmIEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArrayneERKS0_(godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:133:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaternionmlERKf(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:112:28
new (__claw_result_) godot::Quaternion(__claw_this_->operator*(*s));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_10StringNameEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::StringName>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6SignalEEaSERKNS_5ArrayE(godot::TypedArray<godot::Signal>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:107:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB9has_pointERKNS_7Vector3E(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:84:22
return __claw_this_->has_point(*p_point);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWJoyButtonR1() {
return sizeof(godot::GetTypeInfo<godot::JoyButton&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godotmlEdRKNS_8Vector2iE(struct godot::Vector2i* __claw_result_, const double p_scalar, const struct godot::Vector2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:149:25
new (__claw_result_) godot::Vector2i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_18PackedFloat64ArrayE(godot::Variant* __claw_this_, const godot::PackedFloat64Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:210:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ArrayEEaSERKS1_(godot::TypedArray<godot::Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:109:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEmmEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEpLEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3E23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWMouseButtonMaskR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEaNEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEmmEi(std::__atomic_base<bool>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godotmlEiRKNS_8Vector3iE(struct godot::Vector3i* __claw_result_, const int32_t p_scalar, const struct godot::Vector3i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:217:25
new (__claw_result_) godot::Vector3i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40DictionaryE23v_claw_ctor(godot::GetTypeInfo<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
new (__claw_this_) godot::GetTypeInfo<godot::Dictionary>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNKSt13__atomic_baseIxE4loadESt12memory_order(std::__atomic_base<long long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Insert<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace std {
__CLAW_API void __claw__ZSt19atomic_signal_fenceSt12memory_order(std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:147:3
std::atomic_signal_fence(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4R1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::BitField<const godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_6CornerEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Corner>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat64Array7bsearchEdb(godot::PackedFloat64Array* __claw_this_, double value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:122:10
return __claw_this_->bsearch(value, before);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0constWint1() {
return alignof(std::__type_identity<const int>);
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::Iterator* __claw__ZN5godot15PackedByteArray8IteratorppEv(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:225:28
return (struct godot::PackedByteArray::Iterator*) (&__claw_this_->operator++());
}
}

namespace std {
__CLAW_API std::set<godot::StringName>::size_type __claw__ZNKSt3setIN5godot10StringNameESt4lessIS1_ESaIS1_EE8max_sizeEv(std::set<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_set.h:426:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIdE6encodeEdPv(double p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
godot::PtrToArg<double>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API const std::ctype<char>::char_type* __claw__ZNKSt5ctypeIcE6narrowEPKcS2_cPc(std::ctype<char>* __claw_this_, const std::ctype<char>::char_type* __lo, const std::ctype<char>::char_type* __hi, char __dfault, char* __to) {
// /usr/include/c++/13/bits/locale_facets.h:972:7
return (const std::ctype<char>::char_type*) __claw_this_->narrow(__lo, __hi, __dfault, __to);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIlEC2Ev() {
return alignof(std::atomic<long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_9JoyButtonEE6encodeES1_Pv(enum godot::JoyButton p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
godot::PtrToArg<godot::JoyButton>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array3hasEl(godot::PackedInt32Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:117:7
return __claw_this_->has(value);
}
}

namespace godot {
__CLAW_API godot::Tween* __claw__ZNK5godot3RefINS_5TweenEEdeEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:91:20
return (godot::Tween*) __claw_this_->operator*();
}
}

namespace std {
__CLAW_API void __claw__ZNSt10error_codeC1EiRKNSt3_V214error_categoryE(std::error_code* __claw_this_, int __v, const std::error_category* __cat) {
// /usr/include/c++/13/system_error:233:5
new (__claw_this_) std::error_code(__v, *__cat);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWAABB1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPDiE6encodeES1_Pv(char32* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
godot::PtrToArg<char32*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray8IteratorC1ERKS1_(struct godot::PackedByteArray::Iterator* __claw_this_, const struct godot::PackedByteArray::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:239:3
new (__claw_this_) godot::PackedByteArray::Iterator(*p_it);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArrayC1Ev(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:103:2
new (__claw_this_) godot::PackedStringArray();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0intP1() {
return sizeof(godot::PtrToArg<int*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array7reverseEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:122:7
__claw_this_->reverse();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node29update_configuration_warningsEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:255:7
__claw_this_->update_configuration_warnings();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEEEC1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWObjectP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EE6resizeEm(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>::size_type __new_size) {
// /usr/include/c++/13/bits/stl_vector.h:1013:7
__claw_this_->resize(__new_size);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant3getERKS0_Pb(godot::Variant* __claw_result_, godot::Variant* __claw_this_, const godot::Variant* key, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:306:10
new (__claw_result_) godot::Variant(__claw_this_->get(*key, r_valid));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2E23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEaSEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3mlEf(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const real_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:163:25
new (__claw_result_) godot::Vector3(__claw_this_->operator*(p_scalar));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE8fetch_orEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40OrientationE23v_claw_dtor(godot::GetTypeInfo<const godot::Orientation&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWList0godotWPropertyInfo1WConstIterator() {
return sizeof(godot::List<godot::PropertyInfo>::ConstIterator);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedInt64Array6appendEl(godot::PackedInt64Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:110:7
return __claw_this_->append(value);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEppEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEeOEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIbEC1Ev(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<bool>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEaSEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_17PackedStringArrayEEC1Ev(godot::TypedArray<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:115:1
new (__claw_this_) godot::TypedArray<godot::PackedStringArray>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_17PackedStringArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedStringArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:115:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIbEC1Eb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<bool>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedColorArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedColorArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::initializer_list<godot::Color>::size_type __claw__ZNKSt16initializer_listIN5godot5ColorEE4sizeEv(std::initializer_list<godot::Color>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API std::vector<godot::PropertyInfo>* __claw_get_godotWMethodInfo_arguments(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return (std::vector<godot::PropertyInfo>*)&__claw_this_->arguments;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWintP1() {
return sizeof(godot::PtrToArg<unsigned int*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16ClassDBSingleton26_gde_binding_free_callbackEPvS1_S1_(void* p_token, void* p_instance, void* p_binding) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
godot::ClassDBSingleton::_gde_binding_free_callback(p_token, p_instance, p_binding);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName9sha1_textEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:314:9
new (__claw_result_) godot::String(__claw_this_->sha1_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldINS_4Node21ProcessThreadMessagesEE8has_flagES2_(godot::BitField<godot::Node::ProcessThreadMessages>* __claw_this_, enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EDn(godot::Variant* __claw_this_, std::nullptr_t* n) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:148:2
new (__claw_this_) godot::Variant(*n);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEppEi(std::__atomic_base<unsigned int>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40char_traitsE3EE23W_claw_ctor(__gnu_cxx::char_traits<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:111:12
new (__claw_this_) __gnu_cxx::char_traits<wchar_t>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8NodePath17get_subname_countEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:98:10
return __claw_this_->get_subname_count();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3iE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWfloat1() {
return sizeof(std::__hash_base<unsigned long,float>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godotmlElRKNS_7Vector2E(struct godot::Vector2* __claw_result_, const int64_t p_scalar, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:315:24
new (__claw_result_) godot::Vector2(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB12deinitializeEi(int p_level) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:194:14
godot::ClassDB::deinitialize(p_level);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0char11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<char>>);
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEixEi(godot::List<godot::PropertyInfo>* __claw_this_, int p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:535:11
return (struct godot::PropertyInfo*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array5clearEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:116:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4i_claw_ctor(godot::PtrToArg<godot::Vector4i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
new (__claw_this_) godot::PtrToArg<godot::Vector4i>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEppEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object17set_block_signalsEb(godot::Object* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:125:7
__claw_this_->set_block_signals(enable);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE6resizeEmw(std::basic_string<wchar_t>* __claw_this_, std::basic_string<wchar_t>::size_type __n, wchar_t __c) {
// /usr/include/c++/13/bits/basic_string.h:1099:7
__claw_this_->resize(__n, __c);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40String_claw_dtor(godot::TypedArray<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:89:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_5PlaneEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Plane>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect225intersects_filled_polygonEPKNS_7Vector2Ei(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_points, int p_point_count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:299:22
return __claw_this_->intersects_filled_polygon(p_points, p_point_count);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEppEi(std::__atomic_base<unsigned char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1ERKSaISt10_List_nodeIS2_EE(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, const std::_List_base<godot::StringName,std::allocator<godot::StringName>>::_Node_alloc_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:541:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Vector2>>();
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot11Transform3D9xform_invERKNS_4AABBE(struct godot::AABB* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:94:22
new (__claw_result_) godot::AABB(__claw_this_->xform_inv(*p_aabb));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedFloat64Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:114:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat64Array>(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godotmlElRKNS_7Vector3E(struct godot::Vector3* __claw_result_, const int64_t p_scalar, const struct godot::Vector3* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:383:24
new (__claw_result_) godot::Vector3(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String10num_uint64Ellb(godot::String* __claw_result_, int64_t number, int64_t base, bool capitalize_hex) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:375:16
new (__claw_result_) godot::String(godot::String::num_uint64(number, base, capitalize_hex));
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZZN5godot7CowDataIcE6resizeElE6(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:218:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40CallableE23v_claw_dtor(godot::GetTypeInfo<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0long1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<long>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEppEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWObjectP11() {
return alignof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::Object*>>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection20set_light_atlas_rectERKNS_5Rect2E(struct godot::Projection* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:75:7
__claw_this_->set_light_atlas_rect(*p_rect);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2ngEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:145:10
new (__claw_result_) godot::Vector2(__claw_this_->operator-());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEppEi(std::__atomic_base<char16>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZN5godot8PtrToArgIRKNS_6Rect2iEE7convertEPKv(struct godot::Rect2i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
new (__claw_result_) godot::Rect2i(godot::PtrToArg<const godot::Rect2i&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4Node14DuplicateFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::DuplicateFlags>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIiE21compare_exchange_weakERiiSt12memory_orderS2_(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWClockDirectionR1() {
return alignof(godot::GetTypeInfo<godot::ClockDirection&>);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot14CallableCustom4hashEv(godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:53:19
return __claw_this_->hash();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEppEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Signal_claw_dtor(godot::PtrToArg<const godot::Signal&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type0stdWchronoWduration0longWstdWratio01W100000000011WstdWchronoWduration0longWstdWratio01W1000000000111() {
return alignof(std::common_type<std::chrono::duration<long,std::ratio<1,1000000000>>,std::chrono::duration<long,std::ratio<1,1000000000>>>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Insert<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWHorizontalAlignment1() {
return sizeof(godot::GetTypeInfo<const godot::HorizontalAlignment>);
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt5ctypeIcE8scan_notEtPKcS2_(std::ctype<char>* __claw_this_, std::ctype_base::mask __m, const char* __lo, const char* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:795:7
return (const char*) __claw_this_->scan_not(__m, __lo, __hi);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWError1() {
return alignof(godot::PtrToArg<godot::Error>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWDictionary1() {
return alignof(godot::GetTypeInfo<godot::Dictionary>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio01W10001() {
return alignof(std::ratio<1,1000>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261cE23v_claw_dtor(godot::GetTypeInfo<const unsigned char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_6SignalEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261l_claw_ctor(godot::PtrToArg<const unsigned long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
new (__claw_this_) godot::PtrToArg<const unsigned long&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEpLEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWProjectionWPlanes1() {
return alignof(godot::PtrToArg<godot::Projection::Planes>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_set_keyed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:66:48

return godot::internal::gdextension_interface_variant_set_keyed;
}
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot10StringName12split_floatsERKNS_6StringEb(godot::PackedFloat64Array* __claw_result_, godot::StringName* __claw_this_, const godot::String* delimiter, bool allow_empty) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:297:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->split_floats(*delimiter, allow_empty));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array12is_read_onlyEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:206:7
return __claw_this_->is_read_only();
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE6narrowEPKwS2_cPc(std::__ctype_abstract_base<wchar_t>* __claw_this_, const std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi, char __dfault, char* __to) {
// /usr/include/c++/13/bits/locale_facets.h:356:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->narrow(__lo, __hi, __dfault, __to);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC1EOS3_RKS2_(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __claw_this_, std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>* __x, const std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:347:7
new (__claw_this_) std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>(std::move(*__x), *__a);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZNK5godot12PropertyInfocvNS_10DictionaryEEv(godot::Dictionary* __claw_result_, struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:75:2
new (__claw_result_) godot::Dictionary(__claw_this_->operator Dictionary());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIaE23compare_exchange_strongERaaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Transform3D_claw_dtor(godot::PtrToArg<const godot::Transform3D&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Callable8is_validEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:106:7
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis5scaleERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:99:7
__claw_this_->scale(*p_scale);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt6atomicIbEcvbEv(std::atomic<bool>* __claw_this_) {
// /usr/include/c++/13/atomic:86:5
return __claw_this_->operator bool();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion35spherical_cubic_interpolate_in_timeERKS0_S2_S2_RKfS4_S4_S4_(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_b, const struct godot::Quaternion* p_pre_a, const struct godot::Quaternion* p_post_b, const real_t* p_weight, const real_t* p_b_t, const real_t* p_pre_a_t, const real_t* p_post_b_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:76:13
new (__claw_result_) godot::Quaternion(__claw_this_->spherical_cubic_interpolate_in_time(*p_b, *p_pre_a, *p_post_b, *p_weight, *p_b_t, *p_pre_a_t, *p_post_b_t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWRIDW_MethodBindings() {
return alignof(godot::RID::_MethodBindings);
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZN5godot8PtrToArgIRKNS_10DictionaryEE7convertEPKv(godot::Dictionary* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
new (__claw_result_) godot::Dictionary(godot::PtrToArg<const godot::Dictionary&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIcSt11char_traitsIcEEC1Ev(std::basic_string_view<char>* __claw_this_) {
// /usr/include/c++/13/string_view:132:7
new (__claw_this_) std::basic_string_view<char>();
}
}

__CLAW_API unsigned long long __claw_sizeof___iseqsig_type0longWdouble1() {
return sizeof(__iseqsig_type<long double>);
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color8darkenedEf(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, float p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:115:23
new (__claw_result_) godot::Color(__claw_this_->darkened(p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedColorArray1() {
return alignof(godot::PtrToArg<godot::PackedColorArray>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector414is_zero_approxEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:83:7
return __claw_this_->is_zero_approx();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_method(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:180:68

godot::internal::gdextension_interface_classdb_register_extension_class_method = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE8exchangeEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot18PackedVector3ArraymlERKNS_11Transform3DE(godot::PackedVector3Array* __claw_result_, godot::PackedVector3Array* __claw_this_, const struct godot::Transform3D* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:134:21
new (__claw_result_) godot::PackedVector3Array(__claw_this_->operator*(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RefINS_5TweenEEC2ERKS2_() {
return sizeof(godot::Ref<godot::Tween>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis9get_eulerENS_10EulerOrderE(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:85:10
new (__claw_result_) godot::Vector3(__claw_this_->get_euler(p_order));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8internal23EngineClassRegistrationINS_16ClassDBSingletonEEC2Ev() {
return alignof(godot::internal::EngineClassRegistration<godot::ClassDBSingleton>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot10StringNameEED1Ev(std::__new_allocator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton16is_class_enabledERKNS_10StringNameE(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:79:7
return __claw_this_->is_class_enabled(*_class);
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE3addEj(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:93:20
return __claw_this_->add(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEppEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKiiEEC1ERKS2_(std::allocator<std::pair<const int,int>>* __claw_this_, const std::allocator<std::pair<const int,int>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::pair<const int,int>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:378:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Rect2>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11MIDIMessageEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MIDIMessage&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE13postincrementEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:80:20
return __claw_this_->postincrement();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4mIERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:113:22
__claw_this_->operator-=(*p_vec4);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32ArrayeqERKNS_7VariantE(godot::PackedInt32Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:127:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRect21R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2>&>);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZN5godot8NodePathaSEOS0_(godot::NodePath* __claw_this_, godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:111:12
return (godot::NodePath*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedColorArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:188:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedColorArray>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D39is_local_transform_notification_enabledEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:122:7
return __claw_this_->is_local_transform_notification_enabled();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godotmlEiRKNS_7Vector4E(struct godot::Vector4* __claw_result_, const int32_t p_scalar, const struct godot::Vector4* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:301:24
new (__claw_result_) godot::Vector4(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>::pointer __claw__ZNSt19__ptr_traits_ptr_toIPNSt8__detail10_Hash_nodeISt4pairIKiiELb0EEES5_Lb0EE10pointer_toERS5_(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>::element_type* __r) {
// /usr/include/c++/13/bits/ptr_traits.h:141:7
return std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const int,int>,false>*,std::__detail::_Hash_node<std::pair<const int,int>,false>,std::__detail::_Hash_node<std::pair<const int,int>, false>>::pointer_to(*__r);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEE7is_nullEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_16PackedColorArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:408:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1EOSaISt13_Rb_tree_nodeIS1_EE(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Node_allocator* __a) {
// /usr/include/c++/13/bits/stl_tree.h:692:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>(std::move(*__a));
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector23maxERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:94:10
new (__claw_result_) godot::Vector2(__claw_this_->max(*p_vector2));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE3addEm(godot::SafeNumeric<unsigned long>* __claw_this_, unsigned long p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:93:20
return __claw_this_->add(p_value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261bE23v_claw_dtor(godot::GetTypeInfo<const bool&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_can_convert(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:86:50

godot::internal::gdextension_interface_variant_can_convert = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWString1() {
return alignof(godot::GetTypeInfo<godot::String>);
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot8Vector3iixEi(struct godot::Vector3i* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:61:32
return (int32_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot12SafeRefCount5unrefEv(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:179:23
return __claw_this_->unref();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot16ClassDBSingleton21class_get_method_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:71:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->class_get_method_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot10Quaternion8get_axisEv(struct godot::Vector3* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:78:10
new (__claw_result_) godot::Vector3(__claw_this_->get_axis());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector34lerpERKS0_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:108:25
new (__claw_result_) godot::Vector3(__claw_this_->lerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Color_claw_dtor(godot::PtrToArg<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API const int64_t* __claw__ZNK5godot16PackedInt64Array3ptrEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:137:17
return (const int64_t*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0char11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<char>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedInt32Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:111:1
new (__claw_this_) godot::TypedArray<godot::PackedInt32Array>(*p_variant);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector38angle_toERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:139:24
return __claw_this_->angle_to(*p_to);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Dictionary_claw_dtor(godot::PtrToArg<const godot::Dictionary&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10move_childEPS0_i(godot::Node* __claw_this_, godot::Node* child_node, int32_t to_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:168:7
__claw_this_->move_child(child_node, to_index);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Node_handleIiSt4pairIKiiESaINSt8__detail10_Hash_nodeIS2_Lb0EEEEEC2Ev() {
return sizeof(std::_Node_handle<int,std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40JoyAxis_claw_ctor(godot::PtrToArg<godot::JoyAxis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_this_) godot::PtrToArg<godot::JoyAxis>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<const godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40KeyE23v_claw_ctor(godot::GetTypeInfo<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::GetTypeInfo<godot::Key>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC2Ev() {
return sizeof(std::unordered_map<int,int>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2irmERKi(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:104:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator%(*rvalue));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0doubleP1() {
return alignof(godot::PtrToArg<double*>);
}
}

namespace godot {
__CLAW_API enum godot::Node3D::RotationEditMode __claw__ZN5godot8PtrToArgINS_6Node3D16RotationEditModeEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
return godot::PtrToArg<godot::Node3D::RotationEditMode>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWNodePath1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayItEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<unsigned short>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePathneERKNS_7VariantE(godot::NodePath* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:106:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40Object_claw_ctor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::Object*>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::Object*>>>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_getter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:96:52

godot::internal::gdextension_interface_variant_get_ptr_getter = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIhE5storeEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23S_claw_dtor(godot::PtrToArg<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEaSERKS3_(godot::List<godot::PropertyInfo>* __claw_this_, const godot::List<godot::PropertyInfo>* p_list) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:513:7
__claw_this_->operator=(*p_list);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector4() {
return alignof(godot::Vector4);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector2i_claw_dtor(struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:42:21
__claw_this_->~Vector2i();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKS5_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::Object*>>* __l, std::unordered_map<godot::StringName,godot::Object*>::size_type __n, const std::unordered_map<godot::StringName,godot::Object*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:271:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*__l, __n, *__hf, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector2() {
return alignof(godot::Vector2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWlongP1() {
return sizeof(godot::PtrToArg<unsigned long*>);
}
}

namespace godot {
__CLAW_API enum godot::Vector4::Axis __claw__ZNK5godot7Vector414min_axis_indexEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:70:16
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array5clearEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:116:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector4i4AxisEE6encodeES2_Pv(enum godot::Vector4i::Axis p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
godot::PtrToArg<godot::Vector4i::Axis>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godotmlEiRKNS_7Vector2E(struct godot::Vector2* __claw_result_, const int32_t p_scalar, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:311:24
new (__claw_result_) godot::Vector2(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_19HorizontalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::HorizontalAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Dictionary11operatornotEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:113:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWProcessMode1() {
return alignof(godot::GetTypeInfo<const godot::Node::ProcessMode>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWintWint11WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const int,int>>,std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Aq_claw_ctor(godot::PtrToArg<char16*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
new (__claw_this_) godot::PtrToArg<char16*>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10DictionaryEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Dictionary>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZN5godot7ClassDB21class_get_signal_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::TypedArray<godot::Dictionary>(godot::ClassDB::class_get_signal_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23c_claw_ctor(godot::PtrToArg<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:119:1
new (__claw_this_) godot::PtrToArg<unsigned char>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0char1() {
return alignof(godot::GetTypeInfo<char>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1EOS4_RKS3_(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>* __x, const std::allocator<godot::StringName>* __a) {
// /usr/include/c++/13/bits/stl_list.h:859:7
new (__claw_this_) std::list<godot::StringName>(std::move(*__x), *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector3() {
return alignof(godot::Vector3);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object11set_indexedERKNS_8NodePathERKNS_7VariantE(godot::Object* __claw_this_, const godot::NodePath* property_path, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:70:7
__claw_this_->set_indexed(*property_path, *value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_19HorizontalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::HorizontalAlignment>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEppEi(std::__atomic_base<char32>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1EOS4_(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>* arg0) {
// /usr/include/c++/13/bits/stl_list.h:824:7
new (__claw_this_) std::list<godot::StringName>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_10QuaternionE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Quaternion* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:380:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_destroy(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:159:46

godot::internal::gdextension_interface_object_destroy = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_11MethodFlagsEEC1El(godot::BitField<godot::MethodFlags>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::MethodFlags>(p_value);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<1,std::hash<int>,std::hash<int>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEppEi(std::__atomic_base<wchar_t>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Basis5tdotxERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:120:24
return __claw_this_->tdotx(*v);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS4_mm(std::basic_string<char32>* __claw_this_, const std::basic_string<char32>* __str, std::basic_string<char32>::size_type __pos, std::basic_string<char32>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:581:7
new (__claw_this_) std::basic_string<char32>(*__str, __pos, __n);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::char_type* __claw__ZN9__gnu_cxx11char_traitsIwE6assignEPwmw(__gnu_cxx::char_traits<wchar_t>::char_type* __s, std::size_t __n, __gnu_cxx::char_traits<wchar_t>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:159:7
return (__gnu_cxx::char_traits<wchar_t>::char_type*) __gnu_cxx::char_traits<wchar_t>::assign(__s, __n, __a);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3dvERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:160:25
new (__claw_result_) godot::Vector3(__claw_this_->operator/(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWVector3WAxis1() {
return sizeof(godot::VariantCaster<godot::Vector3::Axis>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_cE3AE40NE40godotE40NE40internalE40SE40EngineClassRegistrationE3EE23E24E40NE40godotE40SE40Node3D_claw_dtor(godot::internal::EngineClassRegistration<godot::Node3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:123:8
__claw_this_->~EngineClassRegistration();
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat64Array4findEdl(godot::PackedFloat64Array* __claw_this_, double value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:124:10
return __claw_this_->find(value, from);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_worker_thread_pool_add_native_task(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:132:62

godot::internal::gdextension_interface_worker_thread_pool_add_native_task = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godotmlEiRKNS_7Vector3E(struct godot::Vector3* __claw_result_, const int32_t p_scalar, const struct godot::Vector3* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:379:24
new (__claw_result_) godot::Vector3(godot::operator*(p_scalar, *p_vec));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEeOEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3imlEi(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:105:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator*(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcED1Ev(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:247:17
__claw_this_->~CowData();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodePathR1() {
return alignof(godot::GetTypeInfo<const godot::NodePath&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWColor() {
return sizeof(godot::Color);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPsE6encodeES1_Pv(int16_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
godot::PtrToArg<short*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API godot::ObjectID* __claw__ZNK5godot14CallableCustom10get_objectEv(godot::ObjectID* __claw_result_, godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:58:19
new (__claw_result_) godot::ObjectID(__claw_this_->get_object());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt23_Rb_tree_const_iteratorIN5godot10StringNameEEC1ERKSt17_Rb_tree_iteratorIS1_E(std::_Rb_tree_const_iterator<godot::StringName>* __claw_this_, const std::_Rb_tree_const_iterator<godot::StringName>::iterator* __it) {
// /usr/include/c++/13/bits/stl_tree.h:350:7
new (__claw_this_) std::_Rb_tree_const_iterator<godot::StringName>(*__it);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:151:51

return godot::internal::gdextension_interface_array_operator_index;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWProjectionWPlanesR1() {
return alignof(godot::GetTypeInfo<godot::Projection::Planes&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWCallable11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Callable>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEEC2Ev() {
return sizeof(std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZN5godot7CowDataIDiE6insertElRKDi(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_pos, const char32* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:231:8
return __claw_this_->insert(p_pos, *p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWRect2iR1() {
return alignof(godot::PtrToArg<const godot::Rect2i&>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail19_Node_iterator_baseISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEC1EPNS_10_Hash_nodeIS7_Lb0EEE(std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>* __claw_this_, std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>::__node_type* __p) {
// /usr/include/c++/13/bits/hashtable_policy.h:393:7
new (__claw_this_) std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>(__p);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBitField0godotWPropertyUsageFlags11() {
return alignof(godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_dtor(godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEmIEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_8Vector2iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWMethodFlagsR1() {
return alignof(godot::GetTypeInfo<godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::ConstIterator* __claw__ZN5godot16PackedInt32Array13ConstIteratormmEv(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:174:33
return (struct godot::PackedInt32Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIxE23compare_exchange_strongERxxSt12memory_orderS2_(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot5ColorcvNS_6StringEEv(godot::String* __claw_result_, struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:204:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot15PackedByteArray16to_float64_arrayEv(godot::PackedFloat64Array* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:194:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->to_float64_array());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4E23v_claw_dtor(godot::GetTypeInfo<godot::Vector4>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE9fetch_subEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWVector311() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Vector3>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEC1Ev(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:756:2
new (__claw_this_) godot::List<godot::PropertyInfo>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:380:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::CharString* __claw__ZNK5godot6String4utf8Ev(godot::CharString* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:382:13
new (__claw_result_) godot::CharString(__claw_this_->utf8());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_11MethodFlagsEE10clear_flagES2_(godot::BitField<godot::MethodFlags&>* __claw_this_, enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIdEaSERKNS_5ArrayE(godot::TypedArray<double>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:88:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7VariantEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:195:29
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Variant>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40ClockDirectionE23v_claw_ctor(godot::GetTypeInfo<godot::ClockDirection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<godot::ClockDirection&>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_new_copy() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:58:47

return godot::internal::gdextension_interface_variant_new_copy;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot10Projection26get_far_plane_half_extentsEv(struct godot::Vector2* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:114:10
new (__claw_result_) godot::Vector2(__claw_this_->get_far_plane_half_extents());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIaEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<char>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__do_common_type_impl_claw_dtor(struct std::__do_common_type_impl* __claw_this_) {
// /usr/include/c++/13/type_traits:2263:10
__claw_this_->~__do_common_type_impl();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_ctor(godot::GetTypeInfo<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<godot::Projection::Planes>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRect2i1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayImEC1ERKNS_7VariantE(godot::TypedArray<unsigned long>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:85:1
new (__claw_this_) godot::TypedArray<unsigned long>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcE9remove_atEl(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:220:22
__claw_this_->remove_at(p_index);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_5PlaneEE6encodeES3_Pv(const struct godot::Plane* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
godot::PtrToArg<const godot::Plane&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWhash0int11() {
return alignof(std::__type_identity<std::hash<int>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23SE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<short>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameeqERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:366:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10_GlobalNilC1Ev(struct godot::_GlobalNil* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:208:2
new (__claw_this_) godot::_GlobalNil();
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE9push_backERKS1_(godot::List<godot::PropertyInfo>* __claw_this_, const struct godot::PropertyInfo* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:284:11
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->push_back(*value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40JoyButtonE23v_claw_ctor(godot::GetTypeInfo<const godot::JoyButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_this_) godot::GetTypeInfo<const godot::JoyButton&>();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot4AABB22get_shortest_axis_sizeEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:93:24
return __claw_this_->get_shortest_axis_size();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldINS_15MouseButtonMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector3Array7bsearchERKNS_7Vector3Eb(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:126:10
return __claw_this_->bsearch(*value, before);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_17PackedStringArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedStringArray&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API const std::ctype<char>::char_type* __claw__ZNKSt5ctypeIcE7toupperEPcPKc(std::ctype<char>* __claw_this_, std::ctype<char>::char_type* __lo, const std::ctype<char>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:827:7
return (const std::ctype<char>::char_type*) __claw_this_->toupper(__lo, __hi);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_5BasisEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Basis>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15KeyModifierMaskEE10clear_flagES1_(godot::BitField<godot::KeyModifierMask>* __claw_this_, enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_6SignalEE6encodeES1_Pv(godot::Signal* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
godot::PtrToArg<godot::Signal>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray9decode_u8El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:177:10
return __claw_this_->decode_u8(byte_offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwE9remove_atEl(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:220:22
__claw_this_->remove_at(p_index);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_5Rect2E(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Rect2* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:406:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:376:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const real_t* __claw__ZNK5godot10QuaternionixEi(struct godot::Quaternion* __claw_this_, int idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:53:31
return (real_t*) (&__claw_this_->operator[](idx));
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D14affine_inverseEv(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:50:14
new (__claw_result_) godot::Transform3D(__claw_this_->affine_inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZN5godot8CallableaSERKS0_(godot::Callable* __claw_this_, const godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:130:12
return (godot::Callable*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedByteArrayE40SE40Iterator_claw_dtor(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:220:12
__claw_this_->~Iterator();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE9fetch_addExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_warning_with_message() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:54:56

return godot::internal::gdextension_interface_print_warning_with_message;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE9fetch_andExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API enum godot::InlineAlignment __claw__ZN5godot8PtrToArgINS_15InlineAlignmentEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
return godot::PtrToArg<godot::InlineAlignment>::convert(p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIlED1Ev(std::__atomic_base<long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE9fetch_addEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Array13is_same_typedERKS0_(godot::Array* __claw_this_, const godot::Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:201:7
return __claw_this_->is_same_typed(*array);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<char16>>::size_type __claw__ZNSt16allocator_traitsISaIDsEE8max_sizeERKS0_(const std::allocator_traits<std::allocator<char16>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<char16>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23sE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:367:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEEC2El() {
return alignof(godot::BitField<const godot::Node::ProcessThreadMessages&>);
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::ConstIterator* __claw__ZN5godot16PackedColorArray13ConstIteratormmEv(struct godot::PackedColorArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:176:33
return (struct godot::PackedColorArray::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace std {
__CLAW_API const std::ctype_base::mask* __claw__ZNKSt5ctypeIcE5tableEv(std::ctype<char>* __claw_this_) {
// /usr/include/c++/13/bits/locale_facets.h:991:7
return (const std::ctype_base::mask*) __claw_this_->table();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNKSt13__atomic_baseIcE4loadESt12memory_order(std::__atomic_base<char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWint1() {
return alignof(godot::PtrToArg<unsigned int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTransform3DR1() {
return alignof(godot::GetTypeInfo<const godot::Transform3D&>);
}
}

namespace godot {
__CLAW_API const struct godot::Color* __claw__ZNK5godot16PackedColorArrayixEl(godot::PackedColorArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:137:15
return (struct godot::Color*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2ingEv(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:107:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform3DEEC1ERKNS_7VariantE(godot::TypedArray<godot::Transform3D>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:101:1
new (__claw_this_) godot::TypedArray<godot::Transform3D>(*p_variant);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11atomic_flag12test_and_setESt12memory_order(struct std::atomic_flag* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:226:5
return __claw_this_->test_and_set(__m);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVKSt13__atomic_baseIjEcvjEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator unsigned int();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform2DEEC1ERKNS_7VariantE(godot::TypedArray<godot::Transform2D>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:96:1
new (__claw_this_) godot::TypedArray<godot::Transform2D>(*p_variant);
}
}

namespace godot {
__CLAW_API godot::Signal* __claw__ZN5godot6SignalaSERKS0_(godot::Signal* __claw_this_, const godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:106:10
return (godot::Signal*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedFloat32Array_claw_ctor(godot::PtrToArg<godot::PackedFloat32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
new (__claw_this_) godot::PtrToArg<godot::PackedFloat32Array>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261fE23v_claw_dtor(godot::GetTypeInfo<const float&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1W_claw_ctor(godot::PtrToArg<const wchar_t*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
new (__claw_this_) godot::PtrToArg<const wchar_t*>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_11Transform3DEE6encodeES3_Pv(const struct godot::Transform3D* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
godot::PtrToArg<const godot::Transform3D&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis9rotate_shEPf(struct godot::Basis* __claw_this_, real_t* p_values) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:153:7
__claw_this_->rotate_sh(p_values);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWcharPP1() {
return alignof(godot::PtrToArg<unsigned char**>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArrayneERKNS_7VariantE(godot::PackedColorArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:130:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array4backEv(godot::Variant* __claw_result_, godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:176:10
new (__claw_result_) godot::Variant(__claw_this_->back());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaEaNEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5PlaneC1Effff(struct godot::Plane* __claw_this_, real_t p_a, real_t p_b, real_t p_c, real_t p_d) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:87:17
new (__claw_this_) godot::Plane(p_a, p_b, p_c, p_d);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EEC2Ev() {
return sizeof(std::__detail::_Hashtable_ebo_helper<1,std::hash<int>,std::hash<int>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZSt18__throw_bad_typeidv() {
// /usr/include/c++/13/bits/functexcept.h:63:3
std::__throw_bad_typeid();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_11Transform2DEE6encodeES1_Pv(struct godot::Transform2D* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
godot::PtrToArg<const godot::Transform2D&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEmIEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray8IteratorneERKS1_(struct godot::PackedByteArray::Iterator* __claw_this_, const struct godot::PackedByteArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:235:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object *>, false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object *>, false>>>();
}
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementptEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:98:27
return (const struct godot::PropertyInfo*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Node3DGizmoEEaSERKNS_5ArrayE(godot::TypedArray<godot::Node3DGizmo>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:42:22
__claw_this_->operator=(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE8fetch_orEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt10bad_typeidC1Ev(std::bad_typeid* __claw_this_) {
// /usr/include/c++/13/typeinfo:240:5
new (__claw_this_) std::bad_typeid();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15MouseButtonMaskEEC1El(godot::BitField<godot::MouseButtonMask>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::MouseButtonMask>(p_value);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5BasisplERKS0_(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:141:23
new (__claw_result_) godot::Basis(__claw_this_->operator+(*p_matrix));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_method_bind_call(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:157:53

godot::internal::gdextension_interface_object_method_bind_call = __claw_value_;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1EOS4_RKS3_(std::basic_string<char32>* __claw_this_, std::basic_string<char32>* __str, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:716:7
new (__claw_this_) std::basic_string<char32>(std::move(*__str), *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ab_claw_dtor(godot::PtrToArg<bool*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector3i_claw_dtor(godot::PtrToArg<const godot::Vector3i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23rE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<char>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<char>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedColorArray1() {
return alignof(godot::GetTypeInfo<godot::PackedColorArray>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot8NodePath22get_concatenated_namesEv(godot::StringName* __claw_result_, godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:101:13
new (__claw_result_) godot::StringName(__claw_this_->get_concatenated_names());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Select1stW__1st_type0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11() {
return sizeof(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedFloat64Array1() {
return alignof(godot::PtrToArg<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2i8has_areaEv(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:88:22
return __claw_this_->has_area();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEEC1ERKS7_(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_, const std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Plane_claw_dtor(godot::PtrToArg<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot17PackedStringArray6appendERKNS_6StringE(godot::PackedStringArray* __claw_this_, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:112:7
return __claw_this_->append(*value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__common_type_impl0longWdoubleWlongWdoubleWlongWdoubleWlongWdouble1() {
return alignof(std::__common_type_impl<long double,long double,long double,long double>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNKSt13__atomic_baseIDsEcvDsEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator char16_t();
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr4swapERNS_13exception_ptrES1_(std::__exception_ptr::exception_ptr* __lhs, std::__exception_ptr::exception_ptr* __rhs) {
// /usr/include/c++/13/bits/exception_ptr.h:230:5
std::__exception_ptr::swap(*__lhs, *__rhs);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_18PackedVector3ArrayE(godot::Variant* __claw_this_, const godot::PackedVector3Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:213:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat32Array6insertEld(godot::PackedFloat32Array* __claw_this_, int64_t at_index, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:113:10
return __claw_this_->insert(at_index, value);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot8PtrToArgIRKNS_5BasisEE7convertEPKv(struct godot::Basis* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
new (__claw_result_) godot::Basis(godot::PtrToArg<const godot::Basis&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedStringArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE9fetch_andEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6locale5facetC2Em() {
return alignof(std::locale::facet);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MouseButtonE23v_claw_dtor(godot::GetTypeInfo<const godot::MouseButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWatomic0unsignedWlong11() {
return sizeof(std::__type_identity<std::atomic<unsigned long>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40ErrorE23v_claw_ctor(godot::GetTypeInfo<const godot::Error&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::GetTypeInfo<const godot::Error&>();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEEC1ERKSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* __claw_this_, const std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1941:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>(*arg0);
}
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5BasismlERKS0_(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* p_matrix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:139:23
new (__claw_result_) godot::Basis(__claw_this_->operator*(*p_matrix));
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40_Char_typesE3EE23W_claw_dtor(__gnu_cxx::_Char_types<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:84:12
__claw_this_->~_Char_types();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10QuaternionEEC1ERKNS_7VariantE(godot::TypedArray<godot::Quaternion>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:98:1
new (__claw_this_) godot::TypedArray<godot::Quaternion>(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW__detailW_Mod_range_hashing1() {
return alignof(std::__type_identity<std::__detail::_Mod_range_hashing>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector2iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2i>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringpLEPKc(godot::String* __claw_this_, const char* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:460:10
return (godot::String*) (&__claw_this_->operator+=(p_str));
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6StringpLEPKw(godot::String* __claw_this_, const wchar_t* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:461:10
return (godot::String*) (&__claw_this_->operator+=(p_str));
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_recursive_hash() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:76:53

return godot::internal::gdextension_interface_variant_recursive_hash;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector4iWAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZN5godot16PackedInt64Array9duplicateEv(godot::PackedInt64Array* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:123:19
new (__claw_result_) godot::PackedInt64Array(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__success_type0long1() {
return alignof(std::__success_type<long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array8IteratorC1EPl(struct godot::PackedInt64Array::Iterator* __claw_this_, int64_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:157:3
new (__claw_this_) godot::PackedInt64Array::Iterator(p_ptr);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__ptr_traits_ptr_toE3EE23E2AE24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBindE23Vb0E23S1_E23Vb0_claw_dtor(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>* __claw_this_) {
// /usr/include/c++/13/bits/ptr_traits.h:130:12
__claw_this_->~__ptr_traits_ptr_to();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_4AABBEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPropertyHint1() {
return alignof(godot::GetTypeInfo<godot::PropertyHint>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40_List_nodeE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::allocator<std::_List_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector2dvERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:138:10
new (__claw_result_) godot::Vector2(__claw_this_->operator/(*p_v1));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Node>* __claw__ZNK5godot4Node13find_childrenERKNS_6StringES3_bb(godot::TypedArray<godot::Node>* __claw_result_, godot::Node* __claw_this_, const godot::String* pattern, const godot::String* type, bool recursive, bool owned) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:156:19
new (__claw_result_) godot::TypedArray<godot::Node>(__claw_this_->find_children(*pattern, *type, recursive, owned));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4C1ERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:144:2
new (__claw_this_) godot::Vector4(*p_vec4);
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE2isEPKwS2_Pt(std::__ctype_abstract_base<wchar_t>* __claw_this_, const std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi, std::ctype_base::mask* __vec) {
// /usr/include/c++/13/bits/locale_facets.h:189:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->is(__lo, __hi, __vec);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWEulerOrderR1() {
return alignof(godot::GetTypeInfo<godot::EulerOrder&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray8IteratoreqERKS1_(struct godot::PackedByteArray::Iterator* __claw_this_, const struct godot::PackedByteArray::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:234:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_10DictionaryE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:428:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::VerticalAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_18PackedFloat32ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:433:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40fposE3EE23E24E40SAE40__mbstate_t_claw_ctor(std::fpos<NIL>* __claw_this_) {
// /usr/include/c++/13/bits/postypes.h:82:11
new (__claw_this_) std::fpos<NIL>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1Em(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::size_t __n) {
// /usr/include/c++/13/bits/stl_vector.h:327:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(__n);
}
}

__CLAW_API wint_t __claw__ZZ8putwcharE4(wchar_t __wc) {
// /usr/include/wchar.h:956:15
return putwchar(__wc);
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPwE6encodeES1_Pv(wchar_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
godot::PtrToArg<wchar_t*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40CallableE23v_claw_dtor(godot::GetTypeInfo<const godot::Callable&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node15get_child_countEb(godot::Node* __claw_this_, bool include_internal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:148:10
return __claw_this_->get_child_count(include_internal);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23SE23v_claw_ctor(godot::GetTypeInfo<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
new (__claw_this_) godot::GetTypeInfo<short>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0bool1() {
return alignof(godot::PtrToArg<bool>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11OrientationEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Orientation&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iS1_bb(const char* p_function, const char* p_file, int p_line, const char* p_error, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:42:6
godot::_err_print_error(p_function, p_file, p_line, p_error, p_editor_notify, p_is_warning);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1ERKS6_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_tree.h:945:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(*__a);
}
}

namespace godot {
__CLAW_API godot::Ref<godot::Tween>* __claw__ZN5godot3RefINS_5TweenEE25_gde_internal_constructorEPNS_6ObjectE(godot::Ref<godot::Tween>* __claw_result_, godot::Object* obj) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:222:23
new (__claw_result_) godot::Ref<godot::Tween>(godot::Ref<godot::Tween>::_gde_internal_constructor(obj));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPlane1() {
return alignof(godot::PtrToArg<godot::Plane>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3iWAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3i::Axis>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1Ev(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:315:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWVariantWType1() {
return alignof(godot::PtrToArg<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWInternalMode1() {
return alignof(godot::GetTypeInfo<godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMouseButtonMask1() {
return alignof(godot::GetTypeInfo<const godot::MouseButtonMask>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDsE21compare_exchange_weakERDsDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type* __i1, std::__atomic_base<char16>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis15transpose_xformERKS0_(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* m) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:198:23
new (__claw_result_) godot::Basis(__claw_this_->transpose_xform(*m));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgodot_version(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:44:36

godot::internal::godot_version = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2iWAxis1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2i::Axis>);
}
}

namespace godot {
__CLAW_API const int64_t* __claw__ZNK5godot16PackedInt64Array13ConstIteratordeEv(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:166:33
return (int64_t*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0bool1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<bool>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1L_claw_ctor(godot::PtrToArg<const long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
new (__claw_this_) godot::PtrToArg<const long*>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261dE23v_claw_dtor(godot::GetTypeInfo<const double&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIwED1Ev(std::allocator<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array8IteratorC1EPi(struct godot::PackedInt32Array::Iterator* __claw_this_, int32_t* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:157:3
new (__claw_this_) godot::PackedInt32Array::Iterator(p_ptr);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIaE23compare_exchange_strongERaaSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC1ERKS7_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_, const std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1941:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>(*arg0);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt32ArrayW_MethodBindings() {
return sizeof(godot::PackedInt32Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4imIERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:97:27
return (struct godot::Vector4i*) (&__claw_this_->operator-=(*p_v));
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName10md5_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:316:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->md5_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPtE6encodeES1_Pv(uint16_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
godot::PtrToArg<unsigned short*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedInt64ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedInt64Array&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1ERKS7_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __x) {
// /usr/include/c++/13/bits/stl_tree.h:937:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(*__x);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RIDC1ERKS0_(godot::RID* __claw_this_, const godot::RID* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:75:2
new (__claw_this_) godot::RID(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color6set_r8Ei(struct godot::Color* __claw_this_, int32_t r8) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:207:22
__claw_this_->set_r8(r8);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_dtor(godot::GetTypeInfo<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String4hashEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:326:10
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API const godot::String* __claw__ZNK5godot17PackedStringArray13ConstIteratorptEv(struct godot::PackedStringArray::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:171:32
return (const godot::String*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_4NodeEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Node>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWshortR1() {
return sizeof(godot::GetTypeInfo<const short&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringNameneERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:367:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE8fetch_orEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_global_get_singleton(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:160:51

godot::internal::gdextension_interface_global_get_singleton = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10DictionaryC2EPKNS_7VariantE() {
return alignof(godot::Dictionary);
}
}

__CLAW_API wint_t __claw__ZZ17putwchar_unlockedE4(wchar_t __wc) {
// /usr/include/wchar.h:1017:15
return putwchar_unlocked(__wc);
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot7Vector2cvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:175:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedFloat32Array4findEdl(godot::PackedFloat32Array* __claw_this_, double value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:124:10
return __claw_this_->find(value, from);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIDiE23compare_exchange_strongERDiDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEaSERKS2_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Ref<godot::MultiplayerAPI>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:107:7
__claw_this_->operator=(*p_from);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIlEC2Ev() {
return sizeof(std::__atomic_base<long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0int1() {
return alignof(godot::PtrToArg<int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWNodeWProcessThreadMessages11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWforward_iterator_tag() {
return alignof(std::forward_iterator_tag);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEED1Ev(std::__new_allocator<std::_List_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot7CowDataIwE3getEl(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:211:26
return (wchar_t*) (&__claw_this_->get(p_index));
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlEpLEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWOrientationR1() {
return sizeof(godot::GetTypeInfo<const godot::Orientation&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEEC2Ev() {
return sizeof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DC1ERKNS_5BasisERKNS_7Vector3E(struct godot::Transform3D* __claw_this_, const struct godot::Basis* p_basis, const struct godot::Vector3* p_origin) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:129:2
new (__claw_this_) godot::Transform3D(*p_basis, *p_origin);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4irmERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:104:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator%(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPropertyUsageFlagsR1() {
return alignof(godot::GetTypeInfo<const godot::PropertyUsageFlags&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWString1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::String>&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWbidirectional_iterator_tag() {
return sizeof(std::bidirectional_iterator_tag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40EulerOrderE23v_claw_ctor(godot::GetTypeInfo<const godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_this_) godot::GetTypeInfo<const godot::EulerOrder>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIPNSt8__detail15_Hash_node_baseEEC2Ev() {
return sizeof(std::allocator<std::__detail::_Hash_node_base*>);
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZNK5godot7VariantcvNS_18PackedFloat32ArrayEEv(godot::PackedFloat32Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:257:2
new (__claw_result_) godot::PackedFloat32Array(__claw_this_->operator PackedFloat32Array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot6Node3D20get_global_transformEv(struct godot::Transform3D* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:91:14
new (__claw_result_) godot::Transform3D(__claw_this_->get_global_transform());
return __claw_result_;
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot5Color9to_argb64Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:55:11
return __claw_this_->to_argb64();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_warning(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:53:45

godot::internal::gdextension_interface_print_warning = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEppEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2mIERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:131:7
__claw_this_->operator-=(*p_v);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVKSt13__atomic_baseIjE4loadESt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWless0godotWStringName1() {
return sizeof(std::less<godot::StringName>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWAABB1() {
return alignof(godot::GetTypeInfo<godot::AABB>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AE2A1c_claw_dtor(godot::PtrToArg<const unsigned char**>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicItEC2Ev() {
return alignof(std::atomic<unsigned short>);
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot7VariantcvNS_18PackedFloat64ArrayEEv(godot::PackedFloat64Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:258:2
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->operator PackedFloat64Array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot10RefCounted31_gde_binding_reference_callbackEPvS1_i() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
return godot::RefCounted::_gde_binding_reference_callback();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbE23compare_exchange_strongERbbSt12memory_order(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m) {
// /usr/include/c++/13/atomic:163:5
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZNK5godot7VariantcvNS_16PackedInt32ArrayEEv(godot::PackedInt32Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:255:2
new (__claw_result_) godot::PackedInt32Array(__claw_this_->operator PackedInt32Array());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0godotWVariant11() {
return alignof(std::allocator_traits<std::allocator<godot::Variant>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0unsignedWchar1() {
return sizeof(godot::GetTypeInfo<unsigned char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameD1Ev(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:260:2
__claw_this_->~StringName();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedVector3Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:117:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKsE10encode_argEs(int16_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
return godot::PtrToArg<const short&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot7CowDataIcE3getEl(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:211:26
return (char*) (&__claw_this_->get(p_index));
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_variant_to_type_constructor() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:89:60

return godot::internal::gdextension_interface_get_variant_to_type_constructor;
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_vector2_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:148:69

godot::internal::gdextension_interface_packed_vector2_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot7VariantC2Ev() {
return alignof(godot::Variant);
}
}

namespace std {
namespace chrono {
__CLAW_API void __claw__ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1ERKS3_(std::chrono::duration<long,std::ratio<1,1000000000>>* __claw_this_, const std::chrono::duration<long,std::ratio<1,1000000000>>* arg0) {
// /usr/include/c++/13/bits/chrono.h:566:2
new (__claw_this_) std::chrono::duration<long,std::ratio<1,1000000000>>(*arg0);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EPKDi(godot::Variant* __claw_this_, const char32* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:177:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String9sha1_textEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:328:9
new (__claw_result_) godot::String(__claw_this_->sha1_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4irMERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:103:27
return (struct godot::Vector4i*) (&__claw_this_->operator%=(*p_v));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Error_claw_dtor(godot::PtrToArg<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API float __claw__ZNK5godot10Projection18get_lod_multiplierEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:152:8
return __claw_this_->get_lod_multiplier();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4fposI11__mbstate_tEC2Ev() {
return sizeof(std::fpos<NIL>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10Projection6PlanesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Projection::Planes>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Vector4::Axis __claw__ZNK5godot7Vector414max_axis_indexEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:71:16
return __claw_this_->max_axis_index();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedStringArrayWConstIterator() {
return alignof(godot::PackedStringArray::ConstIterator);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWNodeWDuplicateFlags1() {
return sizeof(godot::VariantCaster<godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWchar_traits0wchar_t1() {
return sizeof(std::char_traits<wchar_t>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEEltERKS2_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Ref<godot::Node3DGizmo>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:81:22
return __claw_this_->operator<(*p_r);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedInt32Array1() {
return alignof(godot::PtrToArg<godot::PackedInt32Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_dtor(godot::GetTypeInfo<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_19HorizontalAlignmentEE6encodeES1_Pv(enum godot::HorizontalAlignment p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
godot::PtrToArg<godot::HorizontalAlignment>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_18PackedFloat64ArrayEE6encodeES1_Pv(godot::PackedFloat64Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
godot::PtrToArg<godot::PackedFloat64Array>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEC1ERKNS_7VariantE(godot::Ref<godot::Tween>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref<godot::Tween>(*p_variant);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat64Array6resizeEl(godot::PackedFloat64Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:115:10
return __claw_this_->resize(new_size);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0longW11() {
return alignof(std::integral_constant<long,1>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EPKDs(godot::Variant* __claw_this_, const char16* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:175:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot10Dictionary8find_keyERKNS_7VariantE(godot::Variant* __claw_result_, godot::Dictionary* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:102:10
new (__claw_result_) godot::Variant(__claw_this_->find_key(*value));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessThreadGroup1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayC1ESt16initializer_listIdE(godot::PackedFloat64Array* __claw_this_, std::initializer_list<double>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:205:20
new (__claw_this_) godot::PackedFloat64Array(*p_init);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPjE6encodeES1_Pv(uint32_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:228:1
godot::PtrToArg<unsigned int*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIjE10encode_argEj(uint32_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
return godot::PtrToArg<unsigned int>::encode_arg(p_val);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4Node11ProcessModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessMode&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayImEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D8rotate_zEd(godot::Node3D* __claw_this_, double angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:134:7
__claw_this_->rotate_z(angle);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4atanEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:367:14
return godot::Math::atan(p_x);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_11MethodFlagsEE10clear_flagES1_(godot::BitField<godot::MethodFlags>* __claw_this_, enum godot::MethodFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt19_Node_handle_commonISt4pairIKiiESaINSt8__detail10_Hash_nodeIS2_Lb0EEEEEC2Ev() {
return alignof(std::_Node_handle_common<std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_godot_version(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:47:48

godot::internal::gdextension_interface_get_godot_version = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8get_fileEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:325:9
new (__claw_result_) godot::String(__claw_this_->get_file());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB18intersects_segmentERKNS_7Vector3ES3_PS1_S4_(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_from, const struct godot::Vector3* p_to, struct godot::Vector3* r_clip, struct godot::Vector3* r_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:76:7
return __claw_this_->intersects_segment(*p_from, *p_to, r_clip, r_normal);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVariantWType1() {
return alignof(godot::GetTypeInfo<const godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector2_claw_ctor(godot::PtrToArg<const godot::Vector2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
new (__claw_this_) godot::PtrToArg<const godot::Vector2&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot18PackedVector3ArrayixEl(godot::PackedVector3Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:141:11
return (struct godot::Vector3*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayC1ESt16initializer_listIlE(godot::PackedInt64Array* __claw_this_, std::initializer_list<long>* p_init) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:205:20
new (__claw_this_) godot::PackedInt64Array(*p_init);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40KeyE23v_claw_dtor(godot::GetTypeInfo<godot::Key&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0char1611() {
return alignof(std::allocator_traits<std::allocator<char16>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEC1ERKNS_7VariantE(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref<godot::InputEvent>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array3setEll(godot::PackedInt64Array* __claw_this_, int64_t index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:108:7
__claw_this_->set(index, value);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEppEi(std::__atomic_base<bool>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261iE23v_claw_dtor(godot::GetTypeInfo<const unsigned int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayItEC1ERKNS_5ArrayE(godot::TypedArray<unsigned short>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:81:1
new (__claw_this_) godot::TypedArray<unsigned short>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iRKNS_6StringEbb(const char* p_function, const char* p_file, int p_line, const godot::String* p_error, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:43:6
godot::_err_print_error(p_function, p_file, p_line, *p_error, p_editor_notify, p_is_warning);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4atanEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:364:15
return godot::Math::atan(p_x);
}
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect25mergeERKS0_(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:169:15
new (__claw_result_) godot::Rect2(__claw_this_->merge(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Plane6centerEv(struct godot::Vector3* __claw_result_, struct godot::Plane* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:53:25
new (__claw_result_) godot::Vector3(__claw_this_->center());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::ConstIterator* __claw__ZNK5godot18PackedFloat64Array3endEv(struct godot::PackedFloat64Array::ConstIterator* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:200:31
new (__claw_result_) godot::PackedFloat64Array::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4igeERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:120:22
return __claw_this_->operator>=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40EulerOrder_claw_dtor(godot::PtrToArg<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect29is_finiteEv(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:212:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3iWAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector3i::Axis&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKDsvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const char16&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Variant::Type __claw__ZN5godot8PtrToArgINS_7Variant4TypeEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
return godot::PtrToArg<godot::Variant::Type>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_15PackedByteArrayEEC1Ev(godot::TypedArray<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:110:1
new (__claw_this_) godot::TypedArray<godot::PackedByteArray>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArrayeqERKS0_(godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:132:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0long1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<long>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWErrorR1() {
return sizeof(godot::GetTypeInfo<godot::Error&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPropertyHintR1() {
return sizeof(godot::GetTypeInfo<const godot::PropertyHint&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4ieqERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:115:22
return __claw_this_->operator==(*p_v);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE9fetch_xorEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGDExtensionBindingWInitDataList() {
return sizeof(godot::GDExtensionBinding::InitDataList);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWKeyModifierMask1() {
return sizeof(godot::GetTypeInfo<const godot::KeyModifierMask>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40Object_claw_dtor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
__claw_this_->~__1st_type();
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot18PackedVector2Array8IteratordeEv(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:146:27
return (struct godot::Vector2*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23LE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<long>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEEneERKS2_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Ref<godot::MultiplayerAPI>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:87:22
return __claw_this_->operator!=(*p_r);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3iplERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:94:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator+(*p_v));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_set_indexed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:67:50

godot::internal::gdextension_interface_variant_set_indexed = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4ineERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:116:22
return __claw_this_->operator!=(*p_v);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName15get_slice_countERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* delimiter) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:269:10
return __claw_this_->get_slice_count(*delimiter);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName6indentERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:311:9
new (__claw_result_) godot::String(__claw_this_->indent(*prefix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::MultiplayerAPI* __claw__ZNK5godot3RefINS_14MultiplayerAPIEEptEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:95:20
return (godot::MultiplayerAPI*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10MethodBind18get_argument_countEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:103:21
return __claw_this_->get_argument_count();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArrayneERKS0_(godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:133:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API char __claw__ZNKSt5ctypeIcE6narrowEcc(std::ctype<char>* __claw_this_, std::ctype<char>::char_type __c, char __dfault) {
// /usr/include/c++/13/bits/locale_facets.h:939:7
return __claw_this_->narrow(__c, __dfault);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIxEC2Ev() {
return sizeof(std::atomic<long long>);
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot11CharStringTIDsEcvPKDsEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:117:2
return (const char16*) __claw_this_->operator const char16_t *();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color4htmlERKNS_6StringE(struct godot::Color* __claw_result_, const godot::String* p_rgba) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:191:15
new (__claw_result_) godot::Color(godot::Color::html(*p_rgba));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_10QuaternionEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_vector3_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:150:69

godot::internal::gdextension_interface_packed_vector3_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1ERKS4_RKS3_(std::list<godot::StringName>* __claw_this_, const std::list<godot::StringName>* __x, const std::allocator<godot::StringName>* __a) {
// /usr/include/c++/13/bits/stl_list.h:839:7
new (__claw_this_) std::list<godot::StringName>(*__x, *__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object16initialize_classEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
godot::Object::initialize_class();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ColorE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Color>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIjE23compare_exchange_strongERjjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColordVERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:91:7
__claw_this_->operator/=(*p_color);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Transform2D_claw_dtor(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:42:21
__claw_this_->~Transform2D();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6indentERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:324:9
new (__claw_result_) godot::String(__claw_this_->indent(*prefix));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWbinary_function0godotWStringNameWgodotWStringNameWbool1() {
return alignof(std::binary_function<godot::StringName,godot::StringName,bool>);
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot11CharStringTIDiEcvPKDiEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:117:2
return (const char32*) __claw_this_->operator const char32_t *();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4imiERKS0_(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:98:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator-(*p_v));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type() {
return alignof(std::common_type);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector4ileERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:118:22
return __claw_this_->operator<=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object11cancel_freeEv(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:133:7
__claw_this_->cancel_free();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZN5godot8PtrToArgINS_6Rect2iEE7convertEPKv(struct godot::Rect2i* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
new (__claw_result_) godot::Rect2i(godot::PtrToArg<godot::Rect2i>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot15PackedByteArray10hex_encodeEv(godot::String* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:173:9
new (__claw_result_) godot::String(__claw_this_->hex_encode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23b_claw_ctor(godot::PtrToArg<bool>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
new (__claw_this_) godot::PtrToArg<bool>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodInfoeqERKS0_(struct godot::MethodInfo* __claw_this_, const struct godot::MethodInfo* p_method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:72:14
return __claw_this_->operator==(*p_method);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8SafeFlag6is_setEv(godot::SafeFlag* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:146:23
return __claw_this_->is_set();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23lE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedFloat32Array9push_backEd(godot::PackedFloat32Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:109:7
return __claw_this_->push_back(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPhE6encodeES1_Pv(uint8_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
godot::PtrToArg<unsigned char*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API godot::Object* __claw__ZNK5godot8Callable10get_objectEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:107:11
return (godot::Object*) __claw_this_->get_object();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDiEC1Ev(std::atomic<char32>* __claw_this_) {
// /usr/include/c++/13/atomic:1038:7
new (__claw_this_) std::atomic<char32>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Dictionary_claw_ctor(godot::PtrToArg<godot::Dictionary>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
new (__claw_this_) godot::PtrToArg<godot::Dictionary>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40ClockDirectionE23v_claw_dtor(godot::GetTypeInfo<const godot::ClockDirection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot5Basis10from_scaleERKNS_7Vector3E(struct godot::Basis* __claw_result_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:234:15
new (__claw_result_) godot::Basis(godot::Basis::from_scale(*p_scale));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_10MethodBindESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ESt16initializer_listISA_EmRKS5_RKSB_(std::unordered_map<godot::StringName,godot::MethodBind*>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>* __l, std::unordered_map<godot::StringName,godot::MethodBind*>::size_type __n, const std::unordered_map<godot::StringName,godot::MethodBind*>::hasher* __hf, const std::unordered_map<godot::StringName,godot::MethodBind*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:271:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::MethodBind*>(*__l, __n, *__hf, *__a);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4Node11ProcessModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessMode>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_get_variant_to_type_constructor(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:89:60

godot::internal::gdextension_interface_get_variant_to_type_constructor = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8NodePathEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::NodePath&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40OrientationE23v_claw_dtor(godot::GetTypeInfo<const godot::Orientation>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40ObjectE23Vb0E40SE40__get_value_typeE3EE23S1__claw_dtor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
__claw_this_->~__get_value_type();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40KeyModifierMask_claw_ctor(godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayC1EOS0_(godot::PackedInt64Array* __claw_this_, godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:104:2
new (__claw_this_) godot::PackedInt64Array(std::move(*other));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWratio01W10000000001() {
return sizeof(std::ratio<1,1000000000>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWInlineAlignmentR1() {
return alignof(godot::GetTypeInfo<godot::InlineAlignment&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRNS_11MethodFlagsEE8has_flagES2_(godot::BitField<godot::MethodFlags&>* __claw_this_, enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEC2Ev() {
return alignof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedColorArray5rfindERKNS_5ColorEl(godot::PackedColorArray* __claw_this_, const struct godot::Color* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:127:10
return __claw_this_->rfind(*value, from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_14MultiplayerAPIEEeqERKS2_(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Ref<godot::MultiplayerAPI>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:84:22
return __claw_this_->operator==(*p_r);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE8fetch_orEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZNK5godot8Callable6unbindEl(godot::Callable* __claw_result_, godot::Callable* __claw_this_, int64_t argcount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:114:11
new (__claw_result_) godot::Callable(__claw_this_->unbind(argcount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MIDIMessageE23v_claw_ctor(godot::GetTypeInfo<godot::MIDIMessage&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::GetTypeInfo<godot::MIDIMessage&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15KeyModifierMaskEEC1El(godot::BitField<godot::KeyModifierMask>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::KeyModifierMask>(p_value);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ESt16initializer_listIS6_EmRKS1_RKS7_(std::unordered_map<int,int>* __claw_this_, std::initializer_list<std::pair<const int,int>>* __l, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::hasher* __hf, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:271:7
new (__claw_this_) std::unordered_map<int,int>(*__l, __n, *__hf, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessMode1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessMode>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEmmEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWerror_code1() {
return alignof(std::__hash_base<unsigned long,std::error_code>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiEC1ERKS1_(godot::CharStringT<char32>* __claw_this_, const godot::CharStringT<char32>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:108:17
new (__claw_this_) godot::CharStringT<char32>(*p_str);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Projection9get_z_farEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:104:9
return __claw_this_->get_z_far();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEmmEi(std::__atomic_base<unsigned char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEC1Ev(godot::TypedArray<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:112:1
new (__claw_this_) godot::TypedArray<godot::PackedInt64Array>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEE10clear_flagES3_(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_, enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color7set_hsvEffff(struct godot::Color* __claw_this_, float p_h, float p_s, float p_v, float p_alpha) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:61:7
__claw_this_->set_hsv(p_h, p_s, p_v, p_alpha);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3igtERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:117:22
return __claw_this_->operator>(*p_v);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_return_val(struct godot::MethodInfo* __claw_this_, struct godot::PropertyInfo* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->return_val = *__claw_value_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf8_chars_and_len(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:110:61

godot::internal::gdextension_interface_string_new_with_utf8_chars_and_len = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40RIDE23v_claw_dtor(godot::GetTypeInfo<const godot::RID&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot11Transform3D5xformERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:86:25
new (__claw_result_) godot::Vector3(__claw_this_->xform(*p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_set_godotWTransform3D_origin(struct godot::Transform3D* __claw_this_, struct godot::Vector3* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:42:21

__claw_this_->origin = *__claw_value_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName10hex_to_intEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:344:10
return __claw_this_->hex_to_int();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot15PackedByteArray10decompressEll(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_, int64_t buffer_size, int64_t compression_mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:175:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->decompress(buffer_size, compression_mode));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB9quantizedEf(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_, real_t p_unit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:113:22
new (__claw_result_) godot::AABB(__claw_this_->quantized(p_unit));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EPKNS_6ObjectE(godot::Variant* __claw_this_, const godot::Object* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:201:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPiE6encodeES1_Pv(int32_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:229:1
godot::PtrToArg<int*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array8IteratorC1Ev(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:163:3
new (__claw_this_) godot::PackedVector3Array::Iterator();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZN5godotmlEiRKNS_8Vector2iE(struct godot::Vector2i* __claw_result_, const int32_t p_scalar, const struct godot::Vector2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:137:25
new (__claw_result_) godot::Vector2i(godot::operator*(p_scalar, *p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector24lerpERKS0_f(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_to, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:112:25
new (__claw_result_) godot::Vector2(__claw_this_->lerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedFloat64ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedFloat64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis7rotatedERKNS_7Vector3ENS_10EulerOrderE(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_euler, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:71:8
new (__claw_result_) godot::Basis(__claw_this_->rotated(*p_euler, p_order));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_7VariantEE6encodeES3_Pv(const godot::Variant* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
godot::PtrToArg<const godot::Variant&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB9is_finiteEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:68:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRNS_15KeyModifierMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEC1EPS1_(godot::Ref<godot::Tween>* __claw_this_, godot::Tween* p_reference) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:178:2
new (__claw_this_) godot::Ref<godot::Tween>(p_reference);
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot16ClassDBSingleton28_gde_binding_create_callbackEPvS1_(void* p_token, void* p_instance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
return (void*) godot::ClassDBSingleton::_gde_binding_create_callback(p_token, p_instance);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3mIERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:155:26
return (struct godot::Vector3*) (&__claw_this_->operator-=(*p_v));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWError1() {
return sizeof(godot::GetTypeInfo<const godot::Error>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8SafeFlagC2Eb() {
return sizeof(godot::SafeFlag);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKDivE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const char32&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API char16 __claw__ZNK5godot9CharProxyIDsEcvDsEv(godot::CharProxy<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:62:17
return __claw_this_->operator char16_t();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEC2Ev() {
return alignof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat32ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:165:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D16interpolate_withERKS0_f(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform, const real_t p_c) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:114:14
new (__claw_result_) godot::Transform2D(__claw_this_->interpolate_with(*p_transform, p_c));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector27rotatedEf(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t p_by) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:162:10
new (__claw_result_) godot::Vector2(__claw_this_->rotated(p_by));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8BitFieldINS_18PropertyUsageFlagsEEEE6encodeES3_Pv(godot::BitField<godot::PropertyUsageFlags>* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector41() {
return sizeof(godot::PtrToArg<godot::Vector4>);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D16interpolate_withERKS0_f(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Transform3D* p_transform, real_t p_c) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:111:14
new (__claw_result_) godot::Transform3D(__claw_this_->interpolate_with(*p_transform, p_c));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC1EOS7_RKS6_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __x, const std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_tree.h:958:7
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>(std::move(*__x), *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWArray1() {
return alignof(godot::GetTypeInfo<godot::Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_u32Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:199:7
__claw_this_->encode_u32(byte_offset, value);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt11char_traitsIcE2ltERKcS2_(const std::char_traits<char>::char_type* __c1, const std::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:366:7
return std::char_traits<char>::lt(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_dtor(godot::GetTypeInfo<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC2Ev() {
return alignof(std::vector<godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot7VariantcvNS_5Rect2EEv(struct godot::Rect2* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:231:2
new (__claw_result_) godot::Rect2(__claw_this_->operator Rect2());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE9fetch_addElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot4AABB8get_edgeEiRNS_7Vector3ES2_(struct godot::AABB* __claw_this_, int p_edge, struct godot::Vector3* r_from, struct godot::Vector3* r_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:98:7
__claw_this_->get_edge(p_edge, *r_from, *r_to);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Select1stW__1st_type0stdWpair0constWintWint11() {
return sizeof(std::__detail::_Select1st::__1st_type<std::pair<const int,int>>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EE6resizeEm(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>::size_type __new_size) {
// /usr/include/c++/13/bits/stl_vector.h:1013:7
__claw_this_->resize(__new_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedFloat32ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedFloat32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::list<godot::StringName>::size_type __claw__ZNKSt7__cxx114listIN5godot10StringNameESaIS2_EE8max_sizeEv(std::list<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_list.h:1155:7
return __claw_this_->max_size();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC2ERNS_16_Hashtable_allocISA_EE() {
return alignof(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3imlERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:98:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator*(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64ArrayeqERKS0_(godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:130:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB5mergeERKS0_(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::AABB* p_with) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:73:7
new (__claw_result_) godot::AABB(__claw_this_->merge(*p_with));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantComparator_claw_dtor(struct godot::VariantComparator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:341:8
__claw_this_->~VariantComparator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWunsignedWshort1() {
return sizeof(std::__hash_base<unsigned long,unsigned short>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23IE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<int>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWMouseButton1() {
return sizeof(godot::VariantCaster<godot::MouseButton>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_indexed() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:71:50

return godot::internal::gdextension_interface_variant_get_indexed;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector31() {
return sizeof(godot::PtrToArg<godot::Vector3>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3iltERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:115:22
return __claw_this_->operator<(*p_v);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::Object*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE4sizeEv(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:317:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37snappedES0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, struct godot::Vector3* const p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:101:10
new (__claw_result_) godot::Vector3(__claw_this_->snapped(*p_val));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE8exchangeElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayneERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:208:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64ArrayneERKS0_(godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:131:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot5Basis14get_axis_angleERNS_7Vector3ERf(struct godot::Basis* __claw_this_, struct godot::Vector3* r_axis, real_t* r_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:96:7
__claw_this_->get_axis_angle(*r_axis, *r_angle);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node19set_physics_processEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:181:7
__claw_this_->set_physics_process(enable);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedInt64ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedInt64Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:182:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedInt64Array&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0boolP1() {
return sizeof(godot::PtrToArg<bool*>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40pairE3EE23E24E40NE40stdE40NE40__detailE40SE40_Node_iteratorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0E23Vb0E23b_claw_dtor(std::pair<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12
__claw_this_->~pair();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDiE23compare_exchange_strongERDiDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40KeyE23v_claw_ctor(godot::GetTypeInfo<const godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_this_) godot::GetTypeInfo<const godot::Key>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0short1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<short>&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE9fetch_andElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGDExtensionBinding() {
return alignof(godot::GDExtensionBinding);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ENS4_12__sv_wrapperERKS3_() {
return sizeof(std::basic_string<char>);
}
}

namespace godot {
__CLAW_API float* __claw__ZN5godot18PackedFloat32ArrayixEl(godot::PackedFloat32Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:136:9
return (float*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_ctor(godot::GetTypeInfo<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
new (__claw_this_) godot::GetTypeInfo<godot::Quaternion>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIwE23compare_exchange_strongERwwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Callable_claw_ctor(godot::PtrToArg<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
new (__claw_this_) godot::PtrToArg<godot::Callable>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String4joinERKNS_17PackedStringArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedStringArray* parts) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:311:9
new (__claw_result_) godot::String(__claw_this_->join(*parts));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector21() {
return sizeof(godot::PtrToArg<godot::Vector2>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName6matchnERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* expr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:277:7
return __claw_this_->matchn(*expr);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIcEC1ERKS_(std::allocator<char>* __claw_this_, const std::allocator<char>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<char>(*__a);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::MouseButtonMask&>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWInlineAlignment1() {
return alignof(godot::VariantCaster<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::ConstIterator* __claw__ZN5godot18PackedVector2Array13ConstIteratorppEv(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:175:33
return (struct godot::PackedVector2Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWErrorR1() {
return alignof(godot::GetTypeInfo<godot::Error&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Quaternion_claw_dtor(godot::TypedArray<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:98:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE9fetch_andEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWProjectionR1() {
return alignof(godot::GetTypeInfo<const godot::Projection&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23L_claw_dtor(godot::TypedArray<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:86:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40MIDIMessage_claw_dtor(godot::PtrToArg<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE9fetch_addEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40VariantE23v_claw_dtor(godot::GetTypeInfo<const godot::Variant&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:201:8
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2iWAxisR1() {
return alignof(godot::GetTypeInfo<const godot::Vector2i::Axis&>);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZN5godot8PtrToArgIRKNS_16PackedInt64ArrayEE7convertEPKv(godot::PackedInt64Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
new (__claw_result_) godot::PackedInt64Array(godot::PtrToArg<const godot::PackedInt64Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEEEC2Ev() {
return sizeof(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt10_List_nodeIN5godot10StringNameEEEC1ERKS3_(std::allocator<std::_List_node<godot::StringName>>* __claw_this_, const std::allocator<std::_List_node<godot::StringName>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::_List_node<godot::StringName>>(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1EPKw(godot::String* __claw_this_, const wchar_t* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:270:2
new (__claw_this_) godot::String(from);
}
}

namespace godot {
__CLAW_API enum godot::Corner __claw__ZN5godot13VariantCasterINS_6CornerEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
return godot::VariantCaster<godot::Corner>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40BasisE23v_claw_dtor(godot::GetTypeInfo<const godot::Basis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Map_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Map_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_15PackedByteArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedByteArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:110:1
new (__claw_this_) godot::TypedArray<godot::PackedByteArray>(*p_array);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hash_node_base() {
return alignof(std::__detail::_Hash_node_base);
}
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC1ERKSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* __claw_this_, const std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1941:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>(*arg0);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23iE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<unsigned int>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBitField0godotWKeyModifierMask11() {
return sizeof(godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedColorArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedColorArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:118:1
new (__claw_this_) godot::TypedArray<godot::PackedColorArray>(*p_array);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName12get_base_dirEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:324:9
new (__claw_result_) godot::String(__claw_this_->get_base_dir());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_11MouseButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MouseButton>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWProcessThreadMessages1() {
return sizeof(godot::GetTypeInfo<godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharStringTE3EE23w_claw_dtor(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:84:7
__claw_this_->~CharStringT();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringC1EPKc(godot::String* __claw_this_, const char* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:269:2
new (__claw_this_) godot::String(from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0char321() {
return sizeof(godot::GetTypeInfo<char32>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedInt64ArrayWIterator() {
return alignof(godot::PackedInt64Array::Iterator);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIcE12is_lock_freeEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWColor1() {
return sizeof(godot::PtrToArg<godot::Color>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40VariantE40EE40TypeE23v_claw_dtor(godot::GetTypeInfo<godot::Variant::Type&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_placeholder_script_instance_update(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:175:64

godot::internal::gdextension_interface_placeholder_script_instance_update = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::Iterator* __claw__ZN5godot16PackedInt32Array5beginEv(struct godot::PackedInt32Array::Iterator* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:190:26
new (__claw_result_) godot::PackedInt32Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64Array4fillEl(godot::PackedInt64Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:114:7
__claw_this_->fill(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcE3setElRKc(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_index, const char* p_elem) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:199:22
__claw_this_->set(p_index, *p_elem);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWStringNameW_MethodBindings() {
return alignof(godot::StringName::_MethodBindings);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseIKN5godot10StringNameEPNS0_10MethodBindEEC2Ev() {
return sizeof(std::__pair_base<const godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector2Array5countERKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:130:10
return __claw_this_->count(*value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_10DictionaryEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis13rotated_localERKNS_7Vector3Ef(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:68:8
new (__claw_result_) godot::Basis(__claw_this_->rotated_local(*p_axis, p_angle));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedInt32ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedInt32Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedInt32Array&>();
}
}

namespace std {
__CLAW_API std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::size_type __claw__ZNKSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_tree.h:1033:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedVector2ArrayE23v_claw_ctor(godot::GetTypeInfo<const godot::PackedVector2Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:186:1
new (__claw_this_) godot::GetTypeInfo<const godot::PackedVector2Array&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261lE23v_claw_dtor(godot::GetTypeInfo<const unsigned long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW_Rb_tree_node0godotWStringName111() {
return alignof(std::allocator_traits<std::allocator<std::_Rb_tree_node<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPlE6encodeES1_Pv(int64_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
godot::PtrToArg<long*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMethodFlags1() {
return sizeof(godot::GetTypeInfo<const godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIwEaSERKS1_(godot::CharProxy<wchar_t>* __claw_this_, const godot::CharProxy<wchar_t>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:78:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIKNS_11MethodFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorC1Ev(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:160:3
new (__claw_this_) godot::List<godot::PropertyInfo>::Iterator();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIiEC1ERKNS_7VariantE(godot::TypedArray<int>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:84:1
new (__claw_this_) godot::TypedArray<int>(*p_variant);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE8fetch_orEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

__CLAW_API wint_t __claw_cE3AE40FE40getwchar() {
// /usr/include/wchar.h:942:15
return getwchar();
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt32Array5countEl(godot::PackedInt32Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:126:10
return __claw_this_->count(value);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot18PackedVector3Array5countERKNS_7Vector3E(godot::PackedVector3Array* __claw_this_, const struct godot::Vector3* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:130:10
return __claw_this_->count(*value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWPropertyHint1() {
return sizeof(godot::VariantCaster<godot::PropertyHint>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_dtor(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_ctor(godot::GetTypeInfo<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
new (__claw_this_) godot::GetTypeInfo<godot::Rect2>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node::InternalMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node::InternalMode&>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray3hasERKNS_5ColorE(godot::PackedColorArray* __claw_this_, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:119:7
return __claw_this_->has(*value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWBasis() {
return alignof(godot::Basis);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3imIERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:95:27
return (struct godot::Vector3i*) (&__claw_this_->operator-=(*p_v));
}
}

__CLAW_API const __int32_t** __claw_cE3AE40FE40__ctype_toupper_loc() {
// /usr/include/ctype.h:83:26
return (const __int32_t**) __ctype_toupper_loc();
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedInt32Array1() {
return alignof(godot::GetTypeInfo<godot::PackedInt32Array>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEppEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_7Vector4E(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector4* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:411:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23L_claw_ctor(godot::PtrToArg<long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
new (__claw_this_) godot::PtrToArg<long>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedInt32ArrayWIterator() {
return sizeof(godot::PackedInt32Array::Iterator);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEaNEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D12set_positionERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* position) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:74:7
__claw_this_->set_position(*position);
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZN5godot8PtrToArgIRKNS_16PackedInt32ArrayEE7convertEPKv(godot::PackedInt32Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
new (__claw_result_) godot::PackedInt32Array(godot::PtrToArg<const godot::PackedInt32Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldINS_18PropertyUsageFlagsEE8has_flagES1_(godot::BitField<godot::PropertyUsageFlags>* __claw_this_, enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64ArrayeqERKNS_7VariantE(godot::PackedInt64Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:127:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8CallableeqERKS0_(godot::Callable* __claw_this_, const godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:128:7
return __claw_this_->operator==(*other);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_info10__do_catchEPKS_PPvj(std::type_info* __claw_this_, const std::type_info* __thr_type, void** __thr_obj, unsigned int __outer) {
// /usr/include/c++/13/typeinfo:142:18
return __claw_this_->__do_catch(__thr_type, __thr_obj, __outer);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWColor11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Color>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_10ProjectionE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Projection* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:418:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot18PackedVector3Array13ConstIteratorptEv(struct godot::PackedVector3Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:174:33
return (const struct godot::Vector3*) __claw_this_->operator->();
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot16ClassDBSingleton23get_parent_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
return (godot::StringName*) (&godot::ClassDBSingleton::get_parent_class_static());
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse111() {
return sizeof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot11Transform2DixEi(struct godot::Transform2D* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:59:17
return (struct godot::Vector2*) (&__claw_this_->operator[](p_idx));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String8is_emptyEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:333:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector26lengthEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:86:9
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTransform2DR1() {
return sizeof(godot::GetTypeInfo<const godot::Transform2D&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWoutput_iterator_tag() {
return sizeof(std::output_iterator_tag);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261sE23v_claw_dtor(godot::GetTypeInfo<const unsigned short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::KeyModifierMask&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColormLEf(struct godot::Color* __claw_this_, float p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:87:7
__claw_this_->operator*=(p_scalar);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40AABBE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Color15is_equal_approxERKS0_(struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:94:7
return __claw_this_->is_equal_approx(*p_color);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0char3211() {
return sizeof(std::allocator_traits<std::allocator<char32>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_float64_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:139:64

return godot::internal::gdextension_interface_packed_float64_array_operator_index;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNKSt13__atomic_baseIwE4loadESt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SafeRefCount_claw_dtor(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:167:7
__claw_this_->~SafeRefCount();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEppEi(std::__atomic_base<char32>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodInfoC1ERKNS_12PropertyInfoENS_10StringNameE(struct godot::MethodInfo* __claw_this_, const struct godot::PropertyInfo* p_ret, godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:87:2
new (__claw_this_) godot::MethodInfo(*p_ret, *p_name);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWRect2iR1() {
return alignof(godot::GetTypeInfo<const godot::Rect2i&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRNS_11MethodFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector4iC1Eiiii(struct godot::Vector4i* __claw_this_, const int32_t p_x, const int32_t p_y, const int32_t p_z, const int32_t p_w) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:127:17
new (__claw_this_) godot::Vector4i(p_x, p_y, p_z, p_w);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot10MethodBind14get_hint_flagsEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:108:26
return __claw_this_->get_hint_flags();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringplERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:402:9
new (__claw_result_) godot::String(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::HorizontalAlignment __claw__ZN5godot8PtrToArgINS_19HorizontalAlignmentEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
return godot::PtrToArg<godot::HorizontalAlignment>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIKNS_11MethodFlagsEEC2El() {
return alignof(godot::BitField<const godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWColor1() {
return alignof(godot::GetTypeInfo<godot::Color>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector3EEC1ERKNS_5ArrayE(godot::TypedArray<godot::Vector3>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:94:1
new (__claw_this_) godot::TypedArray<godot::Vector3>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPmE6encodeES1_Pv(uint64_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
godot::PtrToArg<unsigned long*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItE8exchangeEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::Iterator* __claw__ZN5godot17PackedStringArray3endEv(struct godot::PackedStringArray::Iterator* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:195:26
new (__claw_result_) godot::PackedStringArray::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedFloat32Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:113:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat32Array>(*p_array);
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot5Color9to_argb32Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:52:11
return __claw_this_->to_argb32();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNode3DWRotationEditModeR1() {
return sizeof(godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform2DeqERKS0_(struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:106:7
return __claw_this_->operator==(*p_transform);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcE5clearEv(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:196:22
__claw_this_->clear();
}
}

__CLAW_API void __claw_set___locale_struct___ctype_tolower(struct __locale_struct* __claw_this_, const int* __claw_value_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

__claw_this_->__ctype_tolower = __claw_value_;
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection15set_perspectiveEffffb(struct godot::Projection* __claw_this_, real_t p_fovy_degrees, real_t p_aspect, real_t p_z_near, real_t p_z_far, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:76:7
__claw_this_->set_perspective(p_fovy_degrees, p_aspect, p_z_near, p_z_far, p_flip_fov);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector27projectERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:108:10
new (__claw_result_) godot::Vector2(__claw_this_->project(*p_to));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40AABB_claw_ctor(godot::PtrToArg<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
new (__claw_this_) godot::PtrToArg<godot::AABB>();
}
}

__CLAW_API int __claw__ZZ25pthread_attr_setguardsizeE6(pthread_attr_t* __attr, size_t __guardsize) {
// /usr/include/pthread.h:308:12
return pthread_attr_setguardsize(__attr, __guardsize);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MIDIMessageE23v_claw_dtor(godot::GetTypeInfo<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDltERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:84:7
return __claw_this_->operator<(*other);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10capitalizeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:304:9
new (__claw_result_) godot::String(__claw_this_->capitalize());
return __claw_result_;
}
}

__CLAW_API int __claw__ZZ25pthread_attr_getguardsizeE6(const pthread_attr_t* __attr, size_t* __guardsize) {
// /usr/include/pthread.h:303:12
return pthread_attr_getguardsize(__attr, __guardsize);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261rE23v_claw_dtor(godot::GetTypeInfo<const char&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot3RefINS_11Node3DGizmoEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyEaNEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedVector3Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:117:1
new (__claw_this_) godot::TypedArray<godot::PackedVector3Array>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector2E40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector2::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API godot::World3D* __claw__ZNK5godot3RefINS_7World3DEE3ptrEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:99:20
return (godot::World3D*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D12get_rotationEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:77:10
new (__claw_result_) godot::Vector3(__claw_this_->get_rotation());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodBindD1Ev(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:147:10
__claw_this_->~MethodBind();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIRKtE10encode_argEt(uint16_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:121:1
return godot::PtrToArg<const unsigned short&>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10Projection6PlanesEE6encodeES2_Pv(enum godot::Projection::Planes p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
godot::PtrToArg<godot::Projection::Planes>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8CallableneERKS0_(godot::Callable* __claw_this_, const godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:129:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array8IteratorC1Ev(struct godot::PackedInt32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:158:3
new (__claw_this_) godot::PackedInt32Array::Iterator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIaEC2Ev() {
return alignof(std::atomic<char>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsEaSERKS1_(godot::CowData<char16>* __claw_this_, const godot::CowData<char16>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:176:7
__claw_this_->operator=(*p_from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40ErrorE23v_claw_dtor(godot::GetTypeInfo<const godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node26set_process_shortcut_inputEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:193:7
__claw_this_->set_process_shortcut_input(enable);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15KeyModifierMaskEEC1El(godot::BitField<godot::KeyModifierMask&>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<godot::KeyModifierMask&>(p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2i9expand_toERKNS_8Vector2iE(struct godot::Rect2i* __claw_this_, const godot::Point2i* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:194:14
__claw_this_->expand_to(*p_vector);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIsED1Ev(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_List_node0godotWStringName1() {
return sizeof(std::_List_node<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23fE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<float>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<float>&>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40_Rb_tree_nodeE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::allocator<std::_Rb_tree_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot5Rect2cvNS_6Rect2iEEv(struct godot::Rect2i* __claw_result_, struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:362:2
new (__claw_result_) godot::Rect2i(__claw_this_->operator Rect2i());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32ArrayneERKS0_(godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:131:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPbE6encodeES1_Pv(bool* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
godot::PtrToArg<bool*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEE11instantiateEv(godot::Ref<godot::World3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot8PtrToArgIaE10encode_argEa(int8_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:120:1
return godot::PtrToArg<char>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWMethodFlagsR11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::MethodFlags&>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array8IteratorneERKS1_(struct godot::PackedInt64Array::Iterator* __claw_this_, const struct godot::PackedInt64Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:155:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt3setIN5godot10StringNameESt4lessIS1_ESaIS1_EEC2Ev() {
return sizeof(std::set<godot::StringName>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array8IteratoreqERKS1_(struct godot::PackedInt64Array::Iterator* __claw_this_, const struct godot::PackedInt64Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:154:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedFloat64Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18GDExtensionBinding12InitDataListD1Ev(godot::GDExtensionBinding::InitDataList* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:219:3
__claw_this_->~InitDataList();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector4iE40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_this_) godot::VariantCaster<godot::Vector4i::Axis>();
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZNK5godot6Node3D21get_visibility_parentEv(godot::NodePath* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:109:11
new (__claw_result_) godot::NodePath(__claw_this_->get_visibility_parent());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_8Vector3i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5Color14linear_to_srgbEv(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:182:23
new (__claw_result_) godot::Color(__claw_this_->linear_to_srgb());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion7inverseEv(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:63:13
new (__claw_result_) godot::Quaternion(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_15KeyModifierMaskEEC1El(godot::BitField<const godot::KeyModifierMask>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::KeyModifierMask>(p_value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_callable_custom_get_userdata(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:170:58

godot::internal::gdextension_interface_callable_custom_get_userdata = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7CowDataIcE8is_emptyEv(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:197:22
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot6Object19property_get_revertERKNS_10StringNameE(godot::Variant* __claw_result_, godot::Object* __claw_this_, const godot::StringName* property) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:75:10
new (__claw_result_) godot::Variant(__claw_this_->property_get_revert(*property));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37projectERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:137:25
new (__claw_result_) godot::Vector3(__claw_this_->project(*p_to));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEEC2EPKS6_m() {
return sizeof(std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3irMERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:101:27
return (struct godot::Vector3i*) (&__claw_this_->operator%=(*p_v));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBitField0godotWMethodFlags11() {
return sizeof(godot::PtrToArg<godot::BitField<godot::MethodFlags>>);
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::ConstIterator* __claw__ZNK5godot17PackedStringArray5beginEv(struct godot::PackedStringArray::ConstIterator* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:199:31
new (__claw_result_) godot::PackedStringArray::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection24adjust_perspective_znearEf(struct godot::Projection* __claw_this_, real_t p_new_znear) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:83:7
__claw_this_->adjust_perspective_znear(p_new_znear);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261qE23v_claw_dtor(godot::GetTypeInfo<const char16&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:151:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::Iterator* __claw__ZN5godot16PackedInt64Array5beginEv(struct godot::PackedInt64Array::Iterator* __claw_result_, godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:190:26
new (__claw_result_) godot::PackedInt64Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEppEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringgtERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:400:7
return __claw_this_->operator>(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArrayeqERKNS_7VariantE(godot::PackedStringArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:129:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWshortP1() {
return sizeof(godot::PtrToArg<unsigned short*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40InlineAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::InlineAlignment&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<godot::InlineAlignment&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Transform2D_claw_ctor(godot::PtrToArg<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
new (__claw_this_) godot::PtrToArg<godot::Transform2D>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1ERKNS_10QuaternionERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:230:2
new (__claw_this_) godot::Basis(*p_quaternion, *p_scale);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8replacenERKS0_S2_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* what, const godot::String* forwhat) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:299:9
new (__claw_result_) godot::String(__claw_this_->replacen(*what, *forwhat));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_7Vector3E(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector3* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:408:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::ctype<char>::char_type __claw__ZNKSt5ctypeIcE7tolowerEc(std::ctype<char>* __claw_this_, std::ctype<char>::char_type __c) {
// /usr/include/c++/13/bits/locale_facets.h:843:7
return __claw_this_->tolower(__c);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsE9fetch_subEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEppEi(std::__atomic_base<unsigned long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIiEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<int>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String13to_snake_caseEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:307:9
new (__claw_result_) godot::String(__claw_this_->to_snake_case());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWshort1() {
return sizeof(std::__hash_base<unsigned long,short>);
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math6is_nanEd(double p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:604:13
return godot::Math::is_nan(p_val);
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_editor_remove_plugin(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:190:51

godot::internal::gdextension_interface_editor_remove_plugin = __claw_value_;
}
}
}

namespace godot {
namespace Math {
__CLAW_API bool __claw__ZN5godot4Math6is_nanEf(float p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:600:13
return godot::Math::is_nan(p_val);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RIDgtERKS0_(godot::RID* __claw_this_, const godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:86:7
return __claw_this_->operator>(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_latin1_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:104:57

return godot::internal::gdextension_interface_string_new_with_latin1_chars;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEeOEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_16PackedInt64ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:402:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot12PropertyInfoEED1Ev(std::allocator<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC1ERKS4_mmRKS3_(std::basic_string<char16>* __claw_this_, const std::basic_string<char16>* __str, std::basic_string<char16>::size_type __pos, std::basic_string<char16>::size_type __n, const std::allocator<char16>* __a) {
// /usr/include/c++/13/bits/basic_string.h:599:7
new (__claw_this_) std::basic_string<char16>(*__str, __pos, __n, *__a);
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot8PtrToArgINS_5BasisEE7convertEPKv(struct godot::Basis* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
new (__claw_result_) godot::Basis(godot::PtrToArg<godot::Basis>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40DictionaryE40SE40_MethodBindings_claw_dtor(struct godot::Dictionary::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:51:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_6Rect2iE(godot::Variant* __claw_this_, const struct godot::Rect2i* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:184:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4Node21ProcessThreadMessagesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW__detailW_Mod_range_hashing1() {
return sizeof(std::__type_identity<std::__detail::_Mod_range_hashing>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPcE6encodeES1_Pv(char* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:219:1
godot::PtrToArg<char*>::encode(p_var, p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName11strip_edgesEbb(godot::String* __claw_result_, godot::StringName* __claw_this_, bool left, bool right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:303:9
new (__claw_result_) godot::String(__claw_this_->strip_edges(left, right));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32ArrayeqERKS0_(godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:130:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodePath1() {
return alignof(godot::GetTypeInfo<godot::NodePath>);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt9type_info15__is_function_pEv(std::type_info* __claw_this_) {
// /usr/include/c++/13/typeinfo:134:18
return __claw_this_->__is_function_p();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_7Vector2E(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Vector2* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:404:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Node::DuplicateFlags __claw__ZN5godot13VariantCasterINS_4Node14DuplicateFlagsEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
return godot::VariantCaster<godot::Node::DuplicateFlags>::cast(*p_variant);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Rehash_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWintegral_constant0boolWtrue11() {
return alignof(std::__detail::_Rehash_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector2ArrayE40SE40ConstIterator_claw_dtor(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:170:9
__claw_this_->~ConstIterator();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEppEi(std::__atomic_base<unsigned long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWJoyAxis1() {
return alignof(godot::PtrToArg<godot::JoyAxis>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0char11() {
return sizeof(std::allocator_traits<std::allocator<char>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEEltERKS2_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Ref<godot::InputEvent>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:81:22
return __claw_this_->operator<(*p_r);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform2DneERKS0_(struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:107:7
return __claw_this_->operator!=(*p_transform);
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot10Projection21get_projection_planesERKNS_11Transform3DE(godot::Array* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Transform3D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:110:8
new (__claw_result_) godot::Array(__claw_this_->get_projection_planes(*p_transform));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlags_claw_ctor(godot::PtrToArg<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::PtrToArg<godot::BitField<godot::MethodFlags>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6StringD1Ev(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:273:2
__claw_this_->~String();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D20get_rotation_degreesEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:79:10
new (__claw_result_) godot::Vector3(__claw_this_->get_rotation_degrees());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringltERKS0_(godot::String* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:398:7
return __claw_this_->operator<(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32ArrayC1EOS0_(godot::PackedFloat32Array* __claw_this_, godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:104:2
new (__claw_this_) godot::PackedFloat32Array(std::move(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector2WAxis1() {
return sizeof(godot::PtrToArg<godot::Vector2::Axis>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_set_named(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:65:48

godot::internal::gdextension_interface_variant_set_named = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_11MIDIMessageEE6encodeES1_Pv(enum godot::MIDIMessage p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
godot::PtrToArg<godot::MIDIMessage>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AS_claw_dtor(godot::PtrToArg<short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:227:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRNS_15MouseButtonMaskEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWKey1() {
return alignof(godot::PtrToArg<godot::Key>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEppEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKS9_RKS7_RKS3_() {
return alignof(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char3211() {
return alignof(std::__hash_base<unsigned long,std::basic_string_view<char32>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName11trim_suffixERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* suffix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:351:9
new (__claw_result_) godot::String(__claw_this_->trim_suffix(*suffix));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array13ConstIteratorneERKS1_(struct godot::PackedVector3Array::ConstIterator* __claw_this_, const struct godot::PackedVector3Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:185:23
return __claw_this_->operator!=(*b);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW_Char_types0char1() {
return sizeof(__gnu_cxx::_Char_types<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector3_claw_ctor(godot::PtrToArg<const godot::Vector3&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:136:1
new (__claw_this_) godot::PtrToArg<const godot::Vector3&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SafeFlag_claw_dtor(godot::SafeFlag* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:140:7
__claw_this_->~SafeFlag();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23I_claw_ctor(std::__detail::_Select1st::__1st_type<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
new (__claw_this_) std::__detail::_Select1st::__1st_type<std::pair<const int,int>>();
}
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIcE21compare_exchange_weakERccSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8BitFieldINS_15KeyModifierMaskEEEE6encodeES3_Pv(godot::BitField<godot::KeyModifierMask>* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40PackedColorArray_claw_dtor(godot::TypedArray<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:118:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot18PackedFloat64Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:120:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EE6resizeEmRKS2_(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>::size_type __new_size, const std::list<godot::StringName>::value_type* __x) {
// /usr/include/c++/13/bits/stl_list.h:1182:7
__claw_this_->resize(__new_size, *__x);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23dE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<double>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:374:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<double>&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio01W10000001() {
return alignof(std::ratio<1,1000000>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIwEC2Ev() {
return sizeof(std::atomic<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node9add_childEPS0_bNS0_12InternalModeE(godot::Node* __claw_this_, godot::Node* node, bool force_readable_name, enum godot::Node::InternalMode internal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:145:7
__claw_this_->add_child(node, force_readable_name, internal);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIhEC1Eh(std::atomic<unsigned char>* __claw_this_, std::atomic<unsigned char>::__integral_type __i) {
// /usr/include/c++/13/atomic:764:17
new (__claw_this_) std::atomic<unsigned char>(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIcED1Ev(std::__new_allocator<char>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
__CLAW_API std::vector<godot::PropertyInfo>::size_type __claw__ZNKSt6vectorIN5godot12PropertyInfoESaIS1_EE8max_sizeEv(std::vector<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:998:7
return __claw_this_->max_size();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4coshEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:339:14
return godot::Math::cosh(p_x);
}
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40initializer_listE3EE23I_claw_dtor(std::initializer_list<int>* __claw_this_) {
// /usr/include/c++/13/initializer_list:45:11
__claw_this_->~initializer_list();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_8Vector2i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIjEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:369:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<unsigned int>>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail19_Node_iterator_baseISt4pairIKN5godot10StringNameEPNS2_10MethodBindEELb0EEC1Ev(std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:392:7
new (__claw_this_) std::__detail::_Node_iterator_base<std::pair<const godot::StringName,godot::MethodBind*>,false>();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ENS4_12__sv_wrapperERKS3_() {
return alignof(std::basic_string<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40MouseButton_claw_dtor(godot::VariantCaster<godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~VariantCaster();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_List_node_base() {
return sizeof(std::__detail::_List_node_base);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_worker_thread_pool_add_native_group_task() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:131:67

return godot::internal::gdextension_interface_worker_thread_pool_add_native_group_task;
}
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_byte_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:134:66

godot::internal::gdextension_interface_packed_byte_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Array6reduceERKNS_8CallableERKNS_7VariantE(godot::Variant* __claw_result_, godot::Array* __claw_this_, const godot::Callable* method, const godot::Variant* accum) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:195:10
new (__claw_result_) godot::Variant(__claw_this_->reduce(*method, *accum));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWStringW_MethodBindings() {
return sizeof(godot::String::_MethodBindings);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0short1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<short>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWDictionary1() {
return sizeof(godot::GetTypeInfo<godot::Dictionary>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseItEC2Ev() {
return sizeof(std::__atomic_base<unsigned short>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261wE23v_claw_dtor(godot::GetTypeInfo<const char32&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:152:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWunsignedWlongWlong1() {
return sizeof(std::__hash_base<unsigned long,unsigned long long>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char1611() {
return sizeof(std::__hash_base<unsigned long,std::basic_string_view<char16>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array13ConstIteratoreqERKS1_(struct godot::PackedVector3Array::ConstIterator* __claw_this_, const struct godot::PackedVector3Array::ConstIterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:184:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector3iWAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector3i::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector4iWAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector4i::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRKNS_11MethodFlagsEEC2El() {
return alignof(godot::BitField<const godot::MethodFlags&>);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot18PackedFloat32Array11_native_ptrEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:100:36
return __claw_this_->_native_ptr();
}
}

namespace __gnu_cxx {
__CLAW_API void __claw__ZN9__gnu_cxx12__atomic_addEPVii(_Atomic_word* __mem, int __val) {
// /usr/include/c++/13/ext/atomicity.h:70:3
__gnu_cxx::__atomic_add(__mem, __val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMouseButtonR1() {
return alignof(godot::GetTypeInfo<const godot::MouseButton&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector2iWAxis1() {
return alignof(godot::GetTypeInfo<godot::Vector2i::Axis>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjE9fetch_xorEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIyE21compare_exchange_weakERyySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWrandom_access_iterator_tag() {
return sizeof(std::random_access_iterator_tag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedVector3ArrayEEC1Ev(godot::TypedArray<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:117:1
new (__claw_this_) godot::TypedArray<godot::PackedVector3Array>();
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot7CowDataIDiE3getEl(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:211:26
return (char32*) (&__claw_this_->get(p_index));
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4coshEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:336:15
return godot::Math::cosh(p_x);
}
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIcE21compare_exchange_weakERccSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWQuaternionR1() {
return alignof(godot::GetTypeInfo<const godot::Quaternion&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEaSEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API int64_t* __claw__ZN5godot16PackedInt64ArrayixEl(godot::PackedInt64Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:136:11
return (int64_t*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt64Array5countEl(godot::PackedInt64Array* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:126:10
return __claw_this_->count(value);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZN5godot15PackedByteArray9duplicateEv(godot::PackedByteArray* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:164:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->duplicate());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwEaSERKS1_(godot::CharStringT<wchar_t>* __claw_this_, const godot::CharStringT<wchar_t>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:109:22
__claw_this_->operator=(*p_str);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23cE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:365:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<unsigned char>&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_18PropertyUsageFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::PropertyUsageFlags>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_u16El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:179:10
return __claw_this_->decode_u16(byte_offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPaE6encodeES1_Pv(int8_t* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
godot::PtrToArg<char*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIhEC1Ev(std::atomic<unsigned char>* __claw_this_) {
// /usr/include/c++/13/atomic:758:7
new (__claw_this_) std::atomic<unsigned char>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP111() {
return sizeof(std::allocator_traits<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWlong1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>);
}
}

namespace godot {
__CLAW_API real_t* __claw__ZN5godot7Vector2ixEi(struct godot::Vector2* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:65:25
return (real_t*) (&__claw_this_->operator[](p_idx));
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEmIEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray5clearEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:158:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis15rotate_to_alignENS_7Vector3ES1_(struct godot::Basis* __claw_this_, struct godot::Vector3* p_start_direction, struct godot::Vector3* p_end_direction) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:81:7
__claw_this_->rotate_to_align(*p_start_direction, *p_end_direction);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIfEC1Ev(godot::TypedArray<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:87:1
new (__claw_this_) godot::TypedArray<float>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2::Axis&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE8exchangeEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10c_unescapeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:345:9
new (__claw_result_) godot::String(__claw_this_->c_unescape());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWCorner1() {
return sizeof(godot::VariantCaster<godot::Corner>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE8exchangeEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot10Dictionary6valuesEv(godot::Array* __claw_result_, godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:106:8
new (__claw_result_) godot::Array(__claw_this_->values());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot3RefINS_10InputEventEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldINS_15KeyModifierMaskEEC2El() {
return sizeof(godot::BitField<godot::KeyModifierMask>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRNS_18PropertyUsageFlagsEE8has_flagES2_(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_, enum godot::PropertyUsageFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_mem_alloc() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:48:41

return godot::internal::gdextension_interface_mem_alloc;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWDuplicateFlagsR1() {
return alignof(godot::GetTypeInfo<godot::Node::DuplicateFlags&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEpLEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse11() {
return sizeof(std::__detail::_Insert_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot6Node3DC2EPKc() {
return sizeof(godot::Node3D);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEE5unrefEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:203:7
__claw_this_->unref();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2As_claw_ctor(godot::PtrToArg<unsigned short*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:226:1
new (__claw_this_) godot::PtrToArg<unsigned short*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__success_type0longWdouble1() {
return sizeof(std::__success_type<long double>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot7Variant9stringifyEv(godot::String* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:325:9
new (__claw_result_) godot::String(__claw_this_->stringify());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7Vector2EE6encodeES1_Pv(struct godot::Vector2* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
godot::PtrToArg<godot::Vector2>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_15MouseButtonMaskEE10clear_flagES3_(godot::BitField<const godot::MouseButtonMask&>* __claw_this_, const enum godot::MouseButtonMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8SafeFlag3setEv(godot::SafeFlag* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:150:23
__claw_this_->set();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Equality0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Equality<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE9fetch_addEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedColorArrayW_MethodBindings() {
return sizeof(godot::PackedColorArray::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::Node::ProcessThreadMessages&>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_7Vector2EEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Vector2>);
}
}

namespace godot {
__CLAW_API godot::InputEvent* __claw__ZNK5godot3RefINS_10InputEventEEptEv(godot::Ref<godot::InputEvent>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:95:20
return (godot::InputEvent*) __claw_this_->operator->();
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1EOS9_OSaISt13_Rb_tree_nodeIS1_EE(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __x, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Node_allocator* __a) {
// /usr/include/c++/13/bits/stl_tree.h:696:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>(std::move(*__x), std::move(*__a));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB10intersectsERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:69:22
return __claw_this_->intersects(*p_aabb);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40AABBE23v_claw_dtor(godot::GetTypeInfo<const godot::AABB&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:168:1
__claw_this_->~GetTypeInfo();
}
}

__CLAW_API int __claw__ZZ16putchar_unlockedE3(int __c) {
// /usr/include/stdio.h:632:12
return putchar_unlocked(__c);
}

namespace godot {
__CLAW_API struct godot::PackedInt64Array::ConstIterator* __claw__ZN5godot16PackedInt64Array13ConstIteratormmEv(struct godot::PackedInt64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:174:33
return (struct godot::PackedInt64Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE9fetch_andEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_5BasisEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Basis>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw_get_godotWPropertyInfo_class_name(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return (godot::StringName*)&__claw_this_->class_name;
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIDiE12is_lock_freeEv(std::__atomic_base<char32>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23bE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<bool>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<bool>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWMethodFlagsR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags&>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPfE6encodeES1_Pv(float* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
godot::PtrToArg<float*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE9fetch_addEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Node3DGizmoEEC1ERKNS_7VariantE(godot::TypedArray<godot::Node3DGizmo>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:46:17
new (__claw_this_) godot::TypedArray<godot::Node3DGizmo>(*p_variant);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWatomic_flag() {
return sizeof(std::atomic_flag);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZN5godot8PtrToArgIRKNS_10QuaternionEE7convertEPKv(struct godot::Quaternion* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
new (__claw_result_) godot::Quaternion(godot::PtrToArg<const godot::Quaternion&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWvoidP1() {
return alignof(godot::PtrToArg<const void*>);
}
}

namespace godot {
__CLAW_API godot::CowData<char16>::Size __claw__ZNK5godot7CowDataIDsE5countERKDs(godot::CowData<char16>* __claw_this_, const char16* p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:244:7
return __claw_this_->count(*p_val);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_class_name(struct godot::PropertyInfo* __claw_this_, godot::StringName* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->class_name = *__claw_value_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRKNS_15KeyModifierMaskEEC2El() {
return alignof(godot::BitField<const godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName8is_emptyEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:319:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray4findEll(godot::PackedByteArray* __claw_this_, int64_t value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:165:10
return __claw_this_->find(value, from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedStringArray_claw_ctor(godot::PtrToArg<godot::PackedStringArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
new (__claw_this_) godot::PtrToArg<godot::PackedStringArray>();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZN5godot8PtrToArgIRKNS_11Transform2DEE7convertEPKv(struct godot::Transform2D* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:138:1
new (__claw_result_) godot::Transform2D(godot::PtrToArg<const godot::Transform2D&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIbE5storeEbSt12memory_order(std::atomic<bool>* __claw_this_, bool __i, std::memory_order __m) {
// /usr/include/c++/13/atomic:103:5
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection21create_frustum_aspectEffNS_7Vector2Effb(struct godot::Projection* __claw_result_, real_t p_size, real_t p_aspect, struct godot::Vector2* p_offset, real_t p_near, real_t p_far, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:93:20
new (__claw_result_) godot::Projection(godot::Projection::create_frustum_aspect(p_size, p_aspect, *p_offset, p_near, p_far, p_flip_fov));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWunsignedWint1() {
return sizeof(std::__hash_base<unsigned long,unsigned int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWDefaultAllocator() {
return alignof(godot::DefaultAllocator);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIDsEC2Ev() {
return alignof(std::__atomic_base<char16>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWHorizontalAlignmentR1() {
return sizeof(godot::GetTypeInfo<godot::HorizontalAlignment&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePath8is_emptyEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:104:7
return __claw_this_->is_empty();
}
}

namespace std {
__CLAW_API void __claw__ZNSt11char_traitsIDsE6assignERDsRKDs(std::char_traits<char16>::char_type* __c1, const std::char_traits<char16>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:770:7
std::char_traits<char16>::assign(*__c1, *__c2);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEppEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:401:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godotplEPKcRKNS_6StringE(godot::String* __claw_result_, const char* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:477:8
new (__claw_result_) godot::String(godot::operator+(p_chr, *p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot7CowDataIDiE5get_mEl(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:205:20
return (char32*) (&__claw_this_->get_m(p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKfE6encodeEfPv(float p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
godot::PtrToArg<const float&>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23L_claw_ctor(std::__success_type<long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
new (__claw_this_) std::__success_type<long>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray13ConstIteratorC1ERKS1_(struct godot::PackedStringArray::ConstIterator* __claw_this_, const struct godot::PackedStringArray::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:186:3
new (__claw_this_) godot::PackedStringArray::ConstIterator(*p_it);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseImE23compare_exchange_strongERmmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE9fetch_xorEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEppEi(std::__atomic_base<long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:385:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
__CLAW_API std::vector<godot::Variant>::size_type __claw__ZNKSt6vectorIN5godot7VariantESaIS1_EE4sizeEv(std::vector<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:992:7
return __claw_this_->size();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Equality0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Equality<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D20set_notify_transformEb(godot::Node3D* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:123:7
__claw_this_->set_notify_transform(enable);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKmE6encodeEmPv(uint64_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
godot::PtrToArg<const unsigned long&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_15KeyModifierMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::KeyModifierMask>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_property() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:182:70

return godot::internal::gdextension_interface_classdb_register_extension_class_property;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWClockDirection1() {
return alignof(godot::GetTypeInfo<const godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedStringArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedStringArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:57:16
new (__claw_this_) godot::PackedStringArray::_MethodBindings();
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZN5godot8PtrToArgIRKNS_5PlaneEE7convertEPKv(struct godot::Plane* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
new (__claw_result_) godot::Plane(godot::PtrToArg<const godot::Plane&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4i_claw_dtor(godot::PtrToArg<godot::Vector4i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40VariantE40EE40Type_claw_dtor(godot::PtrToArg<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_get_instance_from_id(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:167:56

godot::internal::gdextension_interface_object_get_instance_from_id = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNameplERKNS_6StringE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:368:9
new (__claw_result_) godot::String(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis8set_zeroEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:192:22
__claw_this_->set_zero();
}
}

namespace godot {
__CLAW_API godot::PackedVector3Array* __claw__ZNK5godot11Transform3D5xformERKNS_18PackedVector3ArrayE(godot::PackedVector3Array* __claw_result_, struct godot::Transform3D* __claw_this_, const godot::PackedVector3Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:88:36
new (__claw_result_) godot::PackedVector3Array(__claw_this_->xform(*p_array));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse111() {
return alignof(std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Signal_claw_ctor(godot::PtrToArg<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
new (__claw_this_) godot::PtrToArg<godot::Signal>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array8IteratorC1Ev(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:158:3
new (__claw_this_) godot::PackedFloat64Array::Iterator();
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot8NodePath8get_nameEl(godot::StringName* __claw_result_, godot::NodePath* __claw_this_, int64_t idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:97:13
new (__claw_result_) godot::StringName(__claw_this_->get_name(idx));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_booleanize() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:78:50

return godot::internal::gdextension_interface_variant_booleanize;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE9fetch_andEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIDiE21compare_exchange_weakERDiDiSt12memory_orderS2_(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type* __i1, std::__atomic_base<char32>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_8NodePathEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWError1() {
return alignof(godot::GetTypeInfo<godot::Error>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godotplEPKwRKNS_6StringE(godot::String* __claw_result_, const wchar_t* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:478:8
new (__claw_result_) godot::String(godot::operator+(p_chr, *p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot17PackedStringArrayixEl(godot::PackedStringArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:138:10
return (godot::String*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40Key_claw_dtor(godot::VariantCaster<godot::Key>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10EulerOrderEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::EulerOrder&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorC1EPNS3_7ElementE(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_E) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:159:3
new (__claw_this_) godot::List<godot::PropertyInfo>::Iterator(p_E);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE8fetch_orEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdW_Rb_tree_key_compare0stdWless0godotWStringName111() {
return alignof(std::__type_identity<std::_Rb_tree_key_compare<std::less<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40CallableE23v_claw_ctor(godot::GetTypeInfo<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
new (__claw_this_) godot::GetTypeInfo<godot::Callable>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40SideE23v_claw_ctor(godot::GetTypeInfo<const godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<const godot::Side>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedVector2Array1() {
return sizeof(godot::PtrToArg<godot::PackedVector2Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40ErrorE23v_claw_ctor(godot::GetTypeInfo<godot::Error&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::GetTypeInfo<godot::Error&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWKeyModifierMaskR1() {
return sizeof(godot::GetTypeInfo<const godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot6MemoryC2Ev() {
return sizeof(godot::Memory);
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot7CowDataIDsE3getEl(godot::CowData<char16>* __claw_this_, godot::CowData<char16>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:211:26
return (char16*) (&__claw_this_->get(p_index));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWallocator_traits0stdWallocator0godotWStringName11() {
return sizeof(std::allocator_traits<std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40DictionaryE23v_claw_dtor(godot::GetTypeInfo<const godot::Dictionary&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection24create_orthogonal_aspectEffffb(struct godot::Projection* __claw_result_, real_t p_size, real_t p_aspect, real_t p_znear, real_t p_zfar, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:91:20
new (__claw_result_) godot::Projection(godot::Projection::create_orthogonal_aspect(p_size, p_aspect, p_znear, p_zfar, p_flip_fov));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node19is_displayed_foldedEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:209:7
return __claw_this_->is_displayed_folded();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Quaternion13is_normalizedEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:62:7
return __claw_this_->is_normalized();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEEC2Ev() {
return alignof(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_15PackedByteArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedByteArray>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:110:1
new (__claw_this_) godot::TypedArray<godot::PackedByteArray>(*p_variant);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDiSt11char_traitsIDiEEC1EPKDim(std::basic_string_view<char32>* __claw_this_, const char32* __str, std::basic_string_view<char32>::size_type __len) {
// /usr/include/c++/13/string_view:146:7
new (__claw_this_) std::basic_string_view<char32>(__str, __len);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIwEC1Ew(std::atomic<wchar_t>* __claw_this_, std::atomic<wchar_t>::__integral_type __i) {
// /usr/include/c++/13/atomic:971:17
new (__claw_this_) std::atomic<wchar_t>(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array8IteratoreqERKS1_(struct godot::PackedVector3Array::Iterator* __claw_this_, const struct godot::PackedVector3Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:159:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2i_claw_dtor(godot::TypedArray<godot::Vector2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:91:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE8exchangeEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot16PackedColorArray11_native_ptrEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:102:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot4Node28get_physics_process_priorityEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:189:10
return __claw_this_->get_physics_process_priority();
}
}

__CLAW_API unsigned long long __claw_alignof___iseqsig_type0float1() {
return alignof(__iseqsig_type<float>);
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Callable_claw_ctor(godot::PtrToArg<const godot::Callable&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
new (__claw_this_) godot::PtrToArg<const godot::Callable&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWunsignedWlongWlong1() {
return alignof(std::__hash_base<unsigned long,unsigned long long>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_15KeyModifierMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::KeyModifierMask>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWdoubleR1() {
return sizeof(godot::PtrToArg<const double&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIbE23compare_exchange_strongERbbSt12memory_orderS2_(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261l_claw_dtor(godot::PtrToArg<const unsigned long&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:126:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector410normalizedEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:87:10
new (__claw_result_) godot::Vector4(__claw_this_->normalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6SignalEEC1ERKNS_7VariantE(godot::TypedArray<godot::Signal>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:107:1
new (__claw_this_) godot::TypedArray<godot::Signal>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVariantWTypeR1() {
return alignof(godot::GetTypeInfo<const godot::Variant::Type&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPdE6encodeES1_Pv(double* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
godot::PtrToArg<double*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNKSt13__atomic_baseIbE4loadESt12memory_order(std::__atomic_base<bool>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKcm(std::basic_string_view<char>* __claw_this_, const char* __str, std::basic_string_view<char>::size_type __len) {
// /usr/include/c++/13/string_view:146:7
new (__claw_this_) std::basic_string_view<char>(__str, __len);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::char_type* __claw__ZN9__gnu_cxx11char_traitsIwE4moveEPwPKwm(__gnu_cxx::char_traits<wchar_t>::char_type* __s1, const __gnu_cxx::char_traits<wchar_t>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:153:7
return (__gnu_cxx::char_traits<wchar_t>::char_type*) __gnu_cxx::char_traits<wchar_t>::move(__s1, __s2, __n);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt9type_infoC2EPKc() {
return alignof(std::type_info);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11CharStringTIDiEC2Ev() {
return alignof(godot::CharStringT<char32>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedInt64Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40HorizontalAlignment_claw_dtor(godot::PtrToArg<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE231E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIwEC1Ev(std::atomic<wchar_t>* __claw_this_) {
// /usr/include/c++/13/atomic:965:7
new (__claw_this_) std::atomic<wchar_t>();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVKSt13__atomic_baseIDsE4loadESt12memory_order(std::__atomic_base<char16>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWStringR1() {
return alignof(godot::PtrToArg<const godot::String&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVariantR1() {
return alignof(godot::GetTypeInfo<const godot::Variant&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8ObjectIDC1Ev(godot::ObjectID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:55:17
new (__claw_this_) godot::ObjectID();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayeqERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:207:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Array>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVariantWType1() {
return sizeof(godot::PtrToArg<godot::Variant::Type>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB26class_has_integer_constantERKNS_10StringNameES3_(const godot::StringName* _class, const godot::StringName* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_has_integer_constant(*_class, *name);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_booleanize(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:78:50

godot::internal::gdextension_interface_variant_booleanize = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0voidP1() {
return sizeof(godot::PtrToArg<void*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5PlaneC1ERKNS_7Vector3ES3_S3_NS_14ClockDirectionE(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_point1, const struct godot::Vector3* p_point2, const struct godot::Vector3* p_point3, enum godot::ClockDirection p_dir) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:93:17
new (__claw_this_) godot::Plane(*p_point1, *p_point2, *p_point3, p_dir);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_11Node3DGizmoEEC1Ev(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref<godot::Node3DGizmo>();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColormlEf(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, float p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:85:8
new (__claw_result_) godot::Color(__claw_this_->operator*(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_18PackedFloat64ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String16is_relative_pathEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:336:7
return __claw_this_->is_relative_path();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D15orthonormalizedEv(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:100:14
new (__claw_result_) godot::Transform2D(__claw_this_->orthonormalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D15orthonormalizedEv(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:77:14
new (__claw_result_) godot::Transform3D(__claw_this_->orthonormalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0floatP1() {
return sizeof(godot::PtrToArg<float*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIKNS_15MouseButtonMaskEEC2El() {
return alignof(godot::BitField<const godot::MouseButtonMask>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot7VariantcvNS_8Vector3iEEv(struct godot::Vector3i* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:234:2
new (__claw_result_) godot::Vector3i(__claw_this_->operator Vector3i());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Map_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse1WstdWequal_to0int1int1() {
return sizeof(std::__detail::_Map_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8ObjectIDC1Em(godot::ObjectID* __claw_this_, const uint64_t p_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:56:26
new (__claw_this_) godot::ObjectID(p_id);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8ObjectIDC1El(godot::ObjectID* __claw_this_, const int64_t p_id) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object_id.hpp:57:26
new (__claw_this_) godot::ObjectID(p_id);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEmIEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiEaSERKS1_(godot::CowData<char32>* __claw_this_, const godot::CowData<char32>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:176:7
__claw_this_->operator=(*p_from);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot4itosEl(godot::String* __claw_result_, int64_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:482:8
new (__claw_result_) godot::String(godot::itos(p_val));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ad_claw_dtor(godot::PtrToArg<double*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3Array8IteratorneERKS1_(struct godot::PackedVector3Array::Iterator* __claw_this_, const struct godot::PackedVector3Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:160:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API double* __claw__ZN5godot18PackedFloat64Array4ptrwEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:138:10
return (double*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasismLEf(struct godot::Basis* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:144:22
__claw_this_->operator*=(p_val);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ProjectionE23v_claw_dtor(godot::GetTypeInfo<const godot::Projection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWdoubleP1() {
return sizeof(godot::PtrToArg<const double*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String17is_valid_filenameEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:355:7
return __claw_this_->is_valid_filename();
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot11Transform3D10get_originEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:73:17
return (struct godot::Vector3*) (&__claw_this_->get_origin());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRNS_15MouseButtonMaskEEC2El() {
return alignof(godot::BitField<godot::MouseButtonMask&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_ctor(godot::GetTypeInfo<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
new (__claw_this_) godot::GetTypeInfo<godot::Transform3D>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEC1Ev(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:214:2
new (__claw_this_) godot::Ref<godot::MultiplayerAPI>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_xml_parser_open_buffer() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:128:52

return godot::internal::gdextension_interface_xml_parser_open_buffer;
}
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot6Object10get_scriptEv(godot::Variant* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:80:10
new (__claw_result_) godot::Variant(__claw_this_->get_script());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWKey1() {
return alignof(godot::GetTypeInfo<const godot::Key>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjEaNEj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_property_group() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:184:75

return godot::internal::gdextension_interface_classdb_register_extension_class_property_group;
}
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZN5godot8PtrToArgINS_10StringNameEE7convertEPKv(godot::StringName* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
new (__claw_result_) godot::StringName(godot::PtrToArg<godot::StringName>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2DmlEf(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:112:14
new (__claw_result_) godot::Transform2D(__claw_this_->operator*(p_val));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIhE5storeEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<const godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<const godot::KeyModifierMask&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWless() {
return alignof(std::less);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector44ceilEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:97:10
new (__claw_result_) godot::Vector4(__claw_this_->ceil());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23S_claw_ctor(godot::PtrToArg<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
new (__claw_this_) godot::PtrToArg<short>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedByteArray1() {
return sizeof(godot::GetTypeInfo<godot::PackedByteArray>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWSide1() {
return alignof(godot::GetTypeInfo<const godot::Side>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform2D9is_finiteEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:102:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector34ceilEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:128:25
new (__claw_result_) godot::Vector3(__claw_this_->ceil());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11Transform3D9is_finiteEv(struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:81:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Color_claw_ctor(godot::PtrToArg<godot::Color>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:147:1
new (__claw_this_) godot::PtrToArg<godot::Color>();
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40char_traitsE3EE23C_claw_ctor(__gnu_cxx::char_traits<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:111:12
new (__claw_this_) __gnu_cxx::char_traits<char>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0godotWVariant11() {
return alignof(std::__type_identity<std::allocator<godot::Variant>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector3E40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector3::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWSignal1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector24ceilEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:169:10
new (__claw_result_) godot::Vector2(__claw_this_->ceil());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8SafeFlag5clearEv(godot::SafeFlag* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:154:23
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40NodePath_claw_dtor(godot::PtrToArg<const godot::NodePath&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWequal_to0godotWStringName1() {
return alignof(std::equal_to<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D3setEffffffffffff(struct godot::Transform3D* __claw_this_, real_t xx, real_t xy, real_t xz, real_t yx, real_t yy, real_t yz, real_t zx, real_t zy, real_t zz, real_t tx, real_t ty, real_t tz) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:119:7
__claw_this_->set(xx, xy, xz, yx, yy, yz, zx, zy, zz, tx, ty, tz);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1ERKS4_mRKS3_(std::basic_string<char32>* __claw_this_, const std::basic_string<char32>* __str, std::basic_string<char32>::size_type __pos, const std::allocator<char32>* __a) {
// /usr/include/c++/13/bits/basic_string.h:564:7
new (__claw_this_) std::basic_string<char32>(*__str, __pos, *__a);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String10hex_to_intEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:358:10
return __claw_this_->hex_to_int();
}
}

namespace std {
__CLAW_API std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>::size_type __claw__ZNKSt16initializer_listISt4pairIKN5godot10StringNameEPNS1_10MethodBindEEE4sizeEv(std::initializer_list<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/initializer_list:69:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector210normalizedEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:83:10
new (__claw_result_) godot::Vector2(__claw_this_->normalized());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0bool1() {
return sizeof(std::__type_identity<bool>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_dtor(godot::GetTypeInfo<godot::Transform2D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_mem_free() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:50:40

return godot::internal::gdextension_interface_mem_free;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ColorE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIcED1Ev(std::atomic<char>* __claw_this_) {
// /usr/include/c++/13/atomic:713:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_6Node3D16RotationEditModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15_Rb_tree_headerC1EOS_(struct std::_Rb_tree_header* __claw_this_, struct std::_Rb_tree_header* __x) {
// /usr/include/c++/13/bits/stl_tree.h:180:5
new (__claw_this_) std::_Rb_tree_header(std::move(*__x));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String17naturalcasecmp_toERKS0_(godot::String* __claw_this_, const godot::String* to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:276:10
return __claw_this_->naturalcasecmp_to(*to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot18PackedFloat32ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedFloat32Array);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot6Object8get_metaERKNS_10StringNameERKNS_7VariantE(godot::Variant* __claw_result_, godot::Object* __claw_this_, const godot::StringName* name, const godot::Variant* _default) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:83:10
new (__claw_result_) godot::Variant(__claw_this_->get_meta(*name, *_default));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8Vector4iEE6encodeERKS1_Pv(const struct godot::Vector4i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
godot::PtrToArg<godot::Vector4i>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11Transform2DEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:163:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Transform2D&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt27_Enable_default_constructorILb1ENSt8__detail15_Hash_node_baseEEC2Ev() {
return alignof(std::_Enable_default_constructor<true,std::__detail::_Hash_node_base>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt10_List_nodeIN5godot10StringNameEEED1Ev(std::allocator<std::_List_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEEC2Ev() {
return alignof(std::__new_allocator<std::_List_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedColorArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedColorArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:57:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldINS_4Node21ProcessThreadMessagesEEC2El() {
return sizeof(godot::BitField<godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB16is_class_enabledERKNS_10StringNameE(const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::is_class_enabled(*_class);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9_() {
return alignof(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23f_claw_dtor(godot::PtrToArg<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__common_type_impl0longWlongWlongWlong1() {
return sizeof(std::__common_type_impl<long,long,long,long>);
}
}

__CLAW_API unsigned long long __claw_alignof___pthread_mutex_s() {
return alignof(__pthread_mutex_s);
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_6ObjectEEED1Ev(std::allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform2DE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Transform2D>>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIbEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:364:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<bool>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3iE40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIjEC2Ev() {
return alignof(std::__atomic_base<unsigned int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DC1ERKNS_7Vector3ES3_S3_S3_(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_x, const struct godot::Vector3* p_y, const struct godot::Vector3* p_z, const struct godot::Vector3* p_origin) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:130:2
new (__claw_this_) godot::Transform3D(*p_x, *p_y, *p_z, *p_origin);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Signal7is_nullEv(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:91:7
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWshortP1() {
return sizeof(godot::PtrToArg<const unsigned short*>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_5Rect2E(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Rect2* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:372:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0float1() {
return sizeof(godot::GetTypeInfo<float>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRNS_18PropertyUsageFlagsEEC2El() {
return sizeof(godot::BitField<godot::PropertyUsageFlags&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PropertyInfo_claw_dtor(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8
__claw_this_->~PropertyInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIDsEC2Ev() {
return alignof(std::allocator<char16>);
}
}

namespace std {
__CLAW_API std::locale::id* __claw_get_stdWid() {
// /usr/include/c++/13/bits/locale_facets.h:672:31

return (std::locale::id*)&std::id;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color6set_b8Ei(struct godot::Color* __claw_this_, int32_t b8) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:211:22
__claw_this_->set_b8(b8);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_18PackedVector2ArrayEE6encodeES1_Pv(godot::PackedVector2Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
godot::PtrToArg<const godot::PackedVector2Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_15KeyModifierMaskEE10clear_flagES2_(godot::BitField<godot::KeyModifierMask&>* __claw_this_, enum godot::KeyModifierMask* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(*p_flag);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector310normalizedEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:93:25
new (__claw_result_) godot::Vector3(__claw_this_->normalized());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color6invertEv(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:97:7
__claw_this_->invert();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Node3DE40EE40RotationEditModeE23v_claw_ctor(godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::GetTypeInfo<const godot::Node3D::RotationEditMode&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantComparator() {
return alignof(godot::VariantComparator);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:119:52

godot::internal::gdextension_interface_string_operator_index = __claw_value_;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEppEi(std::__atomic_base<long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return alignof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1EmRKS2_(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>::size_type __n, const std::vector<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:556:7
new (__claw_this_) std::vector<godot::StringName>(__n, *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_18PackedVector3ArrayEE6encodeES1_Pv(godot::PackedVector3Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
godot::PtrToArg<const godot::PackedVector3Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWVector2i11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Vector2i>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Rb_tree_node0godotWStringName1() {
return alignof(std::_Rb_tree_node<godot::StringName>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_method_bind_ptrcall(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:158:56

godot::internal::gdextension_interface_object_method_bind_ptrcall = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWNode3DWRotationEditMode1() {
return sizeof(godot::VariantCaster<godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedInt32Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:111:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API const float* __claw__ZNK5godot18PackedFloat32Array13ConstIteratordeEv(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:166:31
return (float*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_dtor(godot::GetTypeInfo<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2R1() {
return alignof(godot::GetTypeInfo<const godot::Vector2&>);
}
}

namespace godot {
__CLAW_API godot::CallableCustom::CompareEqualFunc __claw__ZNK5godot14CallableCustom22get_compare_equal_funcEv(godot::CallableCustom* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:55:27
return __claw_this_->get_compare_equal_func();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array17get_typed_builtinEv(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:202:10
return __claw_this_->get_typed_builtin();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis20set_quaternion_scaleERKNS_10QuaternionERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Quaternion* p_quaternion, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:117:7
__claw_this_->set_quaternion_scale(*p_quaternion, *p_scale);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedStringArrayW_MethodBindings() {
return sizeof(godot::PackedStringArray::_MethodBindings);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D19get_global_rotationEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:97:10
new (__claw_result_) godot::Vector3(__claw_this_->get_global_rotation());
return __claw_result_;
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot15PackedByteArray13decode_doubleEl(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:187:9
return __claw_this_->decode_double(byte_offset);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1EOS3_RKS2_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __x, const std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:347:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*__x), *__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKlE6encodeElPv(int64_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:125:1
godot::PtrToArg<const long&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::CharStringT<char32>* __claw__ZN5godot11CharStringTIDiEpLEDi(godot::CharStringT<char32>* __claw_this_, char32 p_char) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:114:18
return (godot::CharStringT<char32>*) (&__claw_this_->operator+=(p_char));
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEppEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZN5godot11SafeNumericIjE21conditional_incrementEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:123:20
return __claw_this_->conditional_increment();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40JoyButton_claw_dtor(godot::VariantCaster<godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0unsignedWlong11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<unsigned long>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWHorizontalAlignment1() {
return sizeof(godot::VariantCaster<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWunsignedWshortR1() {
return sizeof(godot::PtrToArg<const unsigned short&>);
}
}

namespace godot {
__CLAW_API enum godot::JoyButton __claw__ZN5godot8PtrToArgINS_9JoyButtonEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
return godot::PtrToArg<godot::JoyButton>::convert(p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIiEC2Ev() {
return alignof(std::atomic<int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_18PropertyUsageFlagsEE8set_flagES1_(godot::BitField<godot::PropertyUsageFlags>* __claw_this_, enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API const godot::Variant* __claw__ZNK5godot10DictionaryixERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* p_key) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:118:17
return (godot::Variant*) (&__claw_this_->operator[](*p_key));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedVector3ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedVector3Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:187:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D9translateERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:135:7
__claw_this_->translate(*offset);
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE21conditional_incrementEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:123:20
return __claw_this_->conditional_increment();
}
}

namespace godot {
__CLAW_API godot::Dictionary* __claw__ZN5godot10DictionaryaSERKS0_(godot::Dictionary* __claw_this_, const godot::Dictionary* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:116:14
return (godot::Dictionary*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Plane10set_normalERKNS_7Vector3E(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:45:7
__claw_this_->set_normal(*p_normal);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwEpLEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:421:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedByteArray_claw_ctor(godot::PtrToArg<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
new (__claw_this_) godot::PtrToArg<godot::PackedByteArray>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedStringArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedStringArray&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40InlineAlignmentE23v_claw_dtor(godot::GetTypeInfo<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWKeyModifierMaskR1() {
return sizeof(godot::GetTypeInfo<godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWColor11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::Color>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWObjectP1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Node_handleIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaINSt8__detail10_Hash_nodeIS6_Lb0EEEEEC2Ev() {
return sizeof(std::_Node_handle<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlags_claw_ctor(godot::VariantCaster<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::VariantCaster<godot::Node::DuplicateFlags>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0wchar_t11() {
return sizeof(std::__hash_base<unsigned long,std::basic_string_view<wchar_t>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D22force_update_transformEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:107:7
__claw_this_->force_update_transform();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D20set_global_transformERKNS_11Transform3DE(godot::Node3D* __claw_this_, const struct godot::Transform3D* global) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:90:7
__claw_this_->set_global_transform(*global);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot17PackedStringArray4sizeEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:108:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array13ConstIteratorC1ERKS1_(struct godot::PackedFloat32Array::ConstIterator* __claw_this_, const struct godot::PackedFloat32Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:184:3
new (__claw_this_) godot::PackedFloat32Array::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVerticalAlignment1() {
return sizeof(godot::GetTypeInfo<godot::VerticalAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10RefCounted16initialize_classEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:2
godot::RefCounted::initialize_class();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEmIEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Side_claw_ctor(godot::PtrToArg<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::PtrToArg<godot::Side>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIbEC2Ev() {
return sizeof(std::atomic<bool>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Callable7is_nullEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:103:7
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldINS_4Node21ProcessThreadMessagesEEC2El() {
return alignof(godot::BitField<godot::Node::ProcessThreadMessages>);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot6Object26get_signal_connection_listERKNS_10StringNameE(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::Object* __claw_this_, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:120:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->get_signal_connection_list(*signal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Signal10disconnectERKNS_8CallableE(godot::Signal* __claw_this_, const godot::Callable* callable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:96:7
__claw_this_->disconnect(*callable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldINS_18PropertyUsageFlagsEEC2El() {
return alignof(godot::BitField<godot::PropertyUsageFlags>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDsEC1Ev(std::atomic<char16>* __claw_this_) {
// /usr/include/c++/13/atomic:1014:7
new (__claw_this_) std::atomic<char16>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWbasic_string_view0char3211() {
return sizeof(std::__hash_base<unsigned long,std::basic_string_view<char32>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Node_insert_return0stdW_Rb_tree_const_iterator0godotWStringName1WstdW_Node_handle0godotWStringNameWgodotWStringNameWstdWallocator0stdW_Rb_tree_node0godotWStringName1111() {
return sizeof(std::_Node_insert_return<std::_Rb_tree_const_iterator<godot::StringName>,std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedFloat64Array1() {
return alignof(godot::GetTypeInfo<godot::PackedFloat64Array>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector4dvERKf(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:124:25
new (__claw_result_) godot::Vector4(__claw_this_->operator/(*s));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWSideR1() {
return sizeof(godot::GetTypeInfo<godot::Side&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt11__pair_baseIPSt18_Rb_tree_node_baseS1_EC2Ev() {
return sizeof(std::__pair_base<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw_get_godotWMethodInfo_name(struct godot::MethodInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

return (godot::StringName*)&__claw_this_->name;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array4fillEd(godot::PackedFloat32Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:114:7
__claw_this_->fill(value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVariant1() {
return alignof(godot::GetTypeInfo<godot::Variant>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiE8exchangeEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray4sortEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:123:7
__claw_this_->sort();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot11Transform2D12get_rotationEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:69:9
return __claw_this_->get_rotation();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0float1() {
return alignof(godot::PtrToArg<float>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D15translate_localEff(struct godot::Transform2D* __claw_this_, const real_t p_tx, const real_t p_ty) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:78:7
__claw_this_->translate_local(p_tx, p_ty);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEaSEh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVKSt13__atomic_baseImE4loadESt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array13ConstIteratorC1ERKS1_(struct godot::PackedInt32Array::ConstIterator* __claw_this_, const struct godot::PackedInt32Array::ConstIterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:184:3
new (__claw_this_) godot::PackedInt32Array::ConstIterator(*p_it);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_6Rect2iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Rect2i&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroup_claw_dtor(godot::VariantCaster<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZN5godot8PtrToArgINS_8NodePathEE7convertEPKv(godot::NodePath* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
new (__claw_result_) godot::NodePath(godot::PtrToArg<godot::NodePath>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_property_indexed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:183:77

godot::internal::gdextension_interface_classdb_register_extension_class_property_indexed = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNodeWDuplicateFlags1() {
return alignof(godot::PtrToArg<godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1W_claw_dtor(godot::PtrToArg<const wchar_t*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector3ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedVector3Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:58:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWAABB_size(struct godot::AABB* __claw_this_, struct godot::Vector3* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:46:21

__claw_this_->size = *__claw_value_;
}
}

namespace std {
__CLAW_API std::basic_string_view<char16>::size_type __claw__ZNKSt17basic_string_viewIDsSt11char_traitsIDsEE4sizeEv(std::basic_string_view<char16>* __claw_this_) {
// /usr/include/c++/13/string_view:229:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWMethodInfo() {
return sizeof(godot::MethodInfo);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot6StringC2EPKNS_7VariantE() {
return sizeof(godot::String);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection11set_for_hmdEifffffff(struct godot::Projection* __claw_this_, int p_eye, real_t p_aspect, real_t p_intraocular_dist, real_t p_display_width, real_t p_display_to_lens, real_t p_oversample, real_t p_z_near, real_t p_z_far) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:78:7
__claw_this_->set_for_hmd(p_eye, p_aspect, p_intraocular_dist, p_display_width, p_display_to_lens, p_oversample, p_z_near, p_z_far);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWKey1() {
return sizeof(godot::VariantCaster<godot::Key>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot11CharStringTIcEC2Ev() {
return alignof(godot::CharStringT<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWProjectionWPlanes1() {
return alignof(godot::GetTypeInfo<const godot::Projection::Planes>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB21bind_integer_constantERKNS_10StringNameES3_S3_ib(const godot::StringName* p_class_name, const godot::StringName* p_enum_name, const godot::StringName* p_constant_name, int p_constant_value, bool p_is_bitfield) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:185:14
godot::ClassDB::bind_integer_constant(*p_class_name, *p_enum_name, *p_constant_name, p_constant_value, p_is_bitfield);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_4AABBEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::AABB>);
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot11CharStringTIcEcvPKcEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:117:2
return (const char*) __claw_this_->operator const char *();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWSignalR1() {
return alignof(godot::PtrToArg<const godot::Signal&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector27snappedERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_by) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:171:10
new (__claw_result_) godot::Vector2(__claw_this_->snapped(*p_by));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3dvEf(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const real_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:165:25
new (__claw_result_) godot::Vector3(__claw_this_->operator/(p_scalar));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1EOS3_RKS2_(std::vector<godot::StringName>* __claw_this_, std::vector<godot::StringName>* __rv, const std::allocator<godot::StringName>* __m) {
// /usr/include/c++/13/bits/stl_vector.h:659:7
new (__claw_this_) std::vector<godot::StringName>(std::move(*__rv), *__m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroup_claw_ctor(godot::PtrToArg<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::PtrToArg<godot::Node::ProcessThreadGroup>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName5rfindERKNS_6StringEl(godot::StringName* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:274:10
return __claw_this_->rfind(*what, from);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10DictionaryeqERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:111:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWunsignedWlongR1() {
return alignof(godot::GetTypeInfo<const unsigned long&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6StringEEC1Ev(godot::TypedArray<godot::String>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:89:1
new (__claw_this_) godot::TypedArray<godot::String>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWJoyAxisR1() {
return alignof(godot::GetTypeInfo<const godot::JoyAxis&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVariantWTypeR1() {
return alignof(godot::GetTypeInfo<godot::Variant::Type&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt3_V214error_categoryC2Ev() {
return sizeof(std::error_category);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8to_lowerEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:300:9
new (__claw_result_) godot::String(__claw_this_->to_lower());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIaEC2Ev() {
return sizeof(std::__atomic_base<char>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0char1() {
return alignof(godot::PtrToArg<char>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsE9fetch_subEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW_Rb_tree_node0godotWStringName11WgodotWStringName1() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::_Rb_tree_node<godot::StringName>>,godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Plane_claw_ctor(godot::PtrToArg<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:141:1
new (__claw_this_) godot::PtrToArg<godot::Plane>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0double1() {
return alignof(godot::PtrToArg<double>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_u64El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:183:10
return __claw_this_->decode_u64(byte_offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1Ev(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:86:2
new (__claw_this_) godot::NodePath();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameENS1_7ClassDB9ClassInfoEEED1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API const double* __claw__ZNK5godot18PackedFloat64Array13ConstIteratorptEv(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:169:32
return (const double*) __claw_this_->operator->();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEpLEl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node21has_node_and_resourceERKNS_8NodePathE(godot::Node* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:158:7
return __claw_this_->has_node_and_resource(*path);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessages_claw_dtor(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2R1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNode3DWRotationEditMode1() {
return alignof(godot::GetTypeInfo<godot::Node3D::RotationEditMode>);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D10translatedERKNS_7Vector3E(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_translation) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:67:14
new (__claw_result_) godot::Transform3D(__claw_this_->translated(*p_translation));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::int_type __claw__ZNSt11char_traitsIwE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:595:7
return std::char_traits<wchar_t>::eof();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector425cubic_interpolate_in_timeERKS0_S2_S2_fRKfS4_S4_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_b, const struct godot::Vector4* p_pre_a, const struct godot::Vector4* p_post_b, const real_t p_weight, const real_t* p_b_t, const real_t* p_pre_a_t, const real_t* p_post_b_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:101:10
new (__claw_result_) godot::Vector4(__claw_this_->cubic_interpolate_in_time(*p_b, *p_pre_a, *p_post_b, p_weight, *p_b_t, *p_pre_a_t, *p_post_b_t));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbE9fetch_xorEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEE8set_flagES3_(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_, enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array12append_arrayERKS0_(godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:115:7
__claw_this_->append_array(*array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EE6resizeEm(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>::size_type __new_size) {
// /usr/include/c++/13/bits/stl_vector.h:1013:7
__claw_this_->resize(__new_size);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Projection_claw_ctor(godot::PtrToArg<godot::Projection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
new (__claw_this_) godot::PtrToArg<godot::Projection>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D14set_quaternionERKNS_10QuaternionE(godot::Node3D* __claw_this_, const struct godot::Quaternion* quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:86:7
__claw_this_->set_quaternion(*quaternion);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayImEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<unsigned long>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_4Node21ProcessThreadMessagesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE9fetch_andEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node11_enter_treeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:280:15
__claw_this_->_enter_tree();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_5BasisEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Basis>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldINS_15MouseButtonMaskEE10clear_flagES1_(godot::BitField<godot::MouseButtonMask>* __claw_this_, enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:268:22
__claw_this_->clear_flag(p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_string_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:146:68

return godot::internal::gdextension_interface_packed_string_array_operator_index_const;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EED1Ev(std::vector<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:733:7
__claw_this_->~vector();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect2C1Ev(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:364:2
new (__claw_this_) godot::Rect2();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot16PackedInt32ArrayC2EPKNS_7VariantE() {
return alignof(godot::PackedInt32Array);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_4AABBEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::AABB>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIcE5storeEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6vectorIN5godot10StringNameESaIS1_EEC2Ev() {
return sizeof(std::vector<godot::StringName>);
}
}

namespace godot {
__CLAW_API enum godot::Side __claw__ZN5godot13VariantCasterINS_4SideEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
return godot::VariantCaster<godot::Side>::cast(*p_variant);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE9fetch_addEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion3expEv(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:65:13
new (__claw_result_) godot::Quaternion(__claw_this_->exp());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10RefCountedC2EPKc() {
return sizeof(godot::RefCounted);
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot11CharStringTIwE8get_dataEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:133:38
return (const wchar_t*) __claw_this_->get_data();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40CallableE23v_claw_ctor(godot::GetTypeInfo<const godot::Callable&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
new (__claw_this_) godot::GetTypeInfo<const godot::Callable&>();
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot5Rect24growEf(struct godot::Rect2* __claw_result_, struct godot::Rect2* __claw_this_, real_t p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:217:15
new (__claw_result_) godot::Rect2(__claw_this_->grow(p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_3RIDEEC1ERKNS_5ArrayE(godot::TypedArray<godot::RID>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:105:1
new (__claw_this_) godot::TypedArray<godot::RID>(*p_array);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEeOEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace std {
__CLAW_API std::char_traits<char32>::char_type* __claw__ZNSt11char_traitsIDiE4copyEPDiPKDim(std::char_traits<char32>::char_type* __s1, const std::char_traits<char32>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:960:7
return (std::char_traits<char32>::char_type*) std::char_traits<char32>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEaSERKNS_7VariantE(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:125:7
__claw_this_->operator=(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWOrientationR1() {
return alignof(godot::GetTypeInfo<const godot::Orientation&>);
}
}

namespace std {
__CLAW_API std::basic_string_view<char16>::size_type __claw__ZNKSt17basic_string_viewIDsSt11char_traitsIDsEE8max_sizeEv(std::basic_string_view<char16>* __claw_this_) {
// /usr/include/c++/13/string_view:239:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWInternalModeR1() {
return alignof(godot::GetTypeInfo<godot::Node::InternalMode&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_7World3DEEC1EPS1_(godot::Ref<godot::World3D>* __claw_this_, godot::World3D* p_reference) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:178:2
new (__claw_this_) godot::Ref<godot::World3D>(p_reference);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector37inverseEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:95:25
new (__claw_result_) godot::Vector3(__claw_this_->inverse());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot7Vector3EEC1Ev(std::initializer_list<godot::Vector3>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::Vector3>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40PropertyInfo_claw_ctor(std::__type_identity<std::allocator<godot::PropertyInfo>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<godot::PropertyInfo>>();
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::ConstIterator* __claw__ZN5godot18PackedFloat32Array13ConstIteratormmEv(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:174:33
return (struct godot::PackedFloat32Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector4i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEE7is_nullEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0stdWpair0constWgodotWStringNameWgodotWObjectP111() {
return alignof(std::__type_identity<std::allocator<std::pair<const godot::StringName,godot::Object*>>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWJoyButtonR1() {
return alignof(godot::GetTypeInfo<godot::JoyButton&>);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot10StringName5splitERKNS_6StringEbl(godot::PackedStringArray* __claw_result_, godot::StringName* __claw_this_, const godot::String* delimiter, bool allow_empty, int64_t maxsplit) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:295:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->split(*delimiter, allow_empty, maxsplit));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_construct() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:94:49

return godot::internal::gdextension_interface_variant_construct;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Ar_claw_ctor(godot::PtrToArg<char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:225:1
new (__claw_this_) godot::PtrToArg<char*>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_plus_eq_string() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:121:59

return godot::internal::gdextension_interface_string_operator_plus_eq_string;
}
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue11() {
return sizeof(std::__detail::_Insert_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector44signEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:95:10
new (__claw_result_) godot::Vector4(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_plus_eq_string(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:121:59

godot::internal::gdextension_interface_string_operator_plus_eq_string = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_set_godotWPropertyInfo_hint(struct godot::PropertyInfo* __claw_this_, uint32_t __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

__claw_this_->hint = __claw_value_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane11intersect_3ERKS0_S2_PNS_7Vector3E(struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane1, const struct godot::Plane* p_plane2, struct godot::Vector3* r_result) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:62:7
return __claw_this_->intersect_3(*p_plane1, *p_plane2, r_result);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1L_claw_dtor(godot::PtrToArg<const long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector34signEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:127:25
new (__claw_result_) godot::Vector3(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0boolP1() {
return alignof(godot::PtrToArg<bool*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_8NodePathEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::NodePath>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23b_claw_dtor(std::__type_identity<bool>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_18PackedVector2ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedVector2Array>);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector24signEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:167:10
new (__claw_result_) godot::Vector2(__claw_this_->sign());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWClockDirection1() {
return alignof(godot::VariantCaster<godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis12rotate_localERKNS_7Vector3Ef(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:67:7
__claw_this_->rotate_local(*p_axis, p_angle);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsE9fetch_subEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector47snappedERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_step) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:106:10
new (__claw_result_) godot::Vector4(__claw_this_->snapped(*p_step));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0long11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<long>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_ctor(godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
new (__claw_this_) godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EPKw(godot::Variant* __claw_this_, const wchar_t* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:179:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant9iter_nextERS0_Rb(godot::Variant* __claw_this_, godot::Variant* r_iter, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:313:7
return __claw_this_->iter_next(*r_iter, *r_valid);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot9CharProxyIDsEC2ERKlRNS_7CowDataIDsEE() {
return alignof(godot::CharProxy<char16>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNKSt13__atomic_baseImE4loadESt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_object_set_instance(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:164:50

godot::internal::gdextension_interface_object_set_instance = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBitField0godotWMethodFlags11() {
return alignof(godot::PtrToArg<godot::BitField<godot::MethodFlags>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWint1() {
return sizeof(std::__hash_base<unsigned long,int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKdE6encodeEdPv(double p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
godot::PtrToArg<const double&>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWJoyButton1() {
return sizeof(godot::GetTypeInfo<godot::JoyButton>);
}
}

namespace godot {
__CLAW_API enum godot::Vector2i::Axis __claw__ZN5godot13VariantCasterINS_8Vector2i4AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
return godot::VariantCaster<godot::Vector2i::Axis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1c_claw_ctor(godot::PtrToArg<const unsigned char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
new (__claw_this_) godot::PtrToArg<const unsigned char*>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2iE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:377:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Vector2i>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::Array&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const godot::List<godot::PropertyInfo>::Element* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5frontEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:256:32
return (const godot::List<godot::PropertyInfo>::Element*) __claw_this_->front();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName17validate_filenameEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:334:9
new (__claw_result_) godot::String(__claw_this_->validate_filename());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEaNEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iRKNS_6StringES4_bb(const char* p_function, const char* p_file, int p_line, const godot::String* p_error, const godot::String* p_message, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:47:6
godot::_err_print_error(p_function, p_file, p_line, *p_error, *p_message, p_editor_notify, p_is_warning);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIKNS_15MouseButtonMaskEEcvlEv(godot::BitField<const godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZNK5godot5Basis5slerpERKS0_RKf(struct godot::Basis* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Basis* p_to, const real_t* p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:152:8
new (__claw_result_) godot::Basis(__claw_this_->slerp(*p_to, *p_weight));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNVSt11atomic_flag5clearESt12memory_order(struct std::atomic_flag* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:297:5
__claw_this_->clear(__m);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8CallableEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:176:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Callable>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API char* __claw__ZN5godot7CowDataIcE5get_mEl(godot::CowData<char>* __claw_this_, godot::CowData<char>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:205:20
return (char*) (&__claw_this_->get_m(p_index));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node20set_process_priorityEi(godot::Node* __claw_this_, int32_t priority) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:186:7
__claw_this_->set_process_priority(priority);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane24is_equal_approx_any_sideERKS0_(struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:79:7
return __claw_this_->is_equal_approx_any_side(*p_plane);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot5Rect210get_centerEv(struct godot::Vector2* __claw_result_, struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:54:25
new (__claw_result_) godot::Vector2(__claw_this_->get_center());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector4iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4i&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40CallableE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEaSEw(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6localeC2Ev() {
return sizeof(std::locale);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector43dotERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:110:24
return __claw_this_->dot(*p_vec4);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ColorEEC1ERKNS_7VariantE(godot::TypedArray<godot::Color>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:102:1
new (__claw_this_) godot::TypedArray<godot::Color>(*p_variant);
}
}

namespace godot {
__CLAW_API uint32_t __claw_get_godotWPropertyInfo_hint(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return __claw_this_->hint;
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot7VariantcvNS_15PackedByteArrayEEv(godot::PackedByteArray* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:254:2
new (__claw_result_) godot::PackedByteArray(__claw_this_->operator PackedByteArray());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_8Vector4i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_byte_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:134:66

return godot::internal::gdextension_interface_packed_byte_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1EPKc(godot::Variant* __claw_this_, const char* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:173:2
new (__claw_this_) godot::Variant(v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIdEC1ERKNS_7VariantE(godot::TypedArray<double>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:88:1
new (__claw_this_) godot::TypedArray<double>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(godot::PtrToArg<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
new (__claw_this_) godot::PtrToArg<godot::StringName>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_9JoyButtonEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::JoyButton>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt4pairIKiiEC1ERKS1_(std::pair<const int,int>* __claw_this_, const std::pair<const int,int>* arg0) {
// /usr/include/c++/13/bits/stl_pair.h:197:17
new (__claw_this_) std::pair<const int,int>(*arg0);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNVSt13__atomic_baseIjEoREj(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEmmEi(std::__atomic_base<short>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC2Ev() {
return sizeof(std::_Rb_tree_key_compare<std::less<godot::StringName>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_native_struct_size() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:57:52

return godot::internal::gdextension_interface_get_native_struct_size;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiE9fetch_subEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4iE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector4i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:165:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector4i&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Object23set_message_translationEb(godot::Object* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:128:7
__claw_this_->set_message_translation(enable);
}
}

namespace std {
__CLAW_API std::char_traits<char>::int_type __claw__ZNSt11char_traitsIcE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:466:7
return std::char_traits<char>::eof();
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node10get_parentEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:154:8
return (godot::Node*) __claw_this_->get_parent();
}
}

namespace godot {
__CLAW_API real_t* __claw__ZN5godot7Vector4ixEi(struct godot::Vector4* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:61:25
return (real_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName8to_upperEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:299:9
new (__claw_result_) godot::String(__claw_this_->to_upper());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_iter_get() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:74:47

return godot::internal::gdextension_interface_variant_iter_get;
}
}
}

namespace godot {
__CLAW_API godot::CowData<char>::Size __claw__ZNK5godot7CowDataIcE4sizeEv(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:187:22
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWMouseButtonR1() {
return sizeof(godot::GetTypeInfo<const godot::MouseButton&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt13_Rb_tree_nodeIN5godot10StringNameEEEC1ERKS3_(std::allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_, const std::allocator<std::_Rb_tree_node<godot::StringName>>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::_Rb_tree_node<godot::StringName>>(*__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEmmEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC1EOS4_(std::_Rb_tree_key_compare<std::less<godot::StringName>>* __claw_this_, std::_Rb_tree_key_compare<std::less<godot::StringName>>* __x) {
// /usr/include/c++/13/bits/stl_tree.h:160:7
new (__claw_this_) std::_Rb_tree_key_compare<std::less<godot::StringName>>(std::move(*__x));
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot17PackedStringArrayaSERKS0_(godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:135:21
return (godot::PackedStringArray*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1EmRKS1_RKS2_(std::vector<godot::PropertyInfo>* __claw_this_, std::vector<godot::PropertyInfo>::size_type __n, const std::vector<godot::PropertyInfo>::value_type* __value, const std::vector<godot::PropertyInfo>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:569:7
new (__claw_this_) std::vector<godot::PropertyInfo>(__n, *__value, *__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyEaNEy(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API godot::CowData<char>::Size __claw__ZNK5godot7CowDataIcE5rfindERKcl(godot::CowData<char>* __claw_this_, const char* p_val, godot::CowData<char>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:243:7
return __claw_this_->rfind(*p_val, p_from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVariantWTypeR1() {
return sizeof(godot::GetTypeInfo<const godot::Variant::Type&>);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot15PackedByteArray11_native_ptrEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:142:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot15PackedByteArray7bsearchElb(godot::PackedByteArray* __claw_this_, int64_t value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:163:10
return __claw_this_->bsearch(value, before);
}
}

__CLAW_API char* __claw_get_pthread_attr_t___size(union pthread_attr_t* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:7

return (char*)__claw_this_->__size;
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWRect2i1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Error_claw_ctor(godot::PtrToArg<godot::Error>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_this_) godot::PtrToArg<godot::Error>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_3KeyEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:46:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Key&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot7CowDataIwE3ptrEv(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:183:26
return (const wchar_t*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot6ObjectC2EPKc() {
return alignof(godot::Object);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWratio03600W11() {
return alignof(std::ratio<3600,1>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName7replaceERKNS_6StringES3_(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::String* what, const godot::String* forwhat) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:285:9
new (__claw_result_) godot::String(__claw_this_->replace(*what, *forwhat));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZN5godot10ProjectionixEi(struct godot::Projection* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:64:26
return (struct godot::Vector4*) (&__claw_this_->operator[](p_axis));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String6lengthEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:278:10
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName10unicode_atEl(godot::StringName* __claw_this_, int64_t at) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:310:10
return __claw_this_->unicode_at(at);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot18PackedVector2ArrayC2EPKNS_7VariantE() {
return sizeof(godot::PackedVector2Array);
}
}

namespace std {
__CLAW_API std::char_traits<wchar_t>::int_type __claw__ZNSt11char_traitsIwE11to_int_typeERKw(const std::char_traits<wchar_t>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:586:7
return std::char_traits<wchar_t>::to_int_type(*__c);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfo_claw_ctor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
new (__claw_this_) std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>();
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedStringArrayWIterator() {
return sizeof(godot::PackedStringArray::Iterator);
}
}

__CLAW_API wctype_t __claw__ZZ8wctype_lE10(const char* __property, locale_t __locale) {
// /usr/include/wctype.h:117:17
return wctype_l(__property, __locale);
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math18bezier_interpolateEddddd(double p_start, double p_control_1, double p_control_2, double p_end, double p_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:519:15
return godot::Math::bezier_interpolate(p_start, p_control_1, p_control_2, p_end, p_t);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis5xformERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:136:25
new (__claw_result_) godot::Vector3(__claw_this_->xform(*p_vector));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const uint32_t* __claw__ZNK5godot31CallableCustomMethodPointerBase12get_comp_ptrEv(godot::CallableCustomMethodPointerBase* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_method_pointer.hpp:48:33
return (const uint32_t*) __claw_this_->get_comp_ptr();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8NodePathC1ERKS0_(godot::NodePath* __claw_this_, const godot::NodePath* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:87:2
new (__claw_this_) godot::NodePath(*from);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot18PackedVector3Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:124:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ERKS7_(std::unordered_map<int,int>* __claw_this_, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:198:7
new (__claw_this_) std::unordered_map<int,int>(*__a);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName11json_escapeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:332:9
new (__claw_result_) godot::String(__claw_this_->json_escape());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZN5godot7ClassDB21class_get_method_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::TypedArray<godot::Dictionary>(godot::ClassDB::class_get_method_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEED1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot3RefINS_10InputEventEEC2ERKS2_() {
return sizeof(godot::Ref<godot::InputEvent>);
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE10push_frontERKS1_(godot::List<godot::PropertyInfo>* __claw_this_, const struct godot::PropertyInfo* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:323:11
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->push_front(*value);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot7VariantcvNS_10QuaternionEEv(struct godot::Quaternion* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:239:2
new (__claw_result_) godot::Quaternion(__claw_this_->operator Quaternion());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12PropertyInfoC1Ev(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:54:2
new (__claw_this_) godot::PropertyInfo();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWRect2i_size(struct godot::Rect2i* __claw_this_, godot::Size2i* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:42:21

__claw_this_->size = *__claw_value_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot6Node3D9get_scaleEv(struct godot::Vector3* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:85:10
new (__claw_result_) godot::Vector3(__claw_this_->get_scale());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector4E40EE40Axis_claw_dtor(godot::VariantCaster<godot::Vector4::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
__claw_this_->~VariantCaster();
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEC1ESt16initializer_listIwERKS3_(std::basic_string<wchar_t>* __claw_this_, std::initializer_list<wchar_t>* __l, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/basic_string.h:706:7
new (__claw_this_) std::basic_string<wchar_t>(*__l, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWNodeWDuplicateFlags1() {
return alignof(godot::VariantCaster<godot::Node::DuplicateFlags>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2imLERKi(struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:97:7
__claw_this_->operator*=(*rvalue);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_18PackedFloat32ArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:403:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBitField0godotWNodeWProcessThreadMessages11() {
return sizeof(godot::PtrToArg<godot::BitField<godot::Node::ProcessThreadMessages>>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedColorArray7bsearchERKNS_5ColorEb(godot::PackedColorArray* __claw_this_, const struct godot::Color* value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:124:10
return __claw_this_->bsearch(*value, before);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray3hasERKNS_6StringE(godot::PackedStringArray* __claw_this_, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:119:7
return __claw_this_->has(*value);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7JoyAxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:51:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::JoyAxis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector28angle_toERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_vector2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:100:9
return __claw_this_->angle_to(*p_vector2);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWMethodBind() {
return sizeof(godot::MethodBind);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot8BitFieldIRNS_11MethodFlagsEEC2El() {
return sizeof(godot::BitField<godot::MethodFlags&>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIsE12is_lock_freeEv(std::__atomic_base<short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE13postdecrementEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:89:20
return __claw_this_->postdecrement();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedByteArrayWIterator() {
return alignof(godot::PackedByteArray::Iterator);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18GDExtensionBinding10InitObjectC1EiiPi(godot::GDExtensionBinding::InitObject* __claw_this_, int p_get_proc_address, int p_library, int* r_initialization) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:238:3
new (__claw_this_) godot::GDExtensionBinding::InitObject(p_get_proc_address, p_library, r_initialization);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String11strip_edgesEbb(godot::String* __claw_result_, godot::String* __claw_this_, bool left, bool right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:316:9
new (__claw_result_) godot::String(__claw_this_->strip_edges(left, right));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedByteArray::Iterator* __claw__ZN5godot15PackedByteArray5beginEv(struct godot::PackedByteArray::Iterator* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:270:26
new (__claw_result_) godot::PackedByteArray::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40RID_claw_dtor(godot::PtrToArg<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIiE21compare_exchange_weakERiiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40pairE3EE231IE23I_claw_dtor(std::__type_identity<std::allocator<std::pair<const int,int>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldINS_15MouseButtonMaskEE8has_flagES1_(godot::BitField<godot::MouseButtonMask>* __claw_this_, enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API int32_t* __claw__ZN5godot8Vector4iixEi(struct godot::Vector4i* __claw_this_, const int p_axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:68:26
return (int32_t*) (&__claw_this_->operator[](p_axis));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWnullptr1() {
return sizeof(std::__hash_base<unsigned long,nullptr>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40PropertyHintE23v_claw_ctor(godot::GetTypeInfo<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::GetTypeInfo<godot::PropertyHint>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector4iWAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector4i::Axis&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEeOEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEEC2Ev() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector4_claw_dtor(godot::PtrToArg<const godot::Vector4&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot10RefCounted8init_refEv(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:50:7
return __claw_this_->init_ref();
}
}

namespace godot {
__CLAW_API const struct godot::PropertyInfo* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementdeEv(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:92:27
return (struct godot::PropertyInfo*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Plane23intersects_segment_bindERKNS_7Vector3ES3_(godot::Variant* __claw_result_, struct godot::Plane* __claw_this_, const struct godot::Vector3* p_begin, const struct godot::Vector3* p_end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:69:10
new (__claw_result_) godot::Variant(__claw_this_->intersects_segment_bind(*p_begin, *p_end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedByteArrayW_MethodBindings() {
return sizeof(godot::PackedByteArray::_MethodBindings);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_cast_to() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:166:45

return godot::internal::gdextension_interface_object_cast_to;
}
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEELb1EEC1Ev(std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1218:7
new (__claw_this_) std::__detail::_Hashtable_ebo_helper<0,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>>();
}
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i4growEi(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, int p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:156:9
new (__claw_result_) godot::Rect2i(__claw_this_->grow(p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_5ErrorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Error>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray8IteratorC1Ev(struct godot::PackedColorArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:160:3
new (__claw_this_) godot::PackedColorArray::Iterator();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIlED1Ev(std::atomic<long>* __claw_this_) {
// /usr/include/c++/13/atomic:874:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API godot::BitField<godot::KeyModifierMask>* __claw__ZN5godot8PtrToArgINS_8BitFieldINS_15KeyModifierMaskEEEE7convertEPKv(godot::BitField<godot::KeyModifierMask>* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::BitField<godot::KeyModifierMask>(godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfoE23Vb0E40SE40__get_value_typeE3EE23S1__claw_ctor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>();
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8c_escapeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:344:9
new (__claw_result_) godot::String(__claw_this_->c_escape());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40atomicE3EE23l_claw_dtor(std::__type_identity<std::atomic<unsigned long>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_6ObjectEEC1Ev(godot::internal::EngineClassRegistration<godot::Object>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:124:2
new (__claw_this_) godot::internal::EngineClassRegistration<godot::Object>();
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector44snapERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_step) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:105:7
__claw_this_->snap(*p_step);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0constWint1() {
return sizeof(std::__type_identity<const int>);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIcE23compare_exchange_strongERccSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodePath_claw_ctor(godot::PtrToArg<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
new (__claw_this_) godot::PtrToArg<godot::NodePath>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String19is_valid_identifierEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:349:7
return __claw_this_->is_valid_identifier();
}
}

namespace std {
__CLAW_API char __claw__ZNKSt21__ctype_abstract_baseIwE6narrowEwc(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::__ctype_abstract_base<wchar_t>::char_type __c, char __dfault) {
// /usr/include/c++/13/bits/locale_facets.h:334:7
return __claw_this_->narrow(__c, __dfault);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot16PackedInt32Array7bsearchElb(godot::PackedInt32Array* __claw_this_, int64_t value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:122:10
return __claw_this_->bsearch(value, before);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIwEC2Ev() {
return alignof(std::__atomic_base<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector43absEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:94:10
new (__claw_result_) godot::Vector4(__claw_this_->abs());
return __claw_result_;
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Basis5tdotyERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:123:24
return __claw_this_->tdoty(*v);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot9CharProxyIwEC2ERKlRNS_7CowDataIwEE() {
return sizeof(godot::CharProxy<wchar_t>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6lstripERKS0_(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:318:9
new (__claw_result_) godot::String(__claw_this_->lstrip(*chars));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS2_() {
return alignof(std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC2Ev() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_10StringNameEE6encodeES1_Pv(godot::StringName* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
godot::PtrToArg<const godot::StringName&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIbE21compare_exchange_weakERbbSt12memory_orderS2_(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type* __i1, std::__atomic_base<bool>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E2E23TE23TE40ListE40SE40ConstIteratorE40FE40ConstIteratorE23(struct godot::List::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:185:18
new (__claw_this_) godot::List::ConstIterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMouseButtonMask1() {
return sizeof(godot::GetTypeInfo<godot::MouseButtonMask>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt10_List_nodeIN5godot10StringNameEEEC1ERKS4_(std::__new_allocator<std::_List_node<godot::StringName>>* __claw_this_, const std::__new_allocator<std::_List_node<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::_List_node<godot::StringName>>(*arg0);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector3i1() {
return sizeof(godot::PtrToArg<godot::Vector3i>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot17PackedStringArray5rfindERKNS_6StringEl(godot::PackedStringArray* __claw_this_, const godot::String* value, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:127:10
return __claw_this_->rfind(*value, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWchar16R1() {
return sizeof(godot::GetTypeInfo<const char16&>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2LL_claw_ctor(std::common_type<long,long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2324:12
new (__claw_this_) std::common_type<long,long>();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23C_claw_dtor(std::char_traits<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:337:12
__claw_this_->~char_traits();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedColorArrayW_MethodBindings() {
return alignof(godot::PackedColorArray::_MethodBindings);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArrayneERKNS_7VariantE(godot::PackedByteArray* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:208:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIiE5storeEiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_3RIDE(godot::Variant* __claw_this_, const godot::RID* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:199:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVSt13__atomic_baseIwE8exchangeEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot7CowDataIcE3ptrEv(godot::CowData<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:183:26
return (const char*) __claw_this_->ptr();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDsEC1Ev(std::allocator<char16>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<char16>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIcE4sizeEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:93:25
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String11sha256_textEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:329:9
new (__claw_result_) godot::String(__claw_this_->sha256_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot18PackedVector2Array13ConstIteratordeEv(struct godot::PackedVector2Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:171:33
return (struct godot::Vector2*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10RefCountedC2EPKc() {
return alignof(godot::RefCounted);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4SideEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Side>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIiED1Ev(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API godot::CowData<char16>::Size __claw__ZNK5godot7CowDataIDsE4findERKDsl(godot::CowData<char16>* __claw_this_, const char16* p_val, godot::CowData<char16>::Size p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:242:7
return __claw_this_->find(*p_val, p_from);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB16get_longest_axisEv(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:87:10
new (__claw_result_) godot::Vector3(__claw_this_->get_longest_axis());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis10set_columnEiRKNS_7Vector3E(struct godot::Basis* __claw_this_, int p_index, const struct godot::Vector3* p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:181:22
__claw_this_->set_column(p_index, *p_value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector4iC1ERKNS_7Vector4E(struct godot::Vector4i* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:126:2
new (__claw_this_) godot::Vector4i(*p_vec4);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ClassDBE40FTE40E3E1E23Tregister_abstract_classE23vE23S(godot::ClassDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:149:14
__claw_this_->register_abstract_class();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40VariantE40EE40Type_claw_ctor(godot::VariantCaster<godot::Variant::Type>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:57:1
new (__claw_this_) godot::VariantCaster<godot::Variant::Type>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWColor1() {
return sizeof(godot::GetTypeInfo<godot::Color>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWInternalModeR1() {
return sizeof(godot::GetTypeInfo<const godot::Node::InternalMode&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot7VariantESaIS1_EEC1EOS3_RKS2_(std::vector<godot::Variant>* __claw_this_, std::vector<godot::Variant>* __rv, const std::allocator<godot::Variant>* __m) {
// /usr/include/c++/13/bits/stl_vector.h:659:7
new (__claw_this_) std::vector<godot::Variant>(std::move(*__rv), *__m);
}
}

namespace godot {
__CLAW_API uint16_t __claw__ZNK5godot7VariantcvtEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:224:2
return __claw_this_->operator unsigned short();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_plus_eq_cstr() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:123:57

return godot::internal::gdextension_interface_string_operator_plus_eq_cstr;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWNodeWInternalMode1() {
return sizeof(godot::PtrToArg<godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3i3minERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_vector3i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:74:11
new (__claw_result_) godot::Vector3i(__claw_this_->min(*p_vector3i));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameEPNS0_10MethodBindEEEC1Ev(std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__ptr_traits_ptr_to0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1PWstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse1WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindWP1Wfalse11() {
return sizeof(std::__ptr_traits_ptr_to<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>*,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind *>, false>>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_4Node21ProcessThreadMessagesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::ProcessThreadMessages>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot22postinitialize_handlerEPv(void* arg0) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:85:22
godot::postinitialize_handler(arg0);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String12xml_unescapeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:341:9
new (__claw_result_) godot::String(__claw_this_->xml_unescape());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot17PackedStringArrayaSEOS0_(godot::PackedStringArray* __claw_this_, godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:136:21
return (godot::PackedStringArray*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1ERKS3_(std::vector<godot::PropertyInfo>* __claw_this_, const std::vector<godot::PropertyInfo>* __x) {
// /usr/include/c++/13/bits/stl_vector.h:601:7
new (__claw_this_) std::vector<godot::PropertyInfo>(*__x);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_5PlaneE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Plane* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:379:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40VariantE23v_claw_ctor(godot::GetTypeInfo<godot::Variant>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:192:8
new (__claw_this_) godot::GetTypeInfo<godot::Variant>();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned int>::__int_type __claw__ZNSt13__atomic_baseIjE8exchangeEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40is_nullE231(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:201:14
return __claw_this_->is_null();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot5Array6filterERKNS_8CallableE(godot::Array* __claw_result_, godot::Array* __claw_this_, const godot::Callable* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:193:8
new (__claw_result_) godot::Array(__claw_this_->filter(*method));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_type(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:81:47

godot::internal::gdextension_interface_variant_get_type = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AL_claw_dtor(godot::PtrToArg<long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:230:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_5ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:109:1
new (__claw_this_) godot::TypedArray<godot::Array>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_10StringNameEEC1ERKNS_7VariantE(godot::TypedArray<godot::StringName>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:103:1
new (__claw_this_) godot::TypedArray<godot::StringName>(*p_variant);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector2Array6resizeEl(godot::PackedVector2Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:119:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_free_instance_binding() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:163:58

return godot::internal::gdextension_interface_object_free_instance_binding;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWDictionary1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Dictionary>&>);
}
}

namespace godot {
__CLAW_API godot::Size2i* __claw_get_godotWRect2i_size(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:42:21

return (godot::Size2i*)&__claw_this_->size;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_NS1_7ClassDB9ClassInfoEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWVector3WAxis1() {
return alignof(godot::VariantCaster<godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API int32_t __claw__ZNK5godot7VariantcviEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:219:2
return __claw_this_->operator int();
}
}

namespace godot {
__CLAW_API godot::Viewport* __claw__ZNK5godot4Node12get_viewportEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:224:12
return (godot::Viewport*) __claw_this_->get_viewport();
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot6Rect2i14grow_side_bindEji(struct godot::Rect2i* __claw_result_, struct godot::Rect2i* __claw_this_, uint32_t p_side, int p_amount) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:174:16
new (__claw_result_) godot::Rect2i(__claw_this_->grow_side_bind(p_side, p_amount));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0long11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<long>>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_property_group(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:184:75

godot::internal::gdextension_interface_classdb_register_extension_class_property_group = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWSide1() {
return alignof(godot::GetTypeInfo<godot::Side>);
}
}

namespace godot {
__CLAW_API godot::Point2* __claw_get_godotWRect2_position(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:43:21

return (godot::Point2*)&__claw_this_->position;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_5BasisEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:386:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Basis>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::StringName>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40ClockDirectionE23v_claw_dtor(godot::GetTypeInfo<godot::ClockDirection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::ConstIterator* __claw__ZN5godot18PackedFloat32Array13ConstIteratorppEv(struct godot::PackedFloat32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:170:33
return (struct godot::PackedFloat32Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Callable_claw_dtor(godot::PtrToArg<godot::Callable>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:152:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector4E23v_claw_ctor(godot::GetTypeInfo<godot::Vector4>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:164:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23SE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<short>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:368:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<short>&>();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot6Signal15get_connectionsEv(godot::Array* __claw_result_, godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:98:8
new (__claw_result_) godot::Array(__claw_this_->get_connections());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Node3DGizmoEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Node3DGizmo>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:49:17
new (__claw_this_) godot::TypedArray<godot::Node3DGizmo>(*p_array);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40equal_toE3EE23I_claw_dtor(std::__type_identity<std::equal_to<int>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessModeR1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessMode&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC1ERKS2_(std::vector<godot::PropertyInfo>* __claw_this_, const std::vector<godot::PropertyInfo>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:542:7
new (__claw_this_) std::vector<godot::PropertyInfo>(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWshort1() {
return sizeof(godot::PtrToArg<unsigned short>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWchar1() {
return sizeof(std::__hash_base<unsigned long,char>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector314length_squaredEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:90:24
return __claw_this_->length_squared();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNSt13__atomic_baseIbEaNEb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:433:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZN5godot10Projection18create_perspectiveEffffb(struct godot::Projection* __claw_result_, real_t p_fovy_degrees, real_t p_aspect, real_t p_z_near, real_t p_z_far, bool p_flip_fov) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:87:20
new (__claw_result_) godot::Projection(godot::Projection::create_perspective(p_fovy_degrees, p_aspect, p_z_near, p_z_far, p_flip_fov));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZN5godot16PackedInt32ArrayaSERKS0_(godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:133:20
return (godot::PackedInt32Array*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10ProjectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Projection&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<char16>::int_type __claw__ZNSt11char_traitsIDsE11to_int_typeERKDs(const std::char_traits<char16>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:861:7
return std::char_traits<char16>::to_int_type(*__c);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot4AABB23get_shortest_axis_indexEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:92:6
return __claw_this_->get_shortest_axis_index();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0godotWKeyModifierMask11() {
return alignof(godot::GetTypeInfo<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWMethodDefinition() {
return alignof(godot::MethodDefinition);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1EmRKS7_(std::unordered_map<int,int>* __claw_this_, std::unordered_map<int,int>::size_type __n, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:242:7
new (__claw_this_) std::unordered_map<int,int>(__n, *__a);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEmmEi(std::__atomic_base<unsigned char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZN5godot16PackedColorArrayaSEOS0_(godot::PackedColorArray* __claw_this_, godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:136:20
return (godot::PackedColorArray*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Array>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIwSt11char_traitsIwEEC1EPKwm(std::basic_string_view<wchar_t>* __claw_this_, const wchar_t* __str, std::basic_string_view<wchar_t>::size_type __len) {
// /usr/include/c++/13/string_view:146:7
new (__claw_this_) std::basic_string_view<wchar_t>(__str, __len);
}
}

namespace godot {
__CLAW_API wchar_t* __claw__ZN5godot7CowDataIwE4ptrwEv(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:178:20
return (wchar_t*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlags_claw_ctor(godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array8is_emptyEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:107:7
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40VerticalAlignment_claw_ctor(godot::VariantCaster<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::VariantCaster<godot::VerticalAlignment>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessModeR1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessMode&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhEmmEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godoteqEPKcRKNS_6StringE(const char* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:469:6
return godot::operator==(p_chr, *p_str);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_name_new_with_latin1_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:127:61

godot::internal::gdextension_interface_string_name_new_with_latin1_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40PropertyHint_claw_ctor(godot::PtrToArg<godot::PropertyHint>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::PtrToArg<godot::PropertyHint>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWCallable1() {
return alignof(godot::GetTypeInfo<godot::Callable>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector3Array6resizeEl(godot::PackedVector3Array* __claw_this_, int64_t new_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:119:10
return __claw_this_->resize(new_size);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector45roundEv(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:98:10
new (__claw_result_) godot::Vector4(__claw_this_->round());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_indexed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:71:50

godot::internal::gdextension_interface_variant_get_indexed = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MethodFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_this_) godot::GetTypeInfo<godot::MethodFlags>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldINS_18PropertyUsageFlagsEEcvlEv(godot::BitField<godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_operator_plus_eq_c32str() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:125:59

return godot::internal::gdextension_interface_string_operator_plus_eq_c32str;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_plus_eq_c32str(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:125:59

godot::internal::gdextension_interface_string_operator_plus_eq_c32str = __claw_value_;
}
}
}

namespace godot {
__CLAW_API const uint8_t* __claw__ZNK5godot15PackedByteArray3ptrEv(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:217:17
return (const uint8_t*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6Signal13get_object_idEv(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:93:10
return __claw_this_->get_object_id();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_dtor(godot::GetTypeInfo<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:167:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEEC2ERNS_16_Hashtable_allocISA_EE() {
return sizeof(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String10uri_decodeEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:343:9
new (__claw_result_) godot::String(__claw_this_->uri_decode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWProjection() {
return alignof(godot::Projection);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedVector2ArrayE40SE40Iterator_claw_dtor(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:145:12
__claw_this_->~Iterator();
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZNK5godot16PackedInt32ArrayplERKS0_(godot::PackedInt32Array* __claw_result_, godot::PackedInt32Array* __claw_this_, const godot::PackedInt32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:132:19
new (__claw_result_) godot::PackedInt32Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(std::basic_string<char>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:522:7
new (__claw_this_) std::basic_string<char>();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIaE21compare_exchange_weakERaaSt12memory_orderS2_(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector3ngEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:167:25
new (__claw_result_) godot::Vector3(__claw_this_->operator-());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<char32>::int_type __claw__ZNSt11char_traitsIDiE11to_int_typeERKDi(const std::char_traits<char32>::char_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:985:7
return std::char_traits<char32>::to_int_type(*__c);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayC1ERKS0_(godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:106:2
new (__claw_this_) godot::PackedVector2Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40VerticalAlignment_claw_ctor(godot::PtrToArg<godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_this_) godot::PtrToArg<godot::VerticalAlignment>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayC1ERKS0_(godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:106:2
new (__claw_this_) godot::PackedVector3Array(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionC1ERKNS_7Vector3Ef(struct godot::Quaternion* __claw_this_, const struct godot::Vector3* p_axis, real_t p_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:129:2
new (__claw_this_) godot::Quaternion(*p_axis, p_angle);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::int_type __claw__ZN9__gnu_cxx11char_traitsIcE7not_eofERKm(const __gnu_cxx::char_traits<char>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:179:7
return __gnu_cxx::char_traits<char>::not_eof(*__c);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWunsignedWchar1() {
return sizeof(std::__hash_base<unsigned long,unsigned char>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p1L_claw_dtor(std::common_type<long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2299:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWAABB1() {
return sizeof(godot::PtrToArg<godot::AABB>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godoteqEPKwRKNS_6StringE(const wchar_t* p_chr, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:470:6
return godot::operator==(p_chr, *p_str);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector317octahedron_encodeEv(struct godot::Vector2* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:116:10
new (__claw_result_) godot::Vector2(__claw_this_->octahedron_encode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWKeyModifierMaskR1() {
return alignof(godot::GetTypeInfo<godot::KeyModifierMask&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseIbEC2Ev() {
return alignof(std::__atomic_base<bool>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWbinary_function0intWintWbool1() {
return alignof(std::binary_function<int,int,bool>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEEC1EOSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1942:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>(std::move(*arg0));
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_8Vector3iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot11Transform2D15basis_xform_invERKNS_7Vector2E(struct godot::Vector2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:117:25
new (__claw_result_) godot::Vector2(__claw_this_->basis_xform_inv(*p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_5BasisEE6encodeES3_Pv(const struct godot::Basis* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
godot::PtrToArg<const godot::Basis&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWstdWerror_condition1() {
return sizeof(std::__hash_base<unsigned long,std::error_condition>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEeOEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8is_emptyEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:455:22
return __claw_this_->is_empty();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector4iR1() {
return sizeof(godot::PtrToArg<const godot::Vector4i&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE9fetch_xorEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion7slerpniERKS0_RKf(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_to, const real_t* p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:74:13
new (__claw_result_) godot::Quaternion(__claw_this_->slerpni(*p_to, *p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40E7ERefE23(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref<T>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Al_claw_ctor(godot::PtrToArg<unsigned long*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:231:1
new (__claw_this_) godot::PtrToArg<unsigned long*>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePatheqERKNS_7VariantE(godot::NodePath* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:105:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName13get_extensionEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:307:9
new (__claw_result_) godot::String(__claw_this_->get_extension());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIiE12is_lock_freeEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis15get_scale_localEv(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:113:10
new (__claw_result_) godot::Vector3(__claw_this_->get_scale_local());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodBind10has_returnEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:107:22
return __claw_this_->has_return();
}
}

namespace godot {
__CLAW_API struct godot::Basis* __claw__ZN5godot5Basis10looking_atERKNS_7Vector3ES3_(struct godot::Basis* __claw_result_, const struct godot::Vector3* p_target, const struct godot::Vector3* p_up) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:227:15
new (__claw_result_) godot::Basis(godot::Basis::looking_at(*p_target, *p_up));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_11Transform2DEEC1ERKNS_5ArrayE(godot::TypedArray<godot::Transform2D>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:96:1
new (__claw_this_) godot::TypedArray<godot::Transform2D>(*p_array);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIhEC1Eh(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<unsigned char>(__i);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector4i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API bool __claw__ZNKSt15__exception_ptr13exception_ptrcvbEv(std::__exception_ptr::exception_ptr* __claw_this_) {
// /usr/include/c++/13/bits/exception_ptr.h:162:16
return __claw_this_->operator bool();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRNS_4Node21ProcessThreadMessagesEE8has_flagES3_(godot::BitField<godot::Node::ProcessThreadMessages&>* __claw_this_, enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_to_utf32_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:117:51

godot::internal::gdextension_interface_string_to_utf32_chars = __claw_value_;
}
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::int_type __claw__ZN9__gnu_cxx11char_traitsIwE7not_eofERKm(const __gnu_cxx::char_traits<wchar_t>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:179:7
return __gnu_cxx::char_traits<wchar_t>::not_eof(*__c);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot8NodePath11_native_ptrEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:85:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API const double* __claw__ZNK5godot18PackedFloat64Array3ptrEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:137:16
return (const double*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API void* __claw__ZN5godot6Memory12alloc_staticEmb(size_t p_bytes, bool p_pad_align) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:80:15
return (void*) godot::Memory::alloc_static(p_bytes, p_pad_align);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWStringNameR1() {
return alignof(godot::GetTypeInfo<const godot::StringName&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40SideE23v_claw_ctor(godot::GetTypeInfo<const godot::Side&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
new (__claw_this_) godot::GetTypeInfo<const godot::Side&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbE9fetch_xorEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_to_utf16_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:116:51

godot::internal::gdextension_interface_string_to_utf16_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_8Vector4iE(godot::Variant* __claw_this_, const struct godot::Vector4i* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:189:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIhEC1Ev(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<unsigned char>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_5Rect2EEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Rect2>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWiterator0stdWoutput_iterator_tagWvoidWvoidWvoidWvoid1() {
return sizeof(std::iterator<std::output_iterator_tag,void,void,void,void>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector3i_claw_ctor(godot::PtrToArg<const godot::Vector3i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
new (__claw_this_) godot::PtrToArg<const godot::Vector3i&>();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZNK5godot5ColordvERKS0_(struct godot::Color* __claw_result_, struct godot::Color* __claw_this_, const struct godot::Color* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:89:8
new (__claw_result_) godot::Color(__claw_this_->operator/(*p_color));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Rect2i7set_endERKNS_8Vector2iE(struct godot::Rect2i* __claw_this_, const struct godot::Vector2i* p_end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:225:22
__claw_this_->set_end(*p_end);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNSt13__atomic_baseIyE9fetch_xorEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedFloat32Array7bsearchEdb(godot::PackedFloat32Array* __claw_this_, double value, bool before) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:122:10
return __claw_this_->bsearch(value, before);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot11Transform3D9xform_invERKNS_5PlaneE(struct godot::Plane* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Plane* p_plane) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:99:23
new (__claw_result_) godot::Plane(__claw_this_->xform_inv(*p_plane));
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_evaluate() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:63:48

return godot::internal::gdextension_interface_variant_evaluate;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSaIDiED1Ev(std::allocator<char32>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API std::__new_allocator<std::pair<const int,int>>::size_type __claw__ZNKSt15__new_allocatorISt4pairIKiiEE8max_sizeEv(std::__new_allocator<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB18add_property_groupERKNS_10StringNameERKNS_6StringES6_(const godot::StringName* p_class, const godot::String* p_name, const godot::String* p_prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:181:14
godot::ClassDB::add_property_group(*p_class, *p_name, *p_prefix);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt19_Node_handle_commonISt4pairIKN5godot10StringNameEPNS1_10MethodBindEESaINSt8__detail10_Hash_nodeIS6_Lb0EEEEEC2Ev() {
return sizeof(std::_Node_handle_common<std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEmmEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace std {
__CLAW_API void __claw_set_stdW__atomic_flag_base__M_i(struct std::__atomic_flag_base* __claw_this_, std::__atomic_flag_data_type __claw_value_) {
// /usr/include/c++/13/bits/atomic_base.h:200:10

__claw_this_->_M_i = __claw_value_;
}
}

namespace godot {
__CLAW_API godot::BitField<godot::MouseButtonMask>* __claw__ZN5godot13VariantCasterINS_8BitFieldINS_15MouseButtonMaskEEEE4castERKNS_7VariantE(godot::BitField<godot::MouseButtonMask>* __claw_result_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::BitField<godot::MouseButtonMask>(godot::VariantCaster<godot::BitField<godot::MouseButtonMask>>::cast(*p_variant));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt32Array4sizeEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:106:10
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseItED1Ev(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZN5godot8PtrToArgINS_11Transform3DEE7convertEPKv(struct godot::Transform3D* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:145:1
new (__claw_result_) godot::Transform3D(godot::PtrToArg<godot::Transform3D>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWchar16P1() {
return alignof(godot::PtrToArg<const char16*>);
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot5ArrayplERKS0_(godot::Array* __claw_result_, godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:216:8
new (__claw_result_) godot::Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedByteArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedByteArray&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot5Plane16intersect_3_bindERKS0_S2_(godot::Variant* __claw_result_, struct godot::Plane* __claw_this_, const struct godot::Plane* p_plane1, const struct godot::Plane* p_plane2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:67:10
new (__claw_result_) godot::Variant(__claw_this_->intersect_3_bind(*p_plane1, *p_plane2));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1ERKS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi(std::locale* __claw_this_, const std::locale* __base, const std::string* __s, std::locale::category __cat) {
// /usr/include/c++/13/bits/locale_classes.h:181:5
new (__claw_this_) std::locale(*__base, *__s, __cat);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_PNS1_10MethodBindEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return alignof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaIwEC2Ev() {
return sizeof(std::allocator<wchar_t>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40JoyButtonE23v_claw_dtor(godot::GetTypeInfo<godot::JoyButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node30set_process_thread_group_orderEi(godot::Node* __claw_this_, int32_t order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:206:7
__claw_this_->set_process_thread_group_order(order);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::ConstIterator* __claw__ZNK5godot18PackedVector2Array5beginEv(struct godot::PackedVector2Array::ConstIterator* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:202:31
new (__claw_result_) godot::PackedVector2Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::ConstIterator* __claw__ZNK5godot18PackedVector3Array5beginEv(struct godot::PackedVector3Array::ConstIterator* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:202:31
new (__claw_result_) godot::PackedVector3Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArrayltERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:212:7
return __claw_this_->operator<(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_byte_array_operator_index() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:133:61

return godot::internal::gdextension_interface_packed_byte_array_operator_index;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Rect2E23v_claw_dtor(godot::GetTypeInfo<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:159:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVKSt13__atomic_baseIaEcvaEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator signed char();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String19is_valid_ip_addressEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:354:7
return __claw_this_->is_valid_ip_address();
}
}

namespace __gnu_cxx {
__CLAW_API void __claw_cE3AE40NE40__gnu_cxxE40SE40_Char_typesE3EE23W_claw_ctor(__gnu_cxx::_Char_types<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:84:12
new (__claw_this_) __gnu_cxx::_Char_types<wchar_t>();
}
}

namespace godot {
__CLAW_API godot::Ref<godot::MultiplayerAPI>* __claw__ZN5godot3RefINS_14MultiplayerAPIEE25_gde_internal_constructorEPNS_6ObjectE(godot::Ref<godot::MultiplayerAPI>* __claw_result_, godot::Object* obj) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:222:23
new (__claw_result_) godot::Ref<godot::MultiplayerAPI>(godot::Ref<godot::MultiplayerAPI>::_gde_internal_constructor(obj));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIxE5storeExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat64ArrayWConstIterator() {
return sizeof(godot::PackedFloat64Array::ConstIterator);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Projection7get_fovEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:107:9
return __claw_this_->get_fov();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot5Array9duplicateEb(godot::Array* __claw_result_, godot::Array* __claw_this_, bool deep) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:191:8
new (__claw_result_) godot::Array(__claw_this_->duplicate(deep));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2i3maxERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_vector2i) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:86:11
new (__claw_result_) godot::Vector2i(__claw_this_->max(*p_vector2i));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxE9fetch_subExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicImEC1Ev(std::atomic<unsigned long>* __claw_this_) {
// /usr/include/c++/13/atomic:896:7
new (__claw_this_) std::atomic<unsigned long>();
}
}

namespace godot {
namespace Math {
__CLAW_API int __claw__ZN5godot4Math9fast_ftoiEf(float a) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:768:12
return godot::Math::fast_ftoi(a);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcE8exchangeEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:520:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40NodeE40EE40DuplicateFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWcharP1() {
return alignof(godot::PtrToArg<const unsigned char*>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_5BasisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:169:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Basis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB12class_existsERKNS_10StringNameE(const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_exists(*_class);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedFloat64Array6appendEd(godot::PackedFloat64Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:110:7
return __claw_this_->append(value);
}
}

namespace godot {
__CLAW_API enum godot::Vector4::Axis __claw__ZN5godot13VariantCasterINS_7Vector44AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
return godot::VariantCaster<godot::Vector4::Axis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWAABB1() {
return alignof(godot::PtrToArg<godot::AABB>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261I_claw_ctor(godot::PtrToArg<const int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
new (__claw_this_) godot::PtrToArg<const int&>();
}
}

namespace godot {
__CLAW_API enum godot::Vector3i::Axis __claw__ZNK5godot8Vector3i14min_axis_indexEv(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:71:17
return __claw_this_->min_axis_index();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot18PackedVector2Array6insertElRKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, int64_t at_index, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:117:10
return __claw_this_->insert(at_index, *value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Quaternion_claw_dtor(godot::PtrToArg<godot::Quaternion>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long long>::__int_type __claw__ZNVSt13__atomic_baseIyE9fetch_subEySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEEC1ERKS2_(godot::Ref<godot::Tween>* __claw_this_, const godot::Ref<godot::Tween>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:160:2
new (__claw_this_) godot::Ref<godot::Tween>(*p_from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditMode_claw_dtor(godot::VariantCaster<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot10StringName7bigramsEv(godot::PackedStringArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:282:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->bigrams());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEmIEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_5ColorEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:388:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Color>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40_List_nodeE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::allocator<std::_List_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::_List_node<godot::StringName>>>();
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZN5godot16PackedInt64ArrayaSERKS0_(godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:133:20
return (godot::PackedInt64Array*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIlE23compare_exchange_strongERllSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_AllocNodeE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0_claw_dtor(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:234:12
__claw_this_->~_AllocNode();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt9exceptionC2Ev() {
return sizeof(std::exception);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIjEC2Ev() {
return sizeof(std::atomic<unsigned int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D22translate_object_localERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:131:7
__claw_this_->translate_object_local(*offset);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EED1Ev(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:367:7
__claw_this_->~_Vector_base();
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZN5godot11SafeNumericImE13postincrementEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:80:20
return __claw_this_->postincrement();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPackedFloat32ArrayWConstIterator() {
return sizeof(godot::PackedFloat32Array::ConstIterator);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB11has_surfaceEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:55:22
return __claw_this_->has_surface();
}
}

namespace godot {
__CLAW_API unsigned long __claw__ZNK5godot11SafeNumericImE3getEv(godot::SafeNumeric<unsigned long>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:71:20
return __claw_this_->get();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot7Vector3cvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:176:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_5ColorEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Color>);
}
}

namespace godot {
__CLAW_API godot::Node3DGizmo* __claw__ZNK5godot3RefINS_11Node3DGizmoEE3ptrEv(godot::Ref<godot::Node3DGizmo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:99:20
return (godot::Node3DGizmo*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedStringArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedStringArray&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16ClassDBSingleton16initialize_classEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
godot::ClassDBSingleton::initialize_class();
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZN5godot8PtrToArgIRKNS_8NodePathEE7convertEPKv(godot::NodePath* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
new (__claw_result_) godot::NodePath(godot::PtrToArg<const godot::NodePath&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ERKS8_(std::unordered_map<int,int>* __claw_this_, const std::unordered_map<int,int>* arg0) {
// /usr/include/c++/13/bits/unordered_map.h:188:7
new (__claw_this_) std::unordered_map<int,int>(*arg0);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5ArraygtERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:214:7
return __claw_this_->operator>(*other);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm(std::basic_string<char>* __claw_this_, std::basic_string<char>::size_type __n) {
// /usr/include/c++/13/bits/basic_string.h:1113:7
__claw_this_->resize(__n);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwEmmEi(std::__atomic_base<wchar_t>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40AABB_claw_dtor(godot::PtrToArg<godot::AABB>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZN5godot8PtrToArgINS_16PackedColorArrayEE7convertEPKv(godot::PackedColorArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
new (__claw_result_) godot::PackedColorArray(godot::PtrToArg<godot::PackedColorArray>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DmLEf(struct godot::Transform3D* __claw_this_, const real_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:108:7
__claw_this_->operator*=(p_val);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AE2Ac_claw_ctor(godot::PtrToArg<unsigned char**>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
new (__claw_this_) godot::PtrToArg<unsigned char**>();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray10decode_s32El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:182:10
return __claw_this_->decode_s32(byte_offset);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array9push_backERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:166:7
__claw_this_->push_back(*value);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC2Ev() {
return alignof(std::basic_string_view<char16>);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8NodePath4hashEv(godot::NodePath* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:99:10
return __claw_this_->hash();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWcharR1() {
return alignof(godot::PtrToArg<const unsigned char&>);
}
}

namespace godot {
__CLAW_API void __claw_set_godotWRect2i_position(struct godot::Rect2i* __claw_this_, godot::Point2i* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:42:21

__claw_this_->position = *__claw_value_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB14class_has_enumERKNS_10StringNameES3_b(const godot::StringName* _class, const godot::StringName* name, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::class_has_enum(*_class, *name, no_inheritance);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWDictionaryR1() {
return sizeof(godot::GetTypeInfo<const godot::Dictionary&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE4swapEPNS3_7ElementES5_(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_A, godot::List<godot::PropertyInfo>::Element* p_B) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:472:7
__claw_this_->swap(p_A, p_B);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D20set_rotation_degreesERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* euler_degrees) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:78:7
__claw_this_->set_rotation_degrees(*euler_degrees);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedFloat64ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedFloat64Array&>);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZNK5godot4Node11get_path_toEPS0_b(godot::NodePath* __claw_result_, godot::Node* __claw_this_, godot::Node* node, bool use_unique_path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:164:11
new (__claw_result_) godot::NodePath(__claw_this_->get_path_to(node, use_unique_path));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Transform3D_claw_dtor(godot::TypedArray<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:101:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot4Node27_get_configuration_warningsEv(godot::PackedStringArray* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:283:28
new (__claw_result_) godot::PackedStringArray(__claw_this_->_get_configuration_warnings());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D18scale_object_localERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:130:7
__claw_this_->scale_object_local(*scale);
}
}

__CLAW_API const int* __claw_get___locale_struct___ctype_toupper(struct __locale_struct* __claw_this_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

return (const int*)__claw_this_->__ctype_toupper;
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxE9fetch_xorExSt12memory_order(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:678:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<const godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<const godot::PropertyUsageFlags>();
}
}

namespace godot {
__CLAW_API unsigned int __claw__ZNK5godot11SafeNumericIjE3getEv(godot::SafeNumeric<unsigned int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:71:20
return __claw_this_->get();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_5ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:179:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWRect2iR1() {
return sizeof(godot::PtrToArg<const godot::Rect2i&>);
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZNK5godot16PackedColorArrayplERKS0_(godot::PackedColorArray* __claw_result_, godot::PackedColorArray* __claw_this_, const godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:134:19
new (__claw_result_) godot::PackedColorArray(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicImEC1Em(std::atomic<unsigned long>* __claw_this_, std::atomic<unsigned long>::__integral_type __i) {
// /usr/include/c++/13/atomic:902:17
new (__claw_this_) std::atomic<unsigned long>(__i);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10uri_decodeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:329:9
new (__claw_result_) godot::String(__claw_this_->uri_decode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D18is_visible_in_treeEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:118:7
return __claw_this_->is_visible_in_tree();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWNodeWProcessThreadMessagesR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ESt16initializer_listIS6_EmRKSD_RKSB_RKS7_(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::initializer_list<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __l, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt_count_hint, const std::hash<godot::StringName>* __hf, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::key_equal* __eql, const std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::allocator_type* __a) {
// /usr/include/c++/13/bits/hashtable.h:571:7
new (__claw_this_) std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>(*__l, __bkt_count_hint, *__hf, *__eql, *__a);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Identity0godotWStringName1() {
return alignof(std::_Identity<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1b_claw_ctor(godot::PtrToArg<const bool*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
new (__claw_this_) godot::PtrToArg<const bool*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIiEC2Ev() {
return sizeof(std::__atomic_base<int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_6StringEEaSERKNS_5ArrayE(godot::TypedArray<godot::String>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:89:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharStringTE3EE23C_claw_dtor(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:84:7
__claw_this_->~CharStringT();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWSideR1() {
return sizeof(godot::GetTypeInfo<const godot::Side&>);
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZN5godot18PackedFloat32ArrayaSERKS0_(godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:133:22
return (godot::PackedFloat32Array*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWfloatR1() {
return alignof(godot::GetTypeInfo<const float&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector2_claw_dtor(godot::TypedArray<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:90:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEppEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEaSEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE8IteratorC1ERKS4_(struct godot::List<godot::PropertyInfo>::Iterator* __claw_this_, const struct godot::List<godot::PropertyInfo>::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:161:3
new (__claw_this_) godot::List<godot::PropertyInfo>::Iterator(*p_it);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(std::basic_string<char>* __claw_this_, std::basic_string<char>* __str) {
// /usr/include/c++/13/bits/basic_string.h:677:7
new (__claw_this_) std::basic_string<char>(std::move(*__str));
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot16PackedInt64Array11_native_ptrEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:100:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis13orthogonalizeEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:217:7
__claw_this_->orthogonalize();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt5ctypeIwEC2Em() {
return alignof(std::ctype<wchar_t>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node11can_processEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:201:7
return __claw_this_->can_process();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringName10capitalizeEv(godot::String* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:291:9
new (__claw_result_) godot::String(__claw_this_->capitalize());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6repeatEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t count) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:300:9
new (__claw_result_) godot::String(__claw_this_->repeat(count));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Rect29has_pointERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const godot::Point2* p_point) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:188:14
return __claw_this_->has_point(*p_point);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_can_convert() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:86:50

return godot::internal::gdextension_interface_variant_can_convert;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE9fetch_addEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:633:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot18GDExtensionBinding4initEiiPNS0_8InitDataEPi() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:225:25
return godot::GDExtensionBinding::init();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWless0godotWStringName11() {
return sizeof(std::__type_identity<std::less<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayItEaSERKNS_5ArrayE(godot::TypedArray<unsigned short>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:81:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API const double* __claw__ZNK5godot18PackedFloat64ArrayixEl(godot::PackedFloat64Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:135:16
return (double*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40ArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Vector2iE40EE40Axis_claw_ctor(godot::VariantCaster<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_this_) godot::VariantCaster<godot::Vector2i::Axis>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneEPKc(godot::String* __claw_this_, const char* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:449:7
return __claw_this_->operator!=(p_str);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String12pad_decimalsEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t digits) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:362:9
new (__claw_result_) godot::String(__claw_this_->pad_decimals(digits));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3E23v_claw_ctor(godot::GetTypeInfo<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:161:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector3>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWequal_to0int11() {
return alignof(std::__type_identity<std::equal_to<int>>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Equality0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Equality<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10error_codeC2Ev() {
return alignof(std::error_code);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaE8exchangeEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D16set_as_top_levelEb(godot::Node3D* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:102:7
__claw_this_->set_as_top_level(enable);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node16_physics_processEd(godot::Node* __claw_this_, double delta) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:279:15
__claw_this_->_physics_process(delta);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node10queue_freeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:225:7
__claw_this_->queue_free();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIPNSt8__detail15_Hash_node_baseEEC1ERKS2_(std::allocator<std::__detail::_Hash_node_base*>* __claw_this_, const std::allocator<std::__detail::_Hash_node_base*>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<std::__detail::_Hash_node_base*>(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot22_err_print_index_errorEPKcS1_illS1_S1_S1_bb(const char* p_function, const char* p_file, int p_line, int64_t p_index, int64_t p_size, const char* p_index_str, const char* p_size_str, const char* p_message, bool p_editor_notify, bool p_fatal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:48:6
godot::_err_print_index_error(p_function, p_file, p_line, p_index, p_size, p_index_str, p_size_str, p_message, p_editor_notify, p_fatal);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40EulerOrderE23v_claw_dtor(godot::GetTypeInfo<const godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEEC1ERKS8_RKS7_(std::unordered_map<int,int>* __claw_this_, const std::unordered_map<int,int>* __umap, const std::unordered_map<int,int>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:207:7
new (__claw_this_) std::unordered_map<int,int>(*__umap, *__a);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIwEC1Ev(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<wchar_t>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIwEC1Ew(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<wchar_t>(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_keyed_setter() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:99:57

return godot::internal::gdextension_interface_variant_get_ptr_keyed_setter;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector312direction_toERKS0_(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:141:25
new (__claw_result_) godot::Vector3(__claw_this_->direction_to(*p_to));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIRNS_15KeyModifierMaskEEC2El() {
return alignof(godot::BitField<godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneEPKw(godot::String* __claw_this_, const wchar_t* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:450:7
return __claw_this_->operator!=(p_str);
}
}

namespace godot {
__CLAW_API real_t* __claw__ZN5godot10QuaternionixEi(struct godot::Quaternion* __claw_this_, int idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:50:25
return (real_t*) (&__claw_this_->operator[](idx));
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_utility_function() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:103:61

return godot::internal::gdextension_interface_variant_get_ptr_utility_function;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWlongWdouble1() {
return sizeof(std::__hash_base<unsigned long,long double>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant3setERKS0_S2_Pb(godot::Variant* __claw_this_, const godot::Variant* key, const godot::Variant* value, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:302:7
__claw_this_->set(*key, *value, r_valid);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Vector_baseIN5godot12PropertyInfoESaIS1_EEC2Ev() {
return alignof(std::_Vector_base<godot::PropertyInfo,std::allocator<godot::PropertyInfo>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_ptr_operator_evaluator() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:90:63

return godot::internal::gdextension_interface_variant_get_ptr_operator_evaluator;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0int1() {
return alignof(godot::GetTypeInfo<int>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_18PackedVector3ArrayE(godot::Array* __claw_this_, const godot::PackedVector3Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:157:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector4i_claw_dtor(godot::PtrToArg<const godot::Vector4i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:140:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVSt13__atomic_baseIDsEppEi(std::__atomic_base<char16>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_8NodePathEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:390:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::NodePath>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace pmr {
__CLAW_API unsigned long long __claw_alignof__ZNSt3pmr15memory_resourceC2Ev() {
return alignof(std::pmr::memory_resource);
}
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_flags(struct godot::MethodInfo* __claw_this_, uint32_t __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->flags = __claw_value_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_5ArrayEE6encodeES1_Pv(godot::Array* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
godot::PtrToArg<const godot::Array&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AE2A1c_claw_ctor(godot::PtrToArg<const unsigned char**>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
new (__claw_this_) godot::PtrToArg<const unsigned char**>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_16PackedInt64ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::PackedInt64Array>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_keyed_checker(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:101:58

godot::internal::gdextension_interface_variant_get_ptr_keyed_checker = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArrayC1EOS0_(godot::PackedColorArray* __claw_this_, godot::PackedColorArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:106:2
new (__claw_this_) godot::PackedColorArray(std::move(*other));
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIcE23compare_exchange_strongERccSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector2E23v_claw_ctor(godot::GetTypeInfo<godot::Vector2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:157:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector2>();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIiE21compare_exchange_weakERiiSt12memory_orderS2_(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40InternalModeE23v_claw_dtor(godot::GetTypeInfo<godot::Node::InternalMode&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIxEC1Ex(std::atomic<long long>* __claw_this_, std::atomic<long long>::__integral_type __i) {
// /usr/include/c++/13/atomic:925:17
new (__claw_this_) std::atomic<long long>(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNSt13__atomic_baseIhE9fetch_andEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:653:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZNK5godot16PackedInt64ArrayplERKS0_(godot::PackedInt64Array* __claw_result_, godot::PackedInt64Array* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:132:19
new (__claw_result_) godot::PackedInt64Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWRID1() {
return alignof(godot::PtrToArg<godot::RID>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_8Vector2iE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector2i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:371:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API int64_t __claw__ZN5godot4Math5wrapiElll(int64_t value, int64_t min, int64_t max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:741:16
return godot::Math::wrapi(value, min, max);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt12ctype_bynameIcEC1EPKcm(std::ctype_byname<char>* __claw_this_, const char* __s, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:1511:7
new (__claw_this_) std::ctype_byname<char>(__s, __refs);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPropertyInfo() {
return sizeof(godot::PropertyInfo);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector2i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector4iE40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<const godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0godotWNodePath11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<godot::NodePath>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40ClockDirectionE23v_claw_dtor(godot::GetTypeInfo<godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_10DictionaryEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Dictionary>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_cE3AE40NE40godotE40NE40internalE40SE40EngineClassRegistrationE3EE23E24E40NE40godotE40SE40Node_claw_dtor(godot::internal::EngineClassRegistration<godot::Node>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:123:8
__claw_this_->~EngineClassRegistration();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23I_claw_dtor(godot::TypedArray<int>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:84:1
__claw_this_->~TypedArray();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector212direction_toERKS0_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:102:25
new (__claw_result_) godot::Vector2(__claw_this_->direction_to(*p_to));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWequal_to0godotWStringName11() {
return sizeof(std::__type_identity<std::equal_to<godot::StringName>>);
}
}

namespace godot {
__CLAW_API godot::Tween* __claw__ZNK5godot3RefINS_5TweenEE3ptrEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:99:20
return (godot::Tween*) __claw_this_->ptr();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNKSt13__atomic_baseIaE4loadESt12memory_order(std::__atomic_base<char>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWStringName1() {
return alignof(godot::PtrToArg<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::PtrToArg<godot::BitField<godot::MethodFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Variant_claw_ctor(godot::PtrToArg<godot::Variant>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
new (__claw_this_) godot::PtrToArg<godot::Variant>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Basis11is_diagonalEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:148:7
return __claw_this_->is_diagonal();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWJoyButton1() {
return sizeof(godot::PtrToArg<godot::JoyButton>);
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZNK5godot4AABB6expandERKNS_7Vector3E(struct godot::AABB* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:101:7
new (__claw_result_) godot::AABB(__claw_this_->expand(*p_vector));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairIKN5godot10StringNameEPNS0_10MethodBindEEC2ERKS5_() {
return alignof(std::pair<const godot::StringName,godot::MethodBind*>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6SignalC1Ev(godot::Signal* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:86:2
new (__claw_this_) godot::Signal();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DC1ERKNS_7Vector2ES3_S3_(struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_x, const struct godot::Vector2* p_y, const struct godot::Vector2* p_origin) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:136:2
new (__claw_this_) godot::Transform2D(*p_x, *p_y, *p_origin);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector3R1() {
return alignof(godot::GetTypeInfo<const godot::Vector3&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsEC1ERS1_(godot::CowData<char16>* __claw_this_, godot::CowData<char16>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:248:17
new (__claw_this_) godot::CowData<char16>(*p_from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWunsignedWcharR1() {
return sizeof(godot::GetTypeInfo<const unsigned char&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWcharR1() {
return alignof(godot::PtrToArg<const char&>);
}
}

namespace std {
__CLAW_API std::vector<godot::PropertyInfo>::size_type __claw__ZNKSt6vectorIN5godot12PropertyInfoESaIS1_EE4sizeEv(std::vector<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:992:7
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName11begins_withERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:278:7
return __claw_this_->begins_with(*text);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array8IteratorC1EPd(struct godot::PackedFloat64Array::Iterator* __claw_this_, double* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:157:3
new (__claw_this_) godot::PackedFloat64Array::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8BitFieldIKNS_15KeyModifierMaskEEC2El() {
return alignof(godot::BitField<const godot::KeyModifierMask>);
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API void __claw__ZNSt15__exception_ptr13exception_ptrD1Ev(std::__exception_ptr::exception_ptr* __claw_this_) {
// /usr/include/c++/13/bits/exception_ptr.h:147:7
__claw_this_->~exception_ptr();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Vector4i_claw_dtor(struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:42:21
__claw_this_->~Vector4i();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadMessagesE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedInt64Array1() {
return sizeof(godot::PtrToArg<godot::PackedInt64Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_10DictionaryEE6encodeES1_Pv(godot::Dictionary* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:154:1
godot::PtrToArg<const godot::Dictionary&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<godot::StringName>>::size_type __claw__ZNSt16allocator_traitsISaIN5godot10StringNameEEE8max_sizeERKS2_(const std::allocator_traits<std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<godot::StringName>>::max_size(*__a);
}
}

namespace godot {
namespace internal {
__CLAW_API godot::Object* __claw__ZN5godot8internal27get_object_instance_bindingEPv(godot::GodotObject* arg0) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:60:9
return (godot::Object*) godot::internal::get_object_instance_binding(arg0);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector4iR1() {
return alignof(godot::GetTypeInfo<const godot::Vector4i&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Af_claw_dtor(godot::PtrToArg<float*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:232:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIjE23compare_exchange_strongERjjSt12memory_orderS2_(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35slerpERKS0_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_to, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:109:25
new (__claw_result_) godot::Vector3(__claw_this_->slerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWCallableCustomMethodPointerBase() {
return alignof(godot::CallableCustomMethodPointerBase);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23LE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<long>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<long>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ObjectDB_claw_dtor(godot::ObjectDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:111:7
__claw_this_->~ObjectDB();
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZN5godot18PackedFloat64ArrayaSERKS0_(godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:133:22
return (godot::PackedFloat64Array*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWunary_function0godotWStringNameWgodotWStringName1() {
return sizeof(std::unary_function<godot::StringName,godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_6Rect2iEE6encodeES1_Pv(struct godot::Rect2i* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
godot::PtrToArg<const godot::Rect2i&>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWcharP1() {
return alignof(godot::PtrToArg<const char*>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector412direction_toERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:92:10
new (__claw_result_) godot::Vector4(__claw_this_->direction_to(*p_to));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p2DD_claw_dtor(std::common_type<long double,long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2324:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_s64Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:202:7
__claw_this_->encode_s64(byte_offset, value);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEE22_M_deallocate_node_ptrEPS9_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>::__node_ptr __n) {
// /usr/include/c++/13/bits/hashtable_policy.h:1968:7
__claw_this_->_M_deallocate_node_ptr(__n);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWStringNameR1() {
return alignof(godot::PtrToArg<const godot::StringName&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWProjectionWPlanesR1() {
return sizeof(godot::GetTypeInfo<const godot::Projection::Planes&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array8IteratorC1EPf(struct godot::PackedFloat32Array::Iterator* __claw_this_, float* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:157:3
new (__claw_this_) godot::PackedFloat32Array::Iterator(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDsEaSERKS1_(godot::CharStringT<char16>* __claw_this_, const godot::CharStringT<char16>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:109:22
__claw_this_->operator=(*p_str);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::Array&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNSt13__atomic_baseIsEpLEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector25slerpERKS0_f(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_to, const real_t p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:113:25
new (__claw_result_) godot::Vector2(__claw_this_->slerp(*p_to, p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40SignalE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::Signal>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:393:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::Signal>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector3::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector3::Axis&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNVSt13__atomic_baseIbEoREb(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_keyed(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:70:48

godot::internal::gdextension_interface_variant_get_keyed = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String4rpadElRKS0_(godot::String* __claw_result_, godot::String* __claw_this_, int64_t min_length, const godot::String* character) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:361:9
new (__claw_result_) godot::String(__claw_this_->rpad(min_length, *character));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2i8enclosesERKS0_(struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:77:14
return __claw_this_->encloses(*p_rect);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis6rotateERKNS_7Vector3ENS_10EulerOrderE(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_euler, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:70:7
__claw_this_->rotate(*p_euler, p_order);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot12PropertyInfoEED1Ev(std::__new_allocator<godot::PropertyInfo>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIlE23compare_exchange_strongERllSt12memory_orderS2_(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type* __i1, std::__atomic_base<long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIxEC1Ev(std::atomic<long long>* __claw_this_) {
// /usr/include/c++/13/atomic:919:7
new (__claw_this_) std::atomic<long long>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector3i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3i::Axis&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIDsE12is_lock_freeEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godotplEDiRKNS_6StringE(godot::String* __claw_result_, char32 p_char, const godot::String* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:481:8
new (__claw_result_) godot::String(godot::operator+(p_char, *p_str));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedInt64Array_claw_ctor(godot::PtrToArg<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
new (__claw_this_) godot::PtrToArg<godot::PackedInt64Array>();
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot7Variant9duplicateEb(godot::Variant* __claw_result_, godot::Variant* __claw_this_, bool deep) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:326:10
new (__claw_result_) godot::Variant(__claw_this_->duplicate(deep));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIjEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<unsigned int>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEmIEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0longW10001() {
return sizeof(std::integral_constant<long,1000>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePatheqERKS0_(godot::NodePath* __claw_this_, const godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:108:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot6Object16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
return (godot::StringName*) (&godot::Object::get_class_static());
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_get_type_name() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:85:51

return godot::internal::gdextension_interface_variant_get_type_name;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIhEC1Ev(std::initializer_list<unsigned char>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<unsigned char>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0longW10000000001() {
return alignof(std::integral_constant<long,1000000000>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat32Array8IteratorC1Ev(struct godot::PackedFloat32Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:158:3
new (__claw_this_) godot::PackedFloat32Array::Iterator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW_Rb_tree_key_compare0stdWless0godotWStringName111() {
return sizeof(std::__type_identity<std::_Rb_tree_key_compare<std::less<godot::StringName>>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedByteArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedByteArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_8NodePathEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::NodePath>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0unsignedWint1() {
return alignof(godot::GetTypeInfo<unsigned int>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector44AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector4::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_script_instance_create2() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:173:54

return godot::internal::gdextension_interface_script_instance_create2;
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZN5godot15PackedByteArray10encode_varElRKNS_7VariantEb(godot::PackedByteArray* __claw_this_, int64_t byte_offset, const godot::Variant* value, bool allow_objects) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:206:10
return __claw_this_->encode_var(byte_offset, *value, allow_objects);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector34AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPlaneR1() {
return alignof(godot::GetTypeInfo<const godot::Plane&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_7Vector24AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot9CharProxyIwEadEv(godot::CharProxy<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:70:26
return (const wchar_t*) __claw_this_->operator&();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40PropertyHintE23v_claw_ctor(godot::GetTypeInfo<godot::PropertyHint&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:54:1
new (__claw_this_) godot::GetTypeInfo<godot::PropertyHint&>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_6SignalE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Signal* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:397:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_NS0_7ClassDB9ClassInfoEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE11bucket_sizeEm(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_, std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __bkt) {
// /usr/include/c++/13/bits/hashtable.h:679:7
return __claw_this_->bucket_size(__bkt);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_18PackedFloat64ArrayE(godot::Array* __claw_this_, const godot::PackedFloat64Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:154:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23d_claw_dtor(godot::PtrToArg<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBitField0godotWKeyModifierMask11() {
return alignof(godot::PtrToArg<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Basis11is_rotationEv(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:149:7
return __claw_this_->is_rotation();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayC1Ev(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:101:2
new (__claw_this_) godot::PackedInt32Array();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32Array8IteratorC1ERKS1_(struct godot::PackedInt32Array::Iterator* __claw_this_, const struct godot::PackedInt32Array::Iterator* p_it) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:159:3
new (__claw_this_) godot::PackedInt32Array::Iterator(*p_it);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWbinary_function0constWvoidPWconstWvoidPWbool1() {
return alignof(std::binary_function<const void*,const void*,bool>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZN5godot8PtrToArgINS_15PackedByteArrayEE7convertEPKv(godot::PackedByteArray* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
new (__claw_result_) godot::PackedByteArray(godot::PtrToArg<godot::PackedByteArray>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_dtor(godot::GetTypeInfo<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:162:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot7VariantcvNS_11Transform2DEEv(struct godot::Transform2D* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:235:2
new (__claw_result_) godot::Transform2D(__claw_this_->operator Transform2D());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWhash0godotWStringName11() {
return sizeof(std::__type_identity<std::hash<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedByteArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3i_claw_ctor(godot::PtrToArg<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
new (__claw_this_) godot::PtrToArg<godot::Vector3i>();
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot4Node30get_physics_process_delta_timeEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:182:9
return __claw_this_->get_physics_process_delta_time();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3R1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_15PackedByteArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedByteArray>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:110:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant12callp_staticENS0_4TypeERKNS_10StringNameEPPKS0_iRS0_Ri(enum godot::Variant::Type type, const godot::StringName* method, const godot::Variant** args, int argcount, godot::Variant* r_ret, int* r_error) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:285:14
godot::Variant::callp_static(type, *method, args, argcount, *r_ret, *r_error);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector36posmodEf(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const real_t p_mod) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:135:25
new (__claw_result_) godot::Vector3(__claw_this_->posmod(p_mod));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String17validate_filenameEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:348:9
new (__claw_result_) godot::String(__claw_this_->validate_filename());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot5Color13html_is_validERKNS_6StringE(const godot::String* p_color) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:192:14
return godot::Color::html_is_valid(*p_color);
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIDiEaSERKDi(godot::CharProxy<char32>* __claw_this_, const char32* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:74:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZZN5godot7CowDataIwE6resizeElE6(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:218:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node12add_to_groupERKNS_10StringNameEb(godot::Node* __claw_this_, const godot::StringName* group, bool persistent) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:165:7
__claw_this_->add_to_group(*group, persistent);
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::ConstIterator* __claw__ZNK5godot18PackedFloat64Array5beginEv(struct godot::PackedFloat64Array::ConstIterator* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:197:31
new (__claw_result_) godot::PackedFloat64Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWArrayW_MethodBindings() {
return alignof(godot::Array::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Signal_claw_dtor(godot::PtrToArg<godot::Signal>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:153:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Rect2_claw_ctor(godot::PtrToArg<const godot::Rect2&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
new (__claw_this_) godot::PtrToArg<const godot::Rect2&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DC1EfRKNS_7Vector2E(struct godot::Transform2D* __claw_this_, const real_t p_rot, const struct godot::Vector2* p_pos) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:142:2
new (__claw_this_) godot::Transform2D(p_rot, *p_pos);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWNodeWInternalMode1() {
return alignof(godot::GetTypeInfo<const godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40RIDE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::RID>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:391:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8NodePathneERKS0_(godot::NodePath* __claw_this_, const godot::NodePath* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/node_path.hpp:109:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIRKNS_11MethodFlagsEE8has_flagES3_(godot::BitField<const godot::MethodFlags&>* __claw_this_, const enum godot::MethodFlags* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(*p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIKNS_15KeyModifierMaskEE8has_flagES1_(godot::BitField<const godot::KeyModifierMask>* __claw_this_, const enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_6ObjectEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE8max_sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::allocator<std::pair<const godot::StringName,godot::Object*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:659:7
return __claw_this_->max_size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS2_() {
return sizeof(std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWError1() {
return alignof(godot::GetTypeInfo<const godot::Error>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf16_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:106:56

godot::internal::gdextension_interface_string_new_with_utf16_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API const char* __claw__ZNK5godot11CharStringTIcE3ptrEv(godot::CharStringT<char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:92:26
return (const char*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot18PackedFloat64Array11_native_ptrEv(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:100:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40RIDE23v_claw_dtor(godot::GetTypeInfo<godot::RID>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:175:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node31set_process_unhandled_key_inputEb(godot::Node* __claw_this_, bool enable) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:197:7
__claw_this_->set_process_unhandled_key_input(enable);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMIDIMessage1() {
return sizeof(godot::GetTypeInfo<godot::MIDIMessage>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10QuaternionaSERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_q) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:140:7
__claw_this_->operator=(*p_q);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName17is_valid_filenameEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:341:7
return __claw_this_->is_valid_filename();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_signal() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:186:68

return godot::internal::gdextension_interface_classdb_register_extension_class_signal;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4NodeEEC1ERKNS_7VariantE(godot::TypedArray<godot::Node>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:46:17
new (__claw_this_) godot::TypedArray<godot::Node>(*p_variant);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector3iC1Ev(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:123:17
new (__claw_this_) godot::Vector3i();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40MethodDefinition_claw_dtor(struct godot::MethodDefinition* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:66:8
__claw_this_->~MethodDefinition();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector3E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector3::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_7Vector2EEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Vector2>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector29is_finiteEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:126:7
return __claw_this_->is_finite();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_new_with_utf32_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:107:56

godot::internal::gdextension_interface_string_new_with_utf32_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB28_unregister_engine_singletonERKNS_10StringNameE(const godot::StringName* p_class_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:167:14
godot::ClassDB::_unregister_engine_singleton(*p_class_name);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector318bezier_interpolateERKS0_S2_S2_f(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_control_1, const struct godot::Vector3* p_control_2, const struct godot::Vector3* p_end, const real_t p_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:112:25
new (__claw_result_) godot::Vector3(__claw_this_->bezier_interpolate(*p_control_1, *p_control_2, *p_end, p_t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node28set_physics_process_priorityEi(godot::Node* __claw_this_, int32_t priority) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:188:7
__claw_this_->set_physics_process_priority(priority);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoItvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:145:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<unsigned short>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_6Node3D16RotationEditModeEE6encodeES2_Pv(enum godot::Node3D::RotationEditMode p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
godot::PtrToArg<godot::Node3D::RotationEditMode>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_7Vector4E(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector4* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:377:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23IE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<int>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<int>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_11Node3DGizmoEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Node3DGizmo>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector313is_normalizedEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:94:22
return __claw_this_->is_normalized();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__success_typeE3EE23L_claw_dtor(std::__success_type<long>* __claw_this_) {
// /usr/include/c++/13/type_traits:2257:12
__claw_this_->~__success_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Dictionary5clearEv(godot::Dictionary* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:98:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4idvEi(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_, const int32_t p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:109:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator/(p_scalar));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEEixEi(godot::List<godot::PropertyInfo>* __claw_this_, int p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:522:5
return (struct godot::PropertyInfo*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantComparator_claw_ctor(struct godot::VariantComparator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:341:8
new (__claw_this_) godot::VariantComparator();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MIDIMessageE23v_claw_dtor(godot::GetTypeInfo<const godot::MIDIMessage&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWClockDirection1() {
return alignof(godot::PtrToArg<godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection6invertEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:116:7
__claw_this_->invert();
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot10Quaternion14get_axis_angleERNS_7Vector3ERf(struct godot::Quaternion* __claw_this_, struct godot::Vector3* r_axis, real_t* r_angle) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:81:22
__claw_this_->get_axis_angle(*r_axis, *r_angle);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector218bezier_interpolateERKS0_S2_S2_f(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_control_1, const struct godot::Vector2* p_control_2, const struct godot::Vector2* p_end, const real_t p_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:116:25
new (__claw_result_) godot::Vector2(__claw_this_->bezier_interpolate(*p_control_1, *p_control_2, *p_end, p_t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Quaternion9is_finiteEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:58:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_dtor(godot::GetTypeInfo<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot18PackedVector3ArrayixEl(godot::PackedVector3Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:140:17
return (struct godot::Vector3*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40SignalE40SE40_MethodBindings_claw_dtor(struct godot::Signal::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEeOEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:453:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayC1ERKNS_17PackedStringArrayE(godot::Array* __claw_this_, const godot::PackedStringArray* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:155:2
new (__claw_this_) godot::Array(*from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColordVEf(struct godot::Color* __claw_this_, float p_scalar) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:92:7
__claw_this_->operator/=(p_scalar);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Basis_claw_dtor(godot::PtrToArg<godot::Basis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:144:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNSt13__atomic_baseIDiEeOEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:449:7
return __claw_this_->operator^=(__i);
}
}

namespace godot {
__CLAW_API struct godot::PackedStringArray::ConstIterator* __claw__ZNK5godot17PackedStringArray3endEv(struct godot::PackedStringArray::ConstIterator* __claw_result_, godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:202:31
new (__claw_result_) godot::PackedStringArray::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_8BitFieldINS_11MethodFlagsEEEE6encodeES3_Pv(godot::BitField<godot::MethodFlags>* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
godot::PtrToArg<godot::BitField<godot::MethodFlags>>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEEC2Ev() {
return alignof(std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E2E23TE23TE40ListE40SE40ElementE40FE40eraseE23(godot::List::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:133:8
__claw_this_->erase();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWlong1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<unsigned long>&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIKNS_15MouseButtonMaskEE8has_flagES1_(godot::BitField<const godot::MouseButtonMask>* __claw_this_, const enum godot::MouseButtonMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10ProjectionEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Projection>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1110_List_baseIN5godot10StringNameESaIS2_EEC1EOS4_(std::_List_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::_List_base<godot::StringName,std::allocator<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/stl_list.h:546:7
new (__claw_this_) std::_List_base<godot::StringName,std::allocator<godot::StringName>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessThreadGroup1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessThreadGroup>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection22scale_translate_to_fitERKNS_4AABBE(struct godot::Projection* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:129:7
__claw_this_->scale_translate_to_fit(*p_aabb);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIaED1Ev(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVKSt13__atomic_baseIlE4loadESt12memory_order(std::__atomic_base<long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API int __claw__ZN5godot5Color21get_named_color_countEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:196:13
return godot::Color::get_named_color_count();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWMethodFlags11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::MethodFlags>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40MIDIMessage_claw_ctor(godot::PtrToArg<godot::MIDIMessage>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_this_) godot::PtrToArg<godot::MIDIMessage>();
}
}

namespace godot {
namespace internal {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8internal23EngineClassRegistrationINS_6Node3DEEC2Ev() {
return alignof(godot::internal::EngineClassRegistration<godot::Node3D>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ListE3EE23E24E40NE40godotE40SE40PropertyInfoE23E24E40NE40godotE40SE40DefaultAllocatorE40FTE40E3E1E23Tsort_custom_inplaceE23vE23(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:650:7
__claw_this_->sort_custom_inplace();
}
}

namespace godot {
__CLAW_API float* __claw__ZN5godot18PackedFloat32Array4ptrwEv(godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:138:9
return (float*) __claw_this_->ptrw();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEaSEm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWRect2() {
return sizeof(godot::Rect2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D13update_gizmosEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:110:7
__claw_this_->update_gizmos();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_float64_array_operator_index(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:139:64

godot::internal::gdextension_interface_packed_float64_array_operator_index = __claw_value_;
}
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40StringE40SE40_MethodBindings_claw_ctor(struct godot::String::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:86:16
new (__claw_this_) godot::String::_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIDiEC1EPKDi(godot::CharStringT<char32>* __claw_this_, const char32* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:110:17
new (__claw_this_) godot::CharStringT<char32>(p_cstr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4AABB10has_volumeEv(struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:51:22
return __claw_this_->has_volume();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261S_claw_ctor(godot::PtrToArg<const short&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:122:1
new (__claw_this_) godot::PtrToArg<const short&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4dVERKS0_(struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:115:22
__claw_this_->operator/=(*p_vec4);
}
}

namespace std {
__CLAW_API void __claw__ZNSt5ctypeIcEC1EP15__locale_structPKtbm(std::ctype<char>* __claw_this_, std::__c_locale __cloc, const std::ctype_base::mask* __table, bool __del, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:739:7
new (__claw_this_) std::ctype<char>(__cloc, __table, __del, __refs);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsEmIEs(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:429:7
return __claw_this_->operator-=(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImE9fetch_xorEmSt12memory_order(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:673:7
return __claw_this_->fetch_xor(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12_Node_handleIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaINSt8__detail10_Hash_nodeIS6_Lb0EEEEEC2Ev() {
return alignof(std::_Node_handle<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40NE40__detailE40SE40_Select1st_claw_dtor(std::__type_identity<std::__detail::_Select1st>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWJoyButton1() {
return sizeof(godot::GetTypeInfo<const godot::JoyButton>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot4Node19get_scene_file_pathEv(godot::String* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:178:9
new (__claw_result_) godot::String(__claw_this_->get_scene_file_path());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWJoyAxis1() {
return sizeof(godot::GetTypeInfo<const godot::JoyAxis>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0godotWVariant1WgodotWVariant1() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<godot::Variant>,godot::Variant>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11WstdW__detailW_Hash_node_baseP1() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>,std::__detail::_Hash_node_base*>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE9fetch_subEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node16set_process_modeENS0_11ProcessModeE(godot::Node* __claw_this_, enum godot::Node::ProcessMode mode) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:199:7
__claw_this_->set_process_mode(mode);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40NodePathE23v_claw_ctor(godot::GetTypeInfo<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:174:1
new (__claw_this_) godot::GetTypeInfo<godot::NodePath>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIsvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:146:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<short>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC2Ev() {
return alignof(std::list<godot::StringName>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot17PackedStringArray11operatornotEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:131:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEaSERKNS_5ArrayE(godot::TypedArray<godot::PackedFloat32Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:113:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector3i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector3i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6ObjectC1Ev(godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:20
new (__claw_this_) godot::Object();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector3WAxis1() {
return sizeof(godot::GetTypeInfo<godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZNK5godot7VariantcvNS_16PackedInt64ArrayEEv(godot::PackedInt64Array* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:256:2
new (__claw_result_) godot::PackedInt64Array(__claw_this_->operator PackedInt64Array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API enum godot::Vector3i::Axis __claw__ZNK5godot8Vector3i14max_axis_indexEv(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:72:17
return __claw_this_->max_axis_index();
}
}

namespace godot {
__CLAW_API void __claw__ZNK5godot9CharProxyIcEaSERKS1_(godot::CharProxy<char>* __claw_this_, const godot::CharProxy<char>* p_other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:78:22
__claw_this_->operator=(*p_other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWQuaternionR1() {
return sizeof(godot::GetTypeInfo<const godot::Quaternion&>);
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot6Object24get_incoming_connectionsEv(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:121:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->get_incoming_connections());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4i::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String17is_subsequence_ofERKS0_(godot::String* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:293:7
return __claw_this_->is_subsequence_of(*text);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1EmRKS2_RKS3_(std::list<godot::StringName>* __claw_this_, std::list<godot::StringName>::size_type __n, const std::list<godot::StringName>::value_type* __value, const std::list<godot::StringName>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_list.h:784:7
new (__claw_this_) std::list<godot::StringName>(__n, *__value, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPlaneR1() {
return sizeof(godot::PtrToArg<const godot::Plane&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE9fetch_addElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE9fetch_andElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::RID* __claw__ZN5godot3RIDaSEOS0_(godot::RID* __claw_this_, godot::RID* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:89:7
return (godot::RID*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot8Vector2idvERKS0_(struct godot::Vector2i* __claw_result_, struct godot::Vector2i* __claw_this_, const struct godot::Vector2i* p_v1) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:99:11
new (__claw_result_) godot::Vector2i(__claw_this_->operator/(*p_v1));
return __claw_result_;
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot11CharStringTIwE3ptrEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:92:26
return (const wchar_t*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWAABB1() {
return sizeof(godot::GetTypeInfo<godot::AABB>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2iR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2i&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItE8fetch_orEtSt12memory_order(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:663:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace godot {
__CLAW_API struct godot::Transform3D* __claw__ZNK5godot11Transform3D7inverseEv(struct godot::Transform3D* __claw_result_, struct godot::Transform3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:47:14
new (__claw_result_) godot::Transform3D(__claw_this_->inverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ProjectionE23v_claw_ctor(godot::GetTypeInfo<const godot::Projection&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
new (__claw_this_) godot::GetTypeInfo<const godot::Projection&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10StringNameC1ERKS0_(godot::StringName* __claw_this_, const godot::StringName* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:253:2
new (__claw_this_) godot::StringName(*from);
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<godot::PropertyInfo>>::size_type __claw__ZNSt16allocator_traitsISaIN5godot12PropertyInfoEEE8max_sizeERKS2_(const std::allocator_traits<std::allocator<godot::PropertyInfo>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<godot::PropertyInfo>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::ConstIterator* __claw__ZN5godot18PackedFloat64Array13ConstIteratormmEv(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:174:33
return (struct godot::PackedFloat64Array::ConstIterator*) (&__claw_this_->operator--());
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_method() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:180:68

return godot::internal::gdextension_interface_classdb_register_extension_class_method;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIjE6encodeEjPv(uint32_t p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:123:1
godot::PtrToArg<unsigned int>::encode(p_val, p_ptr);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIwE21compare_exchange_weakERwwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type* __i1, std::__atomic_base<wchar_t>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0char161() {
return sizeof(godot::GetTypeInfo<char16>);
}
}

namespace godot {
__CLAW_API godot::Ref<godot::World3D>* __claw__ZNK5godot6Node3D12get_world_3dEv(godot::Ref<godot::World3D>* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:106:15
new (__claw_result_) godot::Ref<godot::World3D>(__claw_this_->get_world_3d());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZN5godot8PtrToArgIRKNS_5ArrayEE7convertEPKv(godot::Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
new (__claw_result_) godot::Array(godot::PtrToArg<const godot::Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVerticalAlignmentR1() {
return alignof(godot::GetTypeInfo<godot::VerticalAlignment&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIsED1Ev(std::atomic<short>* __claw_this_) {
// /usr/include/c++/13/atomic:782:7
__claw_this_->~atomic();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40NodePath_claw_ctor(godot::PtrToArg<const godot::NodePath&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
new (__claw_this_) godot::PtrToArg<const godot::NodePath&>();
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot10StringName10similarityERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* text) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:283:9
return __claw_this_->similarity(*text);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC2Ev() {
return alignof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GDExtensionBinding_claw_dtor(godot::GDExtensionBinding* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:202:7
__claw_this_->~GDExtensionBinding();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color5set_vEf(struct godot::Color* __claw_this_, float p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:218:22
__claw_this_->set_v(p_v);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_15InlineAlignmentEE6encodeES1_Pv(enum godot::InlineAlignment p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
godot::PtrToArg<godot::InlineAlignment>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWCallableCustom() {
return alignof(godot::CallableCustom);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector4dVERKf(struct godot::Vector4* __claw_this_, const real_t* s) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:117:22
__claw_this_->operator/=(*s);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Node_insert_return0stdW__detailW_Node_iterator0stdWpair0constWintWint1WfalseWfalse1WstdW_Node_handle0intWstdWpair0constWintWint1WstdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse1111() {
return alignof(std::_Node_insert_return<std::__detail::_Node_iterator<std::pair<const int,int>,false,false>,std::_Node_handle<int,std::pair<const int,int>,std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEppEv(std::__atomic_base<unsigned char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:405:7
return __claw_this_->operator++();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_dtor(godot::GetTypeInfo<godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40ProjectionE40EE40PlanesE23v_claw_ctor(godot::GetTypeInfo<const godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<const godot::Projection::Planes>();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_new_with_utf32_chars_and_len() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:112:62

return godot::internal::gdextension_interface_string_new_with_utf32_chars_and_len;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40AABBE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:385:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::AABB>&>();
}
}

namespace godot {
__CLAW_API godot::List<godot::PropertyInfo>::Element* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE12insert_afterEPNS3_7ElementERKS1_(godot::List<godot::PropertyInfo>* __claw_this_, godot::List<godot::PropertyInfo>::Element* p_element, const struct godot::PropertyInfo* p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:358:11
return (godot::List<godot::PropertyInfo>::Element*) __claw_this_->insert_after(p_element, *p_value);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_7Vector3E(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector3* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:374:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot3RefINS_5TweenEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:103:2
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Quaternion_claw_dtor(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:39:21
__claw_this_->~Quaternion();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node35set_scene_instance_load_placeholderEb(godot::Node* __claw_this_, bool load_placeholder) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:220:7
__claw_this_->set_scene_instance_load_placeholder(load_placeholder);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiEaNEDi(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIN5godot7VariantEEC1Ev(std::__new_allocator<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<godot::Variant>();
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseItE12is_lock_freeEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace std {
__CLAW_API void __claw_set_stdWid(std::locale::id* __claw_value_) {
// /usr/include/c++/13/bits/locale_facets.h:672:31

std::id = *__claw_value_;
}
}

namespace godot {
__CLAW_API enum godot::Vector3::Axis __claw__ZN5godot13VariantCasterINS_7Vector34AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
return godot::VariantCaster<godot::Vector3::Axis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_18PackedFloat64ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:184:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedFloat64Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWRect2i1() {
return sizeof(godot::PtrToArg<godot::Rect2i>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String5eraseEll(godot::String* __claw_result_, godot::String* __claw_this_, int64_t position, int64_t chars) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:303:9
new (__claw_result_) godot::String(__claw_this_->erase(position, chars));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10MethodInfoC1ENS_10StringNameE(struct godot::MethodInfo* __claw_this_, godot::StringName* p_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:80:2
new (__claw_this_) godot::MethodInfo(*p_name);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7ClassDB12add_propertyERKNS_10StringNameERKNS_12PropertyInfoES3_S3_i(const godot::StringName* p_class, const struct godot::PropertyInfo* p_pinfo, const godot::StringName* p_setter, const godot::StringName* p_getter, int p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:183:14
godot::ClassDB::add_property(*p_class, *p_pinfo, *p_setter, *p_getter, p_index);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_7Vector3EEaSERKNS_5ArrayE(godot::TypedArray<godot::Vector3>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:94:1
__claw_this_->operator=(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23f_claw_ctor(godot::PtrToArg<float>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:128:1
new (__claw_this_) godot::PtrToArg<float>();
}
}

namespace godot {
__CLAW_API godot::MultiplayerAPI* __claw__ZNK5godot3RefINS_14MultiplayerAPIEE3ptrEv(godot::Ref<godot::MultiplayerAPI>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:99:20
return (godot::MultiplayerAPI*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermEPNS_6ObjectE(godot::String* __claw_result_, godot::StringName* __claw_this_, godot::Object* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:395:9
new (__claw_result_) godot::String(__claw_this_->operator%(other));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIjE12is_lock_freeEv(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIlEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<long>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedByteArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedByteArray::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:59:16
__claw_this_->~_MethodBindings();
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNKSt13__atomic_baseIlE4loadESt12memory_order(std::__atomic_base<long>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:498:7
return __claw_this_->load(__m);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWlibrary(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:41:39

godot::internal::library = __claw_value_;
}
}
}

namespace godot {
__CLAW_API uint8_t __claw__ZN5godot8PtrToArgIbE10encode_argEb(bool p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
return godot::PtrToArg<bool>::encode_arg(p_val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWMouseButtonMask11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_7Vector2E(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector2* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:370:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIwE5clearEv(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:196:22
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_u16Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:197:7
__claw_this_->encode_u16(byte_offset, value);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhEppEi(std::__atomic_base<unsigned char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:389:7
return __claw_this_->operator++(arg0);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40KeyModifierMask_claw_dtor(godot::BitField<const godot::KeyModifierMask&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant9iter_initERS0_Rb(godot::Variant* __claw_this_, godot::Variant* r_iter, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:312:7
return __claw_this_->iter_init(*r_iter, *r_valid);
}
}

namespace godot {
__CLAW_API godot::Size2* __claw__ZNK5godot11Transform2D9get_scaleEv(godot::Size2* __claw_result_, struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:83:8
new (__claw_result_) godot::Size2(__claw_this_->get_scale());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0unsignedWshort1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<unsigned short>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23S_claw_dtor(godot::TypedArray<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:82:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API uint64_t __claw__ZNK5godot5Color9to_abgr64Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:56:11
return __claw_this_->to_abgr64();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessMode_claw_dtor(godot::PtrToArg<godot::Node::ProcessMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIdvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:154:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<double>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const godot::Variant* __claw__ZNK5godot5ArrayixEl(godot::Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:223:17
return (godot::Variant*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API enum godot::VerticalAlignment __claw__ZN5godot8PtrToArgINS_17VerticalAlignmentEE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
return godot::PtrToArg<godot::VerticalAlignment>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18GDExtensionBinding18deinitialize_levelEPvi(void* p_userdata, int p_level) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:229:14
godot::GDExtensionBinding::deinitialize_level(p_userdata, p_level);
}
}

namespace godot {
__CLAW_API godot::PackedColorArray* __claw__ZNK5godot16PackedColorArray5sliceEll(godot::PackedColorArray* __claw_result_, godot::PackedColorArray* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:121:19
new (__claw_result_) godot::PackedColorArray(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8Vector2i4AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Vector2i::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldINS_15KeyModifierMaskEEcvlEv(godot::BitField<godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40common_typeE3EE23p0_claw_dtor(std::common_type* __claw_this_) {
// /usr/include/c++/13/type_traits:2294:12
__claw_this_->~common_type();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_3RIDEE6encodeES1_Pv(godot::RID* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
godot::PtrToArg<godot::RID>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat64Array3hasEd(godot::PackedFloat64Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:117:7
return __claw_this_->has(value);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC1EOS4_(std::basic_string<char32>* __claw_this_, std::basic_string<char32>* __str) {
// /usr/include/c++/13/bits/basic_string.h:677:7
new (__claw_this_) std::basic_string<char32>(std::move(*__str));
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdWhash0int11() {
return sizeof(std::__type_identity<std::hash<int>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array8IteratorC1EPNS_7Vector2E(struct godot::PackedVector2Array::Iterator* __claw_this_, struct godot::Vector2* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:162:3
new (__claw_this_) godot::PackedVector2Array::Iterator(p_ptr);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_get_proc_address() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:40:47

return godot::internal::gdextension_interface_get_proc_address;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPackedStringArrayW_MethodBindings() {
return alignof(godot::PackedStringArray::_MethodBindings);
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt10_List_nodeIN5godot10StringNameEEEC1Ev(std::allocator<std::_List_node<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::_List_node<godot::StringName>>();
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNVKSt13__atomic_baseIwEcvwEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator wchar_t();
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZN5godot8PtrToArgINS_5ArrayEE7convertEPKv(godot::Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:155:1
new (__claw_result_) godot::Array(godot::PtrToArg<godot::Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray5clearEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:118:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1Ev(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:240:17
new (__claw_this_) godot::Basis();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Variant_claw_dtor(godot::PtrToArg<const godot::Variant&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40MouseButtonE23v_claw_ctor(godot::GetTypeInfo<godot::MouseButton&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
new (__claw_this_) godot::GetTypeInfo<godot::MouseButton&>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot11Transform2D11basis_xformERKNS_7Vector2E(struct godot::Vector2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:116:25
new (__claw_result_) godot::Vector2(__claw_this_->basis_xform(*p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName10bin_to_intEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:345:10
return __claw_this_->bin_to_int();
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZN5godot12SafeRefCount6refvalEv(godot::SafeRefCount* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:175:27
return __claw_this_->refval();
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1ERKS5_OSaISt13_Rb_tree_nodeIS1_EE(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_, const std::less<godot::StringName>* __comp, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Node_allocator* __a) {
// /usr/include/c++/13/bits/stl_tree.h:702:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>(*__comp, std::move(*__a));
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlE9fetch_subElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWVector4R1() {
return alignof(godot::PtrToArg<const godot::Vector4&>);
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot18PackedFloat64Array5sliceEll(godot::PackedFloat64Array* __claw_result_, godot::PackedFloat64Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:119:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8__detail15_Hashtable_baseIN5godot10StringNameESt4pairIKS2_PNS1_6ObjectEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEEC2Ev() {
return sizeof(std::__detail::_Hashtable_base<godot::StringName,std::pair<const godot::StringName,godot::Object*>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Hashtable_traits<false,false,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWJoyButtonR1() {
return sizeof(godot::GetTypeInfo<const godot::JoyButton&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1Ev(std::locale* __claw_this_) {
// /usr/include/c++/13/bits/locale_classes.h:121:5
new (__claw_this_) std::locale();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3_claw_dtor(godot::TypedArray<godot::Vector3>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:94:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldINS_15KeyModifierMaskEE8has_flagES1_(godot::BitField<godot::KeyModifierMask>* __claw_this_, enum godot::KeyModifierMask p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector2i1() {
return sizeof(godot::PtrToArg<godot::Vector2i>);
}
}

namespace godot {
__CLAW_API void __claw_set_godotW_GlobalNil_color(struct godot::_GlobalNil* __claw_this_, int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:202:8

__claw_this_->color = __claw_value_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIfvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:153:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<float>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEE8set_flagES2_(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_, const enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(p_flag);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNodePath1() {
return alignof(godot::PtrToArg<godot::NodePath>);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIaE9fetch_subEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt32ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedInt32Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbE8exchangeEbSt12memory_order(std::atomic<bool>* __claw_this_, bool __i, std::memory_order __m) {
// /usr/include/c++/13/atomic:123:5
return __claw_this_->exchange(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIyEC2Ev() {
return alignof(std::atomic<unsigned long long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10RefCountedC1Ev(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:46:20
new (__claw_this_) godot::RefCounted();
}
}

namespace godot {
__CLAW_API void __claw_set_godotWMethodInfo_default_arguments(struct godot::MethodInfo* __claw_this_, std::vector<godot::Variant>* __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:64:8

__claw_this_->default_arguments = *__claw_value_;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIyE23compare_exchange_strongERyySt12memory_orderS2_(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:572:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_19HorizontalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::HorizontalAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray4fillEl(godot::PackedByteArray* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:156:7
__claw_this_->fill(value);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot15PackedByteArray9decode_s8El(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:178:10
return __claw_this_->decode_s8(byte_offset);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_object_method_bind_ptrcall() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:158:56

return godot::internal::gdextension_interface_object_method_bind_ptrcall;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40EE40HorizontalAlignment_claw_dtor(godot::VariantCaster<godot::HorizontalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
__claw_this_->~VariantCaster();
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D12basis_scaledERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:89:14
new (__claw_result_) godot::Transform2D(__claw_this_->basis_scaled(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ListE3EE23E24E40NE40godotE40SE40PropertyInfoE23E24E40NE40godotE40SE40DefaultAllocatorE40SE40ConstIterator_claw_dtor(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:167:9
__claw_this_->~ConstIterator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWClockDirectionR1() {
return sizeof(godot::GetTypeInfo<const godot::ClockDirection&>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNVSt13__atomic_baseImEoREm(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array8IteratoreqERKS1_(struct godot::PackedInt32Array::Iterator* __claw_this_, const struct godot::PackedInt32Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:154:23
return __claw_this_->operator==(*b);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis3setEfffffffff(struct godot::Basis* __claw_this_, real_t xx, real_t xy, real_t xz, real_t yx, real_t yy, real_t yz, real_t zx, real_t zy, real_t zz) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:159:22
__claw_this_->set(xx, xy, xz, yx, yy, yz, zx, zy, zz);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_18PackedVector2ArrayE(godot::Variant* __claw_this_, const godot::PackedVector2Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:212:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat32Array::ConstIterator* __claw__ZNK5godot18PackedFloat32Array5beginEv(struct godot::PackedFloat32Array::ConstIterator* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:197:31
new (__claw_result_) godot::PackedFloat32Array::ConstIterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName19is_valid_hex_numberEb(godot::StringName* __claw_this_, bool with_prefix) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:338:7
return __claw_this_->is_valid_hex_number(with_prefix);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKiiEED1Ev(std::__new_allocator<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:104:7
__claw_this_->~__new_allocator();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPackedStringArrayR1() {
return sizeof(godot::GetTypeInfo<const godot::PackedStringArray&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedFloat64Array9push_backEd(godot::PackedFloat64Array* __claw_this_, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:109:7
return __claw_this_->push_back(value);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40EE40Side_claw_dtor(godot::PtrToArg<godot::Side>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector2irMERKi(struct godot::Vector2i* __claw_this_, const int32_t* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:105:7
__claw_this_->operator%=(*rvalue);
}
}

namespace std {
__CLAW_API std::__atomic_base<bool>::__int_type __claw__ZNKSt13__atomic_baseIbEcvbEv(std::__atomic_base<bool>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator bool();
}
}

namespace godot {
__CLAW_API enum godot::Vector2::Axis __claw__ZN5godot13VariantCasterINS_7Vector24AxisEE4castERKNS_7VariantE(const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
return godot::VariantCaster<godot::Vector2::Axis>::cast(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector212limit_lengthEf(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const real_t p_len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:88:10
new (__claw_result_) godot::Vector2(__claw_this_->limit_length(p_len));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEaSEx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:371:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEE8set_flagES4_(godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_, const enum godot::Node::ProcessThreadMessages* p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:266:22
__claw_this_->set_flag(*p_flag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName11operatornotEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:362:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_7Vector24AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2::Axis>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIavE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:144:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<char>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt4pairIKN5godot10StringNameEPNS1_6ObjectEEEC1Ev(std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::pair<const godot::StringName,godot::Object*>>();
}
}

namespace godot {
__CLAW_API godot::Ref<godot::World3D>* __claw__ZN5godot3RefINS_7World3DEE25_gde_internal_constructorEPNS_6ObjectE(godot::Ref<godot::World3D>* __claw_result_, godot::Object* obj) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:222:23
new (__claw_result_) godot::Ref<godot::World3D>(godot::Ref<godot::World3D>::_gde_internal_constructor(obj));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10DictionaryC2EPKNS_7VariantE() {
return sizeof(godot::Dictionary);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_7Vector34AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector3::Axis>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23I_claw_dtor(std::__type_identity<int>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_11Transform2DEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:382:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Transform2D>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector314is_zero_approxEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:148:7
return __claw_this_->is_zero_approx();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot5Rect2cvNS_6StringEEv(godot::String* __claw_result_, struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:361:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::unordered_map<int,int>::size_type __claw__ZNKSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE8max_sizeEv(std::unordered_map<int,int>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:322:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String8containsERKS0_(godot::String* __claw_this_, const godot::String* what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:334:7
return __claw_this_->contains(*what);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_to_latin1_chars(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:114:52

godot::internal::gdextension_interface_string_to_latin1_chars = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node8set_nameERKNS_6StringE(godot::Node* __claw_this_, const godot::String* name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:143:7
__claw_this_->set_name(*name);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIbvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:142:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<bool>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_7Vector44AxisEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector4::Axis>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEC2Ev() {
return sizeof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDsE5clearEv(godot::CowData<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:196:22
__claw_this_->clear();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWdouble1() {
return sizeof(std::__hash_base<unsigned long,double>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt32Array8IteratorneERKS1_(struct godot::PackedInt32Array::Iterator* __claw_this_, const struct godot::PackedInt32Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:155:23
return __claw_this_->operator!=(*b);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40SE40_Rb_tree_nodeE3EE23E24E40NE40godotE40SE40StringName_claw_ctor(std::__type_identity<std::allocator<std::_Rb_tree_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::allocator<std::_Rb_tree_node<godot::StringName>>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPropertyHint1() {
return sizeof(godot::GetTypeInfo<const godot::PropertyHint>);
}
}

namespace godot {
__CLAW_API enum godot::Error __claw__ZZN5godot7CowDataIDiE6resizeElE6(godot::CowData<char32>* __claw_this_, godot::CowData<char32>::Size p_size) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:218:8
return __claw_this_->resize(p_size);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot11Transform2D5xformERKNS_7Vector2E(struct godot::Vector2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Vector2* p_vec) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:118:25
new (__claw_result_) godot::Vector2(__claw_this_->xform(*p_vec));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3i5clampERKS0_S2_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_min, const struct godot::Vector3i* p_max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:89:11
new (__claw_result_) godot::Vector3i(__claw_this_->clamp(*p_min, *p_max));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Callable* __claw__ZN5godot8CallableaSEOS0_(godot::Callable* __claw_this_, godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:131:12
return (godot::Callable*) (&__claw_this_->operator=(std::move(*other)));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIlvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:150:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<long>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::MethodInfo* __claw__ZN5godot10MethodInfo9from_dictERKNS_10DictionaryE(struct godot::MethodInfo* __claw_result_, const godot::Dictionary* p_dict) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:77:20
new (__claw_result_) godot::MethodInfo(godot::MethodInfo::from_dict(*p_dict));
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt4pairIKiiEC2ERKS1_() {
return alignof(std::pair<const int,int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWBasisR1() {
return sizeof(godot::PtrToArg<const godot::Basis&>);
}
}

namespace godot {
__CLAW_API uint8_t __claw__ZNK5godot7VariantcvhEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:225:2
return __claw_this_->operator unsigned char();
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameENS0_7ClassDB9ClassInfoESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE11bucket_sizeEm(std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>* __claw_this_, std::unordered_map<godot::StringName,godot::ClassDB::ClassInfo>::size_type __n) {
// /usr/include/c++/13/bits/unordered_map.h:1029:7
return __claw_this_->bucket_size(__n);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot18PackedFloat32Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedFloat32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:120:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40ClockDirectionE23v_claw_ctor(godot::GetTypeInfo<const godot::ClockDirection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:41:1
new (__claw_this_) godot::GetTypeInfo<const godot::ClockDirection>();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot10Quaternion14length_squaredEv(struct godot::Quaternion* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:56:24
return __claw_this_->length_squared();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40AABB_claw_ctor(godot::PtrToArg<const godot::AABB&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
new (__claw_this_) godot::PtrToArg<const godot::AABB&>();
}
}

namespace godot {
__CLAW_API const wchar_t* __claw__ZNK5godot11CharStringTIwEcvPKwEv(godot::CharStringT<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:117:2
return (const wchar_t*) __claw_this_->operator const wchar_t *();
}
}

namespace godot {
__CLAW_API const int32_t* __claw__ZNK5godot16PackedInt32ArrayixEl(godot::PackedInt32Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:135:17
return (int32_t*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoImvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:149:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<unsigned long>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB9expand_toERKNS_7Vector3E(struct godot::AABB* __claw_this_, const struct godot::Vector3* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:103:22
__claw_this_->expand_to(*p_vector);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringeqERKNS_10StringNameE(godot::String* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:420:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWAABBR1() {
return sizeof(godot::PtrToArg<const godot::AABB&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWClockDirectionR1() {
return alignof(godot::GetTypeInfo<const godot::ClockDirection&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot8SafeFlagC2Eb() {
return alignof(godot::SafeFlag);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZN5godot11Transform2DixEi(struct godot::Transform2D* __claw_this_, int p_idx) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:60:11
return (struct godot::Vector2*) (&__claw_this_->operator[](p_idx));
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEE8is_validEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:200:14
return __claw_this_->is_valid();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWNodeWProcessMode1() {
return alignof(godot::GetTypeInfo<godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot38enum_qualified_name_to_class_info_nameERKNS_6StringE(godot::String* __claw_result_, const godot::String* p_qualified_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:227:15
new (__claw_result_) godot::String(godot::enum_qualified_name_to_class_info_name(*p_qualified_name));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::Iterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5beginEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_result_, godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:192:26
new (__claw_result_) godot::List<godot::PropertyInfo>::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWPackedFloat32ArrayR1() {
return sizeof(godot::PtrToArg<const godot::PackedFloat32Array&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIcEC1Ev(std::__new_allocator<char>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<char>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3Array12append_arrayERKS0_(godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:115:7
__claw_this_->append_array(*array);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIbE6encodeEbPv(bool p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:117:1
godot::PtrToArg<bool>::encode(p_val, p_ptr);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot15PackedByteArray9push_backEl(godot::PackedByteArray* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:151:7
return __claw_this_->push_back(value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_mem_free(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:50:40

godot::internal::gdextension_interface_mem_free = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_ctor(godot::GetTypeInfo<godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_this_) godot::GetTypeInfo<godot::MouseButtonMask>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_4NodeEEC1Ev(godot::TypedArray<godot::Node>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:52:17
new (__claw_this_) godot::TypedArray<godot::Node>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant5clearEv(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:334:7
__claw_this_->clear();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIhvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:143:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<unsigned char>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return alignof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3ArrayeqERKS0_(godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:135:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector2Array::Iterator* __claw__ZN5godot18PackedVector2Array5beginEv(struct godot::PackedVector2Array::Iterator* __claw_result_, godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:195:26
new (__claw_result_) godot::PackedVector2Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2ArrayeqERKS0_(godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:135:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
__CLAW_API struct godot::PackedVector3Array::Iterator* __claw__ZN5godot18PackedVector3Array5beginEv(struct godot::PackedVector3Array::Iterator* __claw_result_, godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:195:26
new (__claw_result_) godot::PackedVector3Array::Iterator(__claw_this_->begin());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::char_traits<char32>::char_type* __claw__ZNSt11char_traitsIDiE6assignEPDimDi(std::char_traits<char32>::char_type* __s, std::size_t __n, std::char_traits<char32>::char_type __a) {
// /usr/include/c++/13/bits/char_traits.h:973:7
return (std::char_traits<char32>::char_type*) std::char_traits<char32>::assign(__s, __n, __a);
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot10Projection25get_viewport_half_extentsEv(struct godot::Vector2* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:113:10
new (__claw_result_) godot::Vector2(__claw_this_->get_viewport_half_extents());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot5BasisixEi(struct godot::Basis* __claw_this_, int axis) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:47:32
return (struct godot::Vector3*) (&__claw_this_->operator[](axis));
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector225cubic_interpolate_in_timeERKS0_S2_S2_fRKfS4_S4_(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_, const struct godot::Vector2* p_b, const struct godot::Vector2* p_pre_a, const struct godot::Vector2* p_post_b, const real_t p_weight, const real_t* p_b_t, const real_t* p_pre_a_t, const real_t* p_post_b_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:115:25
new (__claw_result_) godot::Vector2(__claw_this_->cubic_interpolate_in_time(*p_b, *p_pre_a, *p_post_b, p_weight, *p_b_t, *p_pre_a_t, *p_post_b_t));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWBasis1() {
return sizeof(godot::PtrToArg<godot::Basis>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKiiELb0EEEEEC1Ev(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1940:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>();
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt10_List_nodeIN5godot10StringNameEEEC2Ev() {
return alignof(std::allocator<std::_List_node<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2_claw_dtor(godot::TypedArray<godot::Rect2>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:92:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5BasisC1Efffffffff(struct godot::Basis* __claw_this_, real_t xx, real_t xy, real_t xz, real_t yx, real_t yy, real_t yz, real_t zx, real_t zy, real_t zz) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:210:2
new (__claw_this_) godot::Basis(xx, xy, xz, yx, yy, yz, zx, zy, zz);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWBitField0godotWMouseButtonMask11() {
return alignof(godot::PtrToArg<godot::BitField<godot::MouseButtonMask>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Node_handleIN5godot10StringNameES1_SaISt13_Rb_tree_nodeIS1_EEED1Ev(std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/bits/node_handle.h:347:7
__claw_this_->~_Node_handle();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt7__cxx1112basic_stringIDsSt11char_traitsIDsESaIDsEEC2ENS4_12__sv_wrapperERKS3_() {
return alignof(std::basic_string<char16>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4imLERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:99:27
return (struct godot::Vector4i*) (&__claw_this_->operator*=(*p_v));
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String6substrEll(godot::String* __claw_result_, godot::String* __claw_this_, int64_t from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:279:9
new (__claw_result_) godot::String(__claw_this_->substr(from, len));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::AABB* __claw__ZN5godot8PtrToArgIRKNS_4AABBEE7convertEPKv(struct godot::AABB* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:143:1
new (__claw_result_) godot::AABB(godot::PtrToArg<const godot::AABB&>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__new_allocator<char16>::size_type __claw__ZNKSt15__new_allocatorIDsE8max_sizeEv(std::__new_allocator<char16>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0godotWMethodFlags11() {
return sizeof(godot::GetTypeInfo<godot::BitField<godot::MethodFlags>>);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIcEC1Ev(std::allocator<char>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<char>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_10DictionaryEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:394:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Dictionary>>::get_class_info());
return __claw_result_;
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23D_claw_dtor(__iseqsig_type<long double>* __claw_this_) {
// /usr/include/math.h:1383:19
__claw_this_->~__iseqsig_type();
}

namespace godot {
__CLAW_API void __claw__ZN5godot16ClassDBSingleton4freeEPvi(void* data, int ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:49:2
godot::ClassDBSingleton::free(data, ptr);
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::ConstIterator* __claw__ZNK5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE3endEv(struct godot::List<godot::PropertyInfo>::ConstIterator* __claw_result_, godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:208:31
new (__claw_result_) godot::List<godot::PropertyInfo>::ConstIterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4Node22propagate_notificationEi(godot::Node* __claw_this_, int32_t what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:179:7
__claw_this_->propagate_notification(what);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIiE23compare_exchange_strongERiiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:601:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt6atomicIbE5storeEbSt12memory_order(std::atomic<bool>* __claw_this_, bool __i, std::memory_order __m) {
// /usr/include/c++/13/atomic:107:5
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3ArrayneERKS0_(godot::PackedVector3Array* __claw_this_, const godot::PackedVector3Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:136:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector2ArrayneERKS0_(godot::PackedVector2Array* __claw_this_, const godot::PackedVector2Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:136:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcEaSERKS1_(godot::CharStringT<char>* __claw_this_, const godot::CharStringT<char>* p_str) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:109:22
__claw_this_->operator=(*p_str);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6StringneERKNS_10StringNameE(godot::String* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:421:7
return __claw_this_->operator!=(*other);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWhash0godotWStringName1() {
return alignof(std::hash<godot::StringName>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIivE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:148:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<int>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3D11scale_basisERKNS_7Vector3E(struct godot::Transform3D* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:64:7
__claw_this_->scale_basis(*p_scale);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot10Projection6xform4ERKNS_5PlaneE(struct godot::Plane* __claw_result_, struct godot::Projection* __claw_this_, const struct godot::Plane* p_vec4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:121:8
new (__claw_result_) godot::Plane(__claw_this_->xform4(*p_vec4));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot6Node3D14get_quaternionEv(struct godot::Quaternion* __claw_result_, godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:87:13
new (__claw_result_) godot::Quaternion(__claw_this_->get_quaternion());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_10MethodBindEELb0EEEEC1ERKSA_(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* __claw_this_, const std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>(*arg0);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_11MIDIMessageEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:52:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MIDIMessage>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC1EPKDsm(std::basic_string_view<char16>* __claw_this_, const char16* __str, std::basic_string_view<char16>::size_type __len) {
// /usr/include/c++/13/string_view:146:7
new (__claw_this_) std::basic_string_view<char16>(__str, __len);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis9get_scaleEv(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:111:10
new (__claw_result_) godot::Vector3(__claw_this_->get_scale());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIjvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:147:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<unsigned int>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIcEC1ERS1_(godot::CowData<char>* __claw_this_, godot::CowData<char>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:248:17
new (__claw_this_) godot::CowData<char>(*p_from);
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIaE5storeEaSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_dtor(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWNodeWProcessThreadMessages11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10ProjectionC1ERKNS_7Vector4ES3_S3_S3_(struct godot::Projection* __claw_this_, const struct godot::Vector4* p_x, const struct godot::Vector4* p_y, const struct godot::Vector4* p_z, const struct godot::Vector4* p_w) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:155:2
new (__claw_this_) godot::Projection(*p_x, *p_y, *p_z, *p_w);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWCallableCustomBase() {
return alignof(godot::CallableCustomBase);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0int1() {
return alignof(std::__type_identity<int>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10Projection13get_endpointsERKNS_11Transform3DEPNS_7Vector3E(struct godot::Projection* __claw_this_, const struct godot::Transform3D* p_transform, struct godot::Vector3* p_8points) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:112:7
return __claw_this_->get_endpoints(*p_transform, p_8points);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0unsignedWlong1() {
return sizeof(godot::GetTypeInfo<unsigned long>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector46posmodEf(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const real_t p_mod) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:103:10
new (__claw_result_) godot::Vector4(__claw_this_->posmod(p_mod));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt20_List_const_iteratorIN5godot10StringNameEEC1ERKSt14_List_iteratorIS1_E(std::_List_const_iterator<godot::StringName>* __claw_this_, const std::_List_const_iterator<godot::StringName>::iterator* __x) {
// /usr/include/c++/13/bits/stl_list.h:358:7
new (__claw_this_) std::_List_const_iterator<godot::StringName>(*__x);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12_Vector_baseIN5godot7VariantESaIS1_EEC2Ev() {
return sizeof(std::_Vector_base<godot::Variant,std::allocator<godot::Variant>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__success_type0unsignedWlong1() {
return alignof(std::__success_type<unsigned long>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12PropertyInfoC1EPKi(struct godot::PropertyInfo* __claw_this_, const int* p_info) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:72:2
new (__claw_this_) godot::PropertyInfo(p_info);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40MethodFlagsE23v_claw_dtor(godot::GetTypeInfo<const godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWBasis11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Basis>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10QuaternionneERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:116:22
return __claw_this_->operator!=(*p_quaternion);
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZN5godot8PtrToArgIRKNS_5Rect2EE7convertEPKv(struct godot::Rect2* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:134:1
new (__claw_result_) godot::Rect2(godot::PtrToArg<const godot::Rect2&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot11Transform2D9xform_invERKNS_5Rect2E(struct godot::Rect2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:121:23
new (__claw_result_) godot::Rect2(__claw_this_->xform_inv(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_8CallableEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Callable>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIPvE6encodeES1_S1_(void* p_var, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
godot::PtrToArg<void*>::encode(p_var, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt11__pair_baseIKiiEC2Ev() {
return alignof(std::__pair_base<const int,int>);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_signal(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:186:68

godot::internal::gdextension_interface_classdb_register_extension_class_signal = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEEeqERKS2_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Ref<godot::Node3DGizmo>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:84:22
return __claw_this_->operator==(*p_r);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_17PackedStringArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:435:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10QuaternionmiERKS0_(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* q2) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:110:28
new (__claw_result_) godot::Quaternion(__claw_this_->operator-(*q2));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Equality0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0int1int1() {
return alignof(std::__detail::_Equality<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<int>int>);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_15MouseButtonMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::MouseButtonMask>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const char32* __claw__ZNK5godot11CharStringTIDiE3ptrEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:92:26
return (const char32*) __claw_this_->ptr();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_10Projection6PlanesEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Projection::Planes>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot18PackedVector3Array11_native_ptrEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:104:36
return __claw_this_->_native_ptr();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWintegral_constant0longW10001() {
return alignof(std::integral_constant<long,1000>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_16PackedInt64ArrayE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::PackedInt64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:432:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_11Transform2DEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Transform2D>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWcommon_type0long1() {
return alignof(std::common_type<long>);
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::ConstIterator* __claw__ZN5godot18PackedFloat64Array13ConstIteratorppEv(struct godot::PackedFloat64Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:170:33
return (struct godot::PackedFloat64Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String5findnERKS0_l(godot::String* __claw_this_, const godot::String* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:286:10
return __claw_this_->findn(*what, from);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64Array3setEld(godot::PackedFloat64Array* __claw_this_, int64_t index, double value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:108:7
__claw_this_->set(index, value);
}
}

__CLAW_API int __claw__ZN14__iseqsig_typeIeE6__callEee(long double* __x, long double* __y) {
// /usr/include/math.h:1385:14
return __iseqsig_type<long double>::__call(*__x, *__y);
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVKSt13__atomic_baseIsE4loadESt12memory_order(std::__atomic_base<short>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:509:7
return __claw_this_->load(__m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot7Vector2EEC2EPKS1_m() {
return alignof(std::initializer_list<godot::Vector2>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10MethodBind9is_staticEv(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:105:22
return __claw_this_->is_static();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMethodFlags1() {
return alignof(godot::GetTypeInfo<const godot::MethodFlags>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Rect2i_claw_dtor(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:42:21
__claw_this_->~Rect2i();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIlEC1ERKNS_7VariantE(godot::TypedArray<long>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:86:1
new (__claw_this_) godot::TypedArray<long>(*p_variant);
}
}

namespace godot {
__CLAW_API struct godot::Transform2D* __claw__ZNK5godot11Transform2D12scaled_localERKNS_7Vector2E(struct godot::Transform2D* __claw_result_, struct godot::Transform2D* __claw_this_, const godot::Size2* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:91:14
new (__claw_result_) godot::Transform2D(__claw_this_->scaled_local(*p_scale));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_10StringNameE(godot::String* __claw_result_, godot::String* __claw_this_, const godot::StringName* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:423:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::allocator_traits<std::allocator<godot::Variant>>::size_type __claw__ZNSt16allocator_traitsISaIN5godot7VariantEEE8max_sizeERKS2_(const std::allocator_traits<std::allocator<godot::Variant>>::allocator_type* __a) {
// /usr/include/c++/13/bits/alloc_traits.h:571:7
return std::allocator_traits<std::allocator<godot::Variant>>::max_size(*__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_11Transform3DEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API struct godot::Plane* __claw__ZNK5godot11Transform3D10xform_fastERKNS_5PlaneERKNS_5BasisE(struct godot::Plane* __claw_result_, struct godot::Transform3D* __claw_this_, const struct godot::Plane* p_plane, const struct godot::Basis* p_basis_inverse_transpose) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:103:23
new (__claw_result_) godot::Plane(__claw_this_->xform_fast(*p_plane, *p_basis_inverse_transpose));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot18PackedVector2Array11_native_ptrEv(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:104:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API wchar_t* __claw__ZN5godot7CowDataIwE5get_mEl(godot::CowData<wchar_t>* __claw_this_, godot::CowData<wchar_t>::Size p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:205:20
return (wchar_t*) (&__claw_this_->get_m(p_index));
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_15PackedByteArrayE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:400:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_10DictionaryEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Dictionary>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1c_claw_dtor(godot::PtrToArg<const unsigned char*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:223:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math5wrapfEfff(real_t value, real_t min, real_t max) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:746:14
return godot::Math::wrapf(value, min, max);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node33is_processing_unhandled_key_inputEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:198:7
return __claw_this_->is_processing_unhandled_key_input();
}
}

namespace godot {
__CLAW_API char32* __claw__ZN5godot11CharStringTIDiE4ptrwEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:91:20
return (char32*) __claw_this_->ptrw();
}
}

namespace godot {
__CLAW_API godot::BitField<godot::MethodFlags>* __claw__ZN5godot13VariantCasterINS_8BitFieldINS_11MethodFlagsEEEE4castERKNS_7VariantE(godot::BitField<godot::MethodFlags>* __claw_result_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:56:1
new (__claw_result_) godot::BitField<godot::MethodFlags>(godot::VariantCaster<godot::BitField<godot::MethodFlags>>::cast(*p_variant));
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array5countERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:180:10
return __claw_this_->count(*value);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10QuaternioneqERKS0_(struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_quaternion) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:115:22
return __claw_this_->operator==(*p_quaternion);
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZN5godot8PtrToArgINS_18PackedFloat64ArrayEE7convertEPKv(godot::PackedFloat64Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:160:1
new (__claw_result_) godot::PackedFloat64Array(godot::PtrToArg<godot::PackedFloat64Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEmmEi(std::__atomic_base<char>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:397:7
return __claw_this_->operator--(arg0);
}
}

__CLAW_API void __claw_set_pthread_attr_t___align(union pthread_attr_t* __claw_this_, long __claw_value_) {
// /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:56:7

__claw_this_->__align = __claw_value_;
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_11Node3DGizmoEEneERKS2_(godot::Ref<godot::Node3DGizmo>* __claw_this_, const godot::Ref<godot::Node3DGizmo>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:87:22
return __claw_this_->operator!=(*p_r);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxWchar_traits0wchar_t1() {
return alignof(__gnu_cxx::char_traits<wchar_t>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_15KeyModifierMaskEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::KeyModifierMask&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_6Rect2iEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Rect2i>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_vector2_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:148:69

return godot::internal::gdextension_interface_packed_vector2_array_operator_index_const;
}
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNVSt13__atomic_baseIiEaNEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWPackedColorArrayR1() {
return alignof(godot::GetTypeInfo<const godot::PackedColorArray&>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt17basic_string_viewIDsSt11char_traitsIDsEEC2Ev() {
return sizeof(std::basic_string_view<char16>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0float11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<float>>);
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector46lengthEv(struct godot::Vector4* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:85:9
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_4Node12InternalModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Node::InternalMode&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(godot::PtrToArg<godot::StringName>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEmmEv(std::__atomic_base<char>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:413:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_8Vector2iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Vector2i&>::get_class_info());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Insert_base0intWstdWpair0constWintWint1WstdWallocator0stdWpair0constWintWint11WstdW__detailW_Select1stWstdWequal_to0int1WstdWhash0int1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWfalse11() {
return alignof(std::__detail::_Insert_base<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>);
}
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEmmEv(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API double __claw__ZNK5godot15PackedByteArray12decode_floatEl(godot::PackedByteArray* __claw_this_, int64_t byte_offset) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:186:9
return __claw_this_->decode_float(byte_offset);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_set(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:64:43

godot::internal::gdextension_interface_variant_set = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot5Plane18intersects_segmentERKNS_7Vector3ES3_PS1_(struct godot::Plane* __claw_this_, const struct godot::Vector3* p_begin, const struct godot::Vector3* p_end, struct godot::Vector3* p_intersection) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/plane.hpp:64:7
return __claw_this_->intersects_segment(*p_begin, *p_end, p_intersection);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40RefCounted_claw_dtor(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:45:7
__claw_this_->~RefCounted();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot18PackedVector2Array9push_backERKNS_7Vector2E(godot::PackedVector2Array* __claw_this_, const struct godot::Vector2* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:113:7
return __claw_this_->push_back(*value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_10QuaternionE(godot::Variant* __claw_this_, const struct godot::Quaternion* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:191:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_set() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:64:43

return godot::internal::gdextension_interface_variant_set;
}
}
}

namespace godot {
__CLAW_API const char16* __claw__ZNK5godot11CharStringTIDsE3ptrEv(godot::CharStringT<char16>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:92:26
return (const char16*) __claw_this_->ptr();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIN5godot7VariantEEC2Ev() {
return alignof(std::allocator<godot::Variant>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2DmLERKS0_(struct godot::Transform2D* __claw_this_, const struct godot::Transform2D* p_transform) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:109:7
__claw_this_->operator*=(*p_transform);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot6SignalC2EPKNS_7VariantE() {
return sizeof(godot::Signal);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Vector2dVERKS0_(struct godot::Vector2* __claw_this_, const struct godot::Vector2* rvalue) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:143:7
__claw_this_->operator/=(*rvalue);
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot7VariantcvNS_10StringNameEEv(godot::StringName* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:245:2
new (__claw_result_) godot::StringName(__claw_this_->operator StringName());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MouseButtonE23v_claw_dtor(godot::GetTypeInfo<const godot::MouseButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:48:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZN5godot8PtrToArgINS_18PackedFloat32ArrayEE7convertEPKv(godot::PackedFloat32Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:159:1
new (__claw_result_) godot::PackedFloat32Array(godot::PtrToArg<godot::PackedFloat32Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String9get_sliceERKS0_l(godot::String* __claw_result_, godot::String* __claw_this_, const godot::String* delimiter, int64_t slice) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:280:9
new (__claw_result_) godot::String(__claw_this_->get_slice(*delimiter, slice));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8BitFieldIKNS_11MethodFlagsEEC1El(godot::BitField<const godot::MethodFlags>* __claw_this_, int64_t p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:269:17
new (__claw_this_) godot::BitField<const godot::MethodFlags>(p_value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_constructor(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:92:57

godot::internal::gdextension_interface_variant_get_ptr_constructor = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_18PackedFloat32ArrayEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:183:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PackedFloat32Array&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16ClassDBSingleton16class_has_methodERKNS_10StringNameES3_b(godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, const godot::StringName* method, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:70:7
return __claw_this_->class_has_method(*_class, *method, no_inheritance);
}
}

namespace godot {
__CLAW_API uint8_t* __claw__ZNK5godot15PackedByteArray8IteratorptEv(struct godot::PackedByteArray::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:224:27
return (uint8_t*) __claw_this_->operator->();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__type_identity0stdW__detailW_Node_iterator0stdWpair0constWgodotWStringNameWgodotWMethodBindP1WfalseWfalse11() {
return sizeof(std::__type_identity<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>>);
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node9get_ownerEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:171:8
return (godot::Node*) __claw_this_->get_owner();
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZNK5godot8Vector4ingEv(struct godot::Vector4i* __claw_result_, struct godot::Vector4i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:113:26
new (__claw_result_) godot::Vector4i(__claw_this_->operator-());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEEneERKS2_(godot::Ref<godot::World3D>* __claw_this_, const godot::Ref<godot::World3D>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:87:22
return __claw_this_->operator!=(*p_r);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName15to_utf16_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:354:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf16_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWDictionaryR1() {
return alignof(godot::PtrToArg<const godot::Dictionary&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::PackedFloat32Array>);
}
}

namespace godot {
__CLAW_API struct godot::Vector4i* __claw__ZN5godot8Vector4ipLERKS0_(struct godot::Vector4i* __claw_this_, const struct godot::Vector4i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4i.hpp:95:27
return (struct godot::Vector4i*) (&__claw_this_->operator+=(*p_v));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40DictionaryE23v_claw_ctor(godot::GetTypeInfo<const godot::Dictionary&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:178:1
new (__claw_this_) godot::GetTypeInfo<const godot::Dictionary&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWArray1() {
return sizeof(godot::PtrToArg<godot::Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Vector2iE23v_claw_ctor(godot::GetTypeInfo<const godot::Vector2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:158:1
new (__claw_this_) godot::GetTypeInfo<const godot::Vector2i&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40SignalE23v_claw_ctor(godot::GetTypeInfo<const godot::Signal&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
new (__claw_this_) godot::GetTypeInfo<const godot::Signal&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWQuaternion() {
return alignof(godot::Quaternion);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1Wfalse11() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Quaternion_claw_dtor(godot::PtrToArg<const godot::Quaternion&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:142:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot5ColorEEC1Ev(std::initializer_list<godot::Color>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::Color>();
}
}

namespace std {
__CLAW_API std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>* __claw_get__ZNSt4pairINSt8__detail14_Node_iteratorIS_IKN5godot10StringNameEPNS2_10MethodBindEELb0ELb0EEEbEC2ERKS9__first(std::pair<std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>,bool>* __claw_this_) {
// /usr/include/c++/13/bits/stl_pair.h:187:12

return (std::__detail::_Node_iterator<std::pair<const godot::StringName,godot::MethodBind*>,false,false>*)&__claw_this_->first;
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIyE23compare_exchange_strongERyySt12memory_order(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:593:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API godot::ObjectID* __claw__ZNK5godot18CallableCustomBase10get_objectEv(godot::ObjectID* __claw_result_, godot::CallableCustomBase* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/callable_custom.hpp:43:19
new (__claw_result_) godot::ObjectID(__claw_this_->get_object());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot15PackedByteArray3hasEl(godot::PackedByteArray* __claw_this_, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:159:7
return __claw_this_->has(value);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE9pop_frontEv(godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:352:7
__claw_this_->pop_front();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdWpair0constWintWint11() {
return sizeof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::pair<const int,int>>);
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot5Rect212get_positionEv(struct godot::Rect2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:47:17
return (struct godot::Vector2*) (&__claw_this_->get_position());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIjEC1ERKNS_5ArrayE(godot::TypedArray<unsigned int>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:83:1
new (__claw_this_) godot::TypedArray<unsigned int>(*p_array);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_7World3DEEeqERKS2_(godot::Ref<godot::World3D>* __claw_this_, const godot::Ref<godot::World3D>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:84:22
return __claw_this_->operator==(*p_r);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned long>::__int_type __claw__ZNSt13__atomic_baseImEmmEi(std::__atomic_base<unsigned long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API godot::CharProxy<char>* __claw__ZN5godot11CharStringTIcEixEl(godot::CharProxy<char>* __claw_result_, godot::CharStringT<char>* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:105:30
new (__claw_result_) godot::CharProxy<char>(__claw_this_->operator[](p_index));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedColorArray::Iterator* __claw__ZN5godot16PackedColorArray3endEv(struct godot::PackedColorArray::Iterator* __claw_result_, godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:195:26
new (__claw_result_) godot::PackedColorArray::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Rect2i* __claw__ZNK5godot7VariantcvNS_6Rect2iEEv(struct godot::Rect2i* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:232:2
new (__claw_result_) godot::Rect2i(__claw_this_->operator Rect2i());
return __claw_result_;
}
}

namespace godot {
__CLAW_API const struct godot::Vector2* __claw__ZNK5godot11Transform2D10get_originEv(struct godot::Transform2D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:86:32
return (struct godot::Vector2*) (&__claw_this_->get_origin());
}
}

namespace godot {
__CLAW_API struct godot::Rect2* __claw__ZNK5godot11Transform2D5xformERKNS_5Rect2E(struct godot::Rect2* __claw_result_, struct godot::Transform2D* __claw_this_, const struct godot::Rect2* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:120:23
new (__claw_result_) godot::Rect2(__claw_this_->xform(*p_rect));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_3RIDEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::RID>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWColor1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Color>&>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_8CallableE(godot::String* __claw_result_, godot::StringName* __claw_this_, const godot::Callable* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:396:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3irmERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:102:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator%(*p_v));
return __claw_result_;
}
}

__CLAW_API unsigned long long __claw_alignof___locale_struct() {
return alignof(__locale_struct);
}

namespace std {
__CLAW_API bool __claw__ZNKSt6atomicIbE4loadESt12memory_order(std::atomic<bool>* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/atomic:111:5
return __claw_this_->load(__m);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWHorizontalAlignment1() {
return sizeof(godot::GetTypeInfo<godot::HorizontalAlignment>);
}
}

namespace godot {
__CLAW_API const char32* __claw__ZN5godot8PtrToArgIPKDiE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
return (const char32*) godot::PtrToArg<const char32*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40MethodFlags_claw_dtor(godot::BitField<godot::MethodFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API struct godot::Quaternion* __claw__ZNK5godot10Quaternion27spherical_cubic_interpolateERKS0_S2_S2_RKf(struct godot::Quaternion* __claw_result_, struct godot::Quaternion* __claw_this_, const struct godot::Quaternion* p_b, const struct godot::Quaternion* p_pre_a, const struct godot::Quaternion* p_post_b, const real_t* p_weight) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/quaternion.hpp:75:13
new (__claw_result_) godot::Quaternion(__claw_this_->spherical_cubic_interpolate(*p_b, *p_pre_a, *p_post_b, *p_weight));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot7Vector35roundEv(struct godot::Vector3* __claw_result_, struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:129:25
new (__claw_result_) godot::Vector3(__claw_this_->round());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt64ArrayD1Ev(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:105:2
__claw_this_->~PackedInt64Array();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIsEC1ERKNS_5ArrayE(godot::TypedArray<short>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:82:1
new (__claw_this_) godot::TypedArray<short>(*p_array);
}
}

namespace std {
__CLAW_API std::unordered_map<godot::StringName,godot::Object*>::size_type __claw__ZNKSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEE8max_sizeEv(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_) {
// /usr/include/c++/13/bits/unordered_map.h:322:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AW_claw_dtor(godot::PtrToArg<wchar_t*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:222:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWStringR1() {
return sizeof(godot::PtrToArg<const godot::String&>);
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWgodotWStringNameWgodotWMethodBindP1Wfalse11() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::MethodBind*>,false>>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEEeqERKS2_(godot::Ref<godot::Tween>* __claw_this_, const godot::Ref<godot::Tween>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:84:22
return __claw_this_->operator==(*p_r);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWKeyModifierMask11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask>>);
}
}

namespace std {
__CLAW_API const std::char_traits<char>::char_type* __claw__ZNSt11char_traitsIcE4findEPKcmRS1_(const std::char_traits<char>::char_type* __s, std::size_t __n, const std::char_traits<char>::char_type* __a) {
// /usr/include/c++/13/bits/char_traits.h:403:7
return (const std::char_traits<char>::char_type*) std::char_traits<char>::find(__s, __n, *__a);
}
}

namespace godot {
__CLAW_API const char16* __claw__ZN5godot8PtrToArgIPKDsE7convertEPKv(const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:220:1
return (const char16*) godot::PtrToArg<const char16*>::convert(p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantD1Ev(godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:215:2
__claw_this_->~Variant();
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_packed_vector3_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:150:69

return godot::internal::gdextension_interface_packed_vector3_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API void __claw__ZZN5godot7ClassDB14register_classEbE9(godot::ClassDB* __claw_this_, bool p_virtual) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:147:14
__claw_this_->register_class(p_virtual);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRNS_11MethodFlagsEEcvlEv(godot::BitField<godot::MethodFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot10StringName8containsERKNS_6StringE(godot::StringName* __claw_this_, const godot::String* what) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:320:7
return __claw_this_->contains(*what);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot7VariantaSERKS0_(godot::Variant* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:264:11
return (godot::Variant*) (&__claw_this_->operator=(*other));
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseImEC1Em(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<unsigned long>(__i);
}
}

namespace std {
__CLAW_API std::__atomic_base<char32>::__int_type __claw__ZNVSt13__atomic_baseIDiE8fetch_orEDiSt12memory_order(std::__atomic_base<char32>* __claw_this_, std::__atomic_base<char32>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:668:7
return __claw_this_->fetch_or(__i, __m);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSD_RKSB_RKS7_() {
return sizeof(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40Transform3DE23v_claw_dtor(godot::GetTypeInfo<godot::Transform3D>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdWintegral_constant0longW10000001() {
return sizeof(std::integral_constant<long,1000000>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector4E40EE40AxisE23v_claw_ctor(godot::GetTypeInfo<godot::Vector4::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:42:1
new (__claw_this_) godot::GetTypeInfo<godot::Vector4::Axis&>();
}
}

namespace __gnu_cxx {
__CLAW_API bool __claw__ZN9__gnu_cxx11char_traitsIcE2ltERKcS3_(const __gnu_cxx::char_traits<char>::char_type* __c1, const __gnu_cxx::char_traits<char>::char_type* __c2) {
// /usr/include/c++/13/bits/char_traits.h:140:7
return __gnu_cxx::char_traits<char>::lt(*__c1, *__c2);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot5ArrayixEl(godot::Array* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:224:11
return (godot::Variant*) (&__claw_this_->operator[](p_index));
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIxE21compare_exchange_weakERxxSt12memory_orderS2_(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type* __i1, std::__atomic_base<long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:545:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev() {
return sizeof(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Hashtable_allocE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E24E40NE40godotE40SE40ClassDBE40SE40ClassInfoE23Vb0E40SE40__get_value_typeE3EE23S1__claw_dtor(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:1920:9
__claw_this_->~__get_value_type();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Vector39is_finiteEv(struct godot::Vector3* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:149:7
return __claw_this_->is_finite();
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot5Basis20get_euler_normalizedENS_10EulerOrderE(struct godot::Vector3* __claw_result_, struct godot::Basis* __claw_this_, enum godot::EulerOrder p_order) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:76:10
new (__claw_result_) godot::Vector3(__claw_this_->get_euler_normalized(p_order));
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_5TweenEEneERKS2_(godot::Ref<godot::Tween>* __claw_this_, const godot::Ref<godot::Tween>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:87:22
return __claw_this_->operator!=(*p_r);
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot17PackedStringArrayplERKS0_(godot::PackedStringArray* __claw_result_, godot::PackedStringArray* __claw_this_, const godot::PackedStringArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:134:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWTypedArray0godotWQuaternion1R1() {
return alignof(godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40Basis_claw_dtor(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:40:21
__claw_this_->~Basis();
}
}

namespace std {
__CLAW_API std::size_t __claw__ZNSt11char_traitsIwE6lengthEPKw(const std::char_traits<wchar_t>::char_type* __s) {
// /usr/include/c++/13/bits/char_traits.h:524:7
return std::char_traits<wchar_t>::length(__s);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot18GDExtensionBinding10InitObject4initEv(godot::GDExtensionBinding::InitObject* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:244:19
return __claw_this_->init();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector2iWAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector2i::Axis&>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot10StringNamermERKNS_8Vector3iE(godot::String* __claw_result_, godot::StringName* __claw_this_, const struct godot::Vector3i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:375:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIbEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<bool>);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23C_claw_ctor(std::char_traits<char>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:337:12
new (__claw_this_) std::char_traits<char>();
}
}

namespace godot {
__CLAW_API struct godot::Vector4* __claw__ZNK5godot7Vector43maxERKS0_(struct godot::Vector4* __claw_result_, struct godot::Vector4* __claw_this_, const struct godot::Vector4* p_vector4) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector4.hpp:77:10
new (__claw_result_) godot::Vector4(__claw_this_->max(*p_vector4));
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_traits0falseWfalseWtrue1() {
return sizeof(std::__detail::_Hashtable_traits<false,false,true>);
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node19is_processing_inputEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:192:7
return __claw_this_->is_processing_input();
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKN5godot10StringNameENS0_7ClassDB9ClassInfoEEED1Ev(std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdWallocator_traits0stdWallocator0void11() {
return alignof(std::allocator_traits<std::allocator<void>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt15__new_allocatorIwEC2Ev() {
return sizeof(std::__new_allocator<wchar_t>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseImEC1Ev(std::__atomic_base<unsigned long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<unsigned long>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String11operatornotEv(godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:392:7
return __claw_this_->operatornot();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWbool1() {
return alignof(std::__hash_base<unsigned long,bool>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_array_operator_index_const() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:152:56

return godot::internal::gdextension_interface_array_operator_index_const;
}
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot10DictionaryixERKNS_7VariantE(godot::Dictionary* __claw_this_, const godot::Variant* p_key) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:119:11
return (godot::Variant*) (&__claw_this_->operator[](*p_key));
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_string_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:146:68

godot::internal::gdextension_interface_packed_string_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_6SignalEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:177:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Signal&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Plane_claw_dtor(godot::TypedArray<godot::Plane>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:97:1
__claw_this_->~TypedArray();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2ArrayD1Ev(godot::PackedVector2Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:109:2
__claw_this_->~PackedVector2Array();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector4i() {
return alignof(godot::Vector4i);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot10RefCounted11unreferenceEv(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:52:7
return __claw_this_->unreference();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector4iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector4i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
namespace __exception_ptr {
__CLAW_API const std::type_info* __claw__ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv(std::__exception_ptr::exception_ptr* __claw_this_) {
// /usr/include/c++/13/bits/exception_ptr.h:183:7
return (const std::type_info*) __claw_this_->__cxa_exception_type();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3igeERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:118:22
return __claw_this_->operator>=(*p_v);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIRKNS_4Node21ProcessThreadMessagesEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::Node::ProcessThreadMessages&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node24is_multiplayer_authorityEv(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:230:7
return __claw_this_->is_multiplayer_authority();
}
}

namespace godot {
__CLAW_API uint32_t __claw__ZNK5godot5Color9to_abgr32Ev(struct godot::Color* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:53:11
return __claw_this_->to_abgr32();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSaISt10_List_nodeIN5godot10StringNameEEEC2Ev() {
return sizeof(std::allocator<std::_List_node<godot::StringName>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt20_Rb_tree_key_compareISt4lessIN5godot10StringNameEEEC2Ev() {
return alignof(std::_Rb_tree_key_compare<std::less<godot::StringName>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector2iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedVector2Array* __claw__ZN5godot8PtrToArgIRKNS_18PackedVector2ArrayEE7convertEPKv(godot::PackedVector2Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:162:1
new (__claw_result_) godot::PackedVector2Array(godot::PtrToArg<const godot::PackedVector2Array&>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Memory11free_staticEPvb(void* p_ptr, bool p_pad_align) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/memory.hpp:82:14
godot::Memory::free_static(p_ptr, p_pad_align);
}
}

namespace std {
__CLAW_API const char* __claw__ZNKSt5ctypeIcE7scan_isEtPKcS2_(std::ctype<char>* __claw_this_, std::ctype_base::mask __m, const char* __lo, const char* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:781:7
return (const char*) __claw_this_->scan_is(__m, __lo, __hi);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40SE40Vector3iE40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<const godot::Vector3i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:41:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot16PackedInt32Array13to_byte_arrayEv(godot::PackedByteArray* __claw_result_, godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:120:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_byte_array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40MouseButtonMaskE23v_claw_dtor(godot::GetTypeInfo<const godot::MouseButtonMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:49:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_plus_eq_cstr(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:123:57

godot::internal::gdextension_interface_string_operator_plus_eq_cstr = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0unsignedWlong1() {
return sizeof(godot::PtrToArg<unsigned long>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWTransform3DR1() {
return sizeof(godot::PtrToArg<const godot::Transform3D&>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot6Object3getERKNS_10StringNameE(godot::Variant* __claw_result_, godot::Object* __claw_this_, const godot::StringName* property) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:69:10
new (__claw_result_) godot::Variant(__claw_this_->get(*property));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::Char32String* __claw__ZNK5godot6String5utf32Ev(godot::Char32String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:385:15
new (__claw_result_) godot::Char32String(__claw_this_->utf32());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_property_subgroup() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:185:78

return godot::internal::gdextension_interface_classdb_register_extension_class_property_subgroup;
}
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZN5godot7ClassDB24class_get_enum_constantsERKNS_10StringNameES3_b(godot::PackedStringArray* __claw_result_, const godot::StringName* _class, const godot::StringName* _enum, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
new (__claw_result_) godot::PackedStringArray(godot::ClassDB::class_get_enum_constants(*_class, *_enum, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayD1Ev(godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:147:2
__claw_this_->~PackedByteArray();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3ieqERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:113:22
return __claw_this_->operator==(*p_v);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIyED1Ev(std::__atomic_base<unsigned long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API struct godot::List<godot::PropertyInfo>::Iterator* __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE3endEv(struct godot::List<godot::PropertyInfo>::Iterator* __claw_result_, godot::List<godot::PropertyInfo>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:195:26
new (__claw_result_) godot::List<godot::PropertyInfo>::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedColorArray3setElRKNS_5ColorE(godot::PackedColorArray* __claw_this_, int64_t index, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:110:7
__claw_this_->set(index, *value);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot11CharStringTIDiE4sizeEv(godot::CharStringT<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:93:25
return __claw_this_->size();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIjE21compare_exchange_weakERjjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type* __i1, std::__atomic_base<unsigned int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Aw_claw_ctor(godot::PtrToArg<char32*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:221:1
new (__claw_this_) godot::PtrToArg<char32*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWlongWdouble1() {
return alignof(std::__hash_base<unsigned long,long double>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWTypedArray0float11() {
return alignof(godot::GetTypeInfo<godot::TypedArray<float>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<wchar_t>::__int_type __claw__ZNSt13__atomic_baseIwE9fetch_subEwSt12memory_order(std::__atomic_base<wchar_t>* __claw_this_, std::__atomic_base<wchar_t>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:643:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8NodePathEEC1ERKNS_7VariantE(godot::TypedArray<godot::NodePath>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:104:1
new (__claw_this_) godot::TypedArray<godot::NodePath>(*p_variant);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_string_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:120:57

godot::internal::gdextension_interface_string_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZNK5godot16PackedInt64Array5sliceEll(godot::PackedInt64Array* __claw_result_, godot::PackedInt64Array* __claw_this_, int64_t begin, int64_t end) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:119:19
new (__claw_result_) godot::PackedInt64Array(__claw_this_->slice(begin, end));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWNodeWInternalMode1() {
return sizeof(godot::GetTypeInfo<godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWPackedStringArray1() {
return alignof(godot::PtrToArg<godot::PackedStringArray>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDiEC1Ev(std::__new_allocator<char32>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<char32>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedColorArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedColorArray>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:118:1
new (__claw_this_) godot::TypedArray<godot::PackedColorArray>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWInlineAlignment1() {
return sizeof(godot::GetTypeInfo<godot::InlineAlignment>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D24clear_subgizmo_selectionEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:115:7
__claw_this_->clear_subgizmo_selection();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40hashE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::hash<godot::StringName>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3ineERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:114:22
return __claw_this_->operator!=(*p_v);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNSt13__atomic_baseIcEoREc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector2i() {
return alignof(godot::Vector2i);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldINS_15KeyModifierMaskEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<godot::KeyModifierMask>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40VerticalAlignmentE23v_claw_dtor(godot::GetTypeInfo<const godot::VerticalAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringNameE23v_claw_ctor(godot::GetTypeInfo<godot::TypedArray<godot::StringName>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:389:1
new (__claw_this_) godot::GetTypeInfo<godot::TypedArray<godot::StringName>>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_property_subgroup(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:185:78

godot::internal::gdextension_interface_classdb_register_extension_class_property_subgroup = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedFloat32ArrayE40SE40_MethodBindings_claw_ctor(struct godot::PackedFloat32Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:55:16
new (__claw_this_) godot::PackedFloat32Array::_MethodBindings();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Color6set_g8Ei(struct godot::Color* __claw_this_, int32_t g8) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:209:22
__claw_this_->set_g8(g8);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8Vector3ileERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:116:22
return __claw_this_->operator<=(*p_v);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40StringName_claw_ctor(godot::PtrToArg<const godot::StringName&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:148:1
new (__claw_this_) godot::PtrToArg<const godot::StringName&>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6atomicIaEC2Ev() {
return sizeof(std::atomic<char>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt7__cxx114listIN5godot10StringNameESaIS2_EEC1ERKS4_(std::list<godot::StringName>* __claw_this_, const std::list<godot::StringName>* __x) {
// /usr/include/c++/13/bits/stl_list.h:811:7
new (__claw_this_) std::list<godot::StringName>(*__x);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedVector3ArrayeqERKNS_7VariantE(godot::PackedVector3Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:131:7
return __claw_this_->operator==(*other);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3expEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:290:14
return godot::Math::exp(p_x);
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZNK5godot8Vector3imiERKS0_(struct godot::Vector3i* __claw_result_, struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:96:26
new (__claw_result_) godot::Vector3i(__claw_this_->operator-(*p_v));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWVector3i1() {
return alignof(godot::GetTypeInfo<godot::Vector3i>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb0EEEEC2ERKS9_RKS7_RKS3_() {
return alignof(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZNK5godot15PackedByteArray14to_int64_arrayEv(godot::PackedInt64Array* __claw_result_, godot::PackedByteArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:192:19
new (__claw_result_) godot::PackedInt64Array(__claw_this_->to_int64_array());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArrayC1ERKNS_5ArrayE(godot::PackedByteArray* __claw_this_, const godot::Array* from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:145:2
new (__claw_this_) godot::PackedByteArray(*from);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayImEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:371:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<unsigned long>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWDictionaryW_MethodBindings() {
return sizeof(godot::Dictionary::_MethodBindings);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1d_claw_ctor(godot::PtrToArg<const double*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:233:1
new (__claw_this_) godot::PtrToArg<const double*>();
}
}

namespace godot {
__CLAW_API const godot::Size2i* __claw__ZNK5godot6Rect2i8get_sizeEv(struct godot::Rect2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:48:16
return (godot::Size2i*) (&__claw_this_->get_size());
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEmmEi(std::__atomic_base<long long>* __claw_this_, int arg0) {
// /usr/include/c++/13/bits/atomic_base.h:393:7
return __claw_this_->operator--(arg0);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayINS_6Rect2iEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZN5godot7Vector3dVERKS0_(struct godot::Vector3* __claw_this_, const struct godot::Vector3* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3.hpp:159:26
return (struct godot::Vector3*) (&__claw_this_->operator/=(*p_v));
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNSt13__atomic_baseIxEmmEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:409:7
return __claw_this_->operator--();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVector3i() {
return alignof(godot::Vector3i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot16ClassDBSingletonC2EPKc() {
return sizeof(godot::ClassDBSingleton);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3expEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:287:15
return godot::Math::exp(p_x);
}
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKiiELb0EEEED1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String7reverseEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:301:9
new (__claw_result_) godot::String(__claw_this_->reverse());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_14MultiplayerAPIEEC1ERKNS_7VariantE(godot::Ref<godot::MultiplayerAPI>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:184:2
new (__claw_this_) godot::Ref<godot::MultiplayerAPI>(*p_variant);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot6Object23get_parent_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:51:2
return (godot::StringName*) (&godot::Object::get_parent_class_static());
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_orderS2_(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:535:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_16PackedInt32ArrayEEC1ERKNS_5ArrayE(godot::TypedArray<godot::PackedInt32Array>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:111:1
new (__claw_this_) godot::TypedArray<godot::PackedInt32Array>(*p_array);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::PtrToArg<godot::BitField<godot::PropertyUsageFlags>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6String5matchERKS0_(godot::String* __claw_this_, const godot::String* expr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:289:7
return __claw_this_->match(*expr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWallocator0godotWStringName11() {
return alignof(std::__type_identity<std::allocator<godot::StringName>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWSignal1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Signal>&>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWNodePathW_MethodBindings() {
return sizeof(godot::NodePath::_MethodBindings);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40InlineAlignmentE23v_claw_ctor(godot::GetTypeInfo<godot::InlineAlignment>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_this_) godot::GetTypeInfo<godot::InlineAlignment>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt12ctype_bynameIwEC2EPKcm() {
return alignof(std::ctype_byname<wchar_t>);
}
}

namespace std {
__CLAW_API std::basic_string<wchar_t>::size_type __claw__ZNKSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE4sizeEv(std::basic_string<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/basic_string.h:1071:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API void __claw__ZNSt9exceptionC1Ev(std::exception* __claw_this_) {
// /usr/include/c++/13/bits/exception.h:62:5
new (__claw_this_) std::exception();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWDictionaryR1() {
return sizeof(godot::PtrToArg<const godot::Dictionary&>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw_get_godotWBasis_rows(struct godot::Basis* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:40:21

return (struct godot::Vector3*)__claw_this_->rows;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<godot::Quaternion>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIhEC1Ev(godot::TypedArray<unsigned char>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:79:1
new (__claw_this_) godot::TypedArray<unsigned char>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot6StringEEC1Ev(std::initializer_list<godot::String>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::String>();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_mem_realloc(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:49:43

godot::internal::gdextension_interface_mem_realloc = __claw_value_;
}
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB11get_supportERKNS_7Vector3E(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_, const struct godot::Vector3* p_normal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:85:25
new (__claw_result_) godot::Vector3(__claw_this_->get_support(*p_normal));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedByteArray_claw_dtor(godot::PtrToArg<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API godot::TypedArray<godot::Dictionary>* __claw__ZNK5godot16ClassDBSingleton23class_get_property_listERKNS_10StringNameEb(godot::TypedArray<godot::Dictionary>* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:67:25
new (__claw_result_) godot::TypedArray<godot::Dictionary>(__claw_this_->class_get_property_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot16ClassDBSingleton31class_get_integer_constant_listERKNS_10StringNameEb(godot::PackedStringArray* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class, bool no_inheritance) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:72:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->class_get_integer_constant_list(*_class, no_inheritance));
return __claw_result_;
}
}

namespace __gnu_cxx {
__CLAW_API void __claw__ZN9__gnu_cxx21__atomic_add_dispatchEPii(_Atomic_word* __mem, int __val) {
// /usr/include/c++/13/ext/atomicity.h:106:3
__gnu_cxx::__atomic_add_dispatch(__mem, __val);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector3iWAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector3i::Axis&>);
}
}

namespace std {
__CLAW_API std::__new_allocator<godot::Variant>::size_type __claw__ZNKSt15__new_allocatorIN5godot7VariantEE8max_sizeEv(std::__new_allocator<godot::Variant>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:182:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWTransform3DR1() {
return alignof(godot::PtrToArg<const godot::Transform3D&>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIKNS_18PropertyUsageFlagsEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::PropertyUsageFlags>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Node_insert_return0stdW_Rb_tree_const_iterator0godotWStringName1WstdW_Node_handle0godotWStringNameWgodotWStringNameWstdWallocator0stdW_Rb_tree_node0godotWStringName1111() {
return alignof(std::_Node_insert_return<std::_Rb_tree_const_iterator<godot::StringName>,std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_mem_realloc() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:49:43

return godot::internal::gdextension_interface_mem_realloc;
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEC2Ev() {
return alignof(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWKeyModifierMaskR1() {
return alignof(godot::GetTypeInfo<const godot::KeyModifierMask&>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40String_claw_ctor(godot::PtrToArg<const godot::String&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:131:1
new (__claw_this_) godot::PtrToArg<const godot::String&>();
}
}

namespace std {
__CLAW_API std::__atomic_base<int>::__int_type __claw__ZNSt13__atomic_baseIiEpLEi(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API const struct godot::Vector3* __claw__ZNK5godot18PackedVector3Array3ptrEv(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:142:17
return (const struct godot::Vector3*) __claw_this_->ptr();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseImE23compare_exchange_strongERmmSt12memory_orderS2_(std::__atomic_base<unsigned long>* __claw_this_, std::__atomic_base<unsigned long>::__int_type* __i1, std::__atomic_base<unsigned long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API godot::PackedInt64Array* __claw__ZN5godot8PtrToArgINS_16PackedInt64ArrayEE7convertEPKv(godot::PackedInt64Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
new (__claw_result_) godot::PackedInt64Array(godot::PtrToArg<godot::PackedInt64Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedColorArray1() {
return sizeof(godot::GetTypeInfo<godot::PackedColorArray>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWInlineAlignment1() {
return alignof(godot::GetTypeInfo<const godot::InlineAlignment>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWchar1() {
return alignof(std::__hash_base<unsigned long,char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40PropertyUsageFlagsE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<godot::PropertyUsageFlags&>>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4NodeC1Ev(godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:61:20
new (__claw_this_) godot::Node();
}
}

namespace std {
__CLAW_API std::__atomic_base<long long>::__int_type __claw__ZNVSt13__atomic_baseIxEoREx(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:445:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String15to_utf16_bufferEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:368:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf16_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayINS_5ArrayEEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<godot::Array>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7Variant8evaluateERKNS0_8OperatorERKS0_S5_RS0_Rb(const enum godot::Variant::Operator* op, const godot::Variant* a, const godot::Variant* b, godot::Variant* r_ret, bool* r_valid) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:300:14
godot::Variant::evaluate(*op, *a, *b, *r_ret, *r_valid);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40EE40CornerE23v_claw_ctor(godot::GetTypeInfo<godot::Corner&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:39:1
new (__claw_this_) godot::GetTypeInfo<godot::Corner&>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_10ProjectionEE6encodeES3_Pv(const struct godot::Projection* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
godot::PtrToArg<const godot::Projection&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__hash_base0unsignedWlongWstdWerror_condition1() {
return alignof(std::__hash_base<unsigned long,std::error_condition>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40ProjectionE23v_claw_dtor(godot::GetTypeInfo<godot::Projection>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:171:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIyE23compare_exchange_strongERyySt12memory_orderS2_(std::__atomic_base<unsigned long long>* __claw_this_, std::__atomic_base<unsigned long long>::__int_type* __i1, std::__atomic_base<unsigned long long>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace std {
__CLAW_API bool __claw__ZNKSt13__atomic_baseIwE12is_lock_freeEv(std::__atomic_base<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:457:7
return __claw_this_->is_lock_free();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIxEC1Ev(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:355:7
new (__claw_this_) std::__atomic_base<long long>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2* __claw__ZNK5godot7Vector25roundEv(struct godot::Vector2* __claw_result_, struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:170:10
new (__claw_result_) godot::Vector2(__claw_this_->round());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIDiEC1EDi(std::atomic<char32>* __claw_this_, std::atomic<char32>::__integral_type __i) {
// /usr/include/c++/13/atomic:1044:17
new (__claw_this_) std::atomic<char32>(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWBitField0constWgodotWNodeWProcessThreadMessagesR11() {
return alignof(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages&>>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7VariantC1ERKNS_16PackedInt64ArrayE(godot::Variant* __claw_this_, const godot::PackedInt64Array* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:208:2
new (__claw_this_) godot::Variant(*v);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::int_type __claw__ZN9__gnu_cxx11char_traitsIcE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:175:7
return __gnu_cxx::char_traits<char>::eof();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__common_type_implE3EE23DE23DE23DE23D_claw_ctor(std::__common_type_impl<long double,long double,long double,long double>* __claw_this_) {
// /usr/include/c++/13/type_traits:2314:12
new (__claw_this_) std::__common_type_impl<long double,long double,long double,long double>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot5uitosEm(godot::String* __claw_result_, uint64_t p_val) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:483:8
new (__claw_result_) godot::String(godot::uitos(p_val));
return __claw_result_;
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseItE23compare_exchange_strongERttSt12memory_orderS2_(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type* __i1, std::__atomic_base<unsigned short>::__int_type __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/bits/atomic_base.h:582:7
return __claw_this_->compare_exchange_strong(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40PackedStringArrayE23v_claw_dtor(godot::GetTypeInfo<const godot::PackedStringArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:185:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt16initializer_listIN5godot5ColorEEC2EPKS1_m() {
return sizeof(std::initializer_list<godot::Color>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40EE40SideE23v_claw_dtor(godot::GetTypeInfo<const godot::Side&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIxEC1Ex(std::__atomic_base<long long>* __claw_this_, std::__atomic_base<long long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:362:17
new (__claw_this_) std::__atomic_base<long long>(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40StringE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::String>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:375:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40char_traitsE3EE23W_claw_dtor(std::char_traits<wchar_t>* __claw_this_) {
// /usr/include/c++/13/bits/char_traits.h:479:12
__claw_this_->~char_traits();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40BitFieldE3EE23E261E24E40NE40godotE40EE40KeyModifierMaskE23v_claw_ctor(godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:47:1
new (__claw_this_) godot::GetTypeInfo<godot::BitField<const godot::KeyModifierMask&>>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWRect2i1() {
return alignof(godot::PtrToArg<godot::Rect2i>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWBitField0godotWKeyModifierMask11() {
return alignof(godot::VariantCaster<godot::BitField<godot::KeyModifierMask>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64ArrayneERKNS_7VariantE(godot::PackedInt64Array* __claw_this_, const godot::Variant* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:128:7
return __claw_this_->operator!=(*other);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_string_to_latin1_chars() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:114:52

return godot::internal::gdextension_interface_string_to_latin1_chars;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23LE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<long>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:372:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIiE12is_lock_freeEv(std::__atomic_base<int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIDsEC1ERKS0_(std::__new_allocator<char16>* __claw_this_, const std::__new_allocator<char16>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<char16>(*arg0);
}
}

namespace std {
__CLAW_API void __claw__ZNSt5ctypeIcEC1EPKtbm(std::ctype<char>* __claw_this_, const std::ctype_base::mask* __table, bool __del, std::size_t __refs) {
// /usr/include/c++/13/bits/locale_facets.h:726:7
new (__claw_this_) std::ctype<char>(__table, __del, __refs);
}
}

namespace godot {
__CLAW_API const godot::String* __claw__ZNK5godot17PackedStringArrayixEl(godot::PackedStringArray* __claw_this_, int64_t p_index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:137:16
return (godot::String*) (&__claw_this_->operator[](p_index));
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_19HorizontalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:42:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::HorizontalAlignment>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedFloat64ArrayC1Ev(godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:101:2
new (__claw_this_) godot::PackedFloat64Array();
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3imLERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:97:27
return (struct godot::Vector3i*) (&__claw_this_->operator*=(*p_v));
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8Vector3i14length_squaredEv(struct godot::Vector3i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:82:25
return __claw_this_->length_squared();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform2D27set_rotation_scale_and_skewEfRKNS_7Vector2Ef(struct godot::Transform2D* __claw_this_, const real_t p_rot, const godot::Size2* p_scale, const real_t p_skew) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform2d.hpp:73:22
__claw_this_->set_rotation_scale_and_skew(p_rot, *p_scale, p_skew);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot18PackedVector3Array8IteratordeEv(struct godot::PackedVector3Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:146:27
return (struct godot::Vector3*) (&__claw_this_->operator*());
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::Iterator* __claw__ZN5godot18PackedFloat64Array8IteratorppEv(struct godot::PackedFloat64Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:145:28
return (struct godot::PackedFloat64Array::Iterator*) (&__claw_this_->operator++());
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8Vector3iC1Eiii(struct godot::Vector3i* __claw_this_, const int32_t p_x, const int32_t p_y, const int32_t p_z) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:124:17
new (__claw_this_) godot::Vector3i(p_x, p_y, p_z);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_10ProjectionEE6encodeERKS1_Pv(const struct godot::Projection* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:146:1
godot::PtrToArg<godot::Projection>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroup_claw_dtor(godot::PtrToArg<godot::Node::ProcessThreadGroup>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot16PackedInt64Array4sizeEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:106:10
return __claw_this_->size();
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZN5godot15PackedByteArrayaSERKS0_(godot::PackedByteArray* __claw_this_, const godot::PackedByteArray* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:213:19
return (godot::PackedByteArray*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWVector3iWAxisR1() {
return sizeof(godot::GetTypeInfo<godot::Vector3i::Axis&>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_classdb_register_extension_class_integer_constant() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:181:77

return godot::internal::gdextension_interface_classdb_register_extension_class_integer_constant;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedInt64Array11operatornotEv(godot::PackedInt64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:129:7
return __claw_this_->operatornot();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE231E24E40NE40godotE40EE40JoyButtonE23v_claw_dtor(godot::GetTypeInfo<const godot::JoyButton>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:50:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API godot::PackedInt32Array* __claw__ZN5godot8PtrToArgINS_16PackedInt32ArrayEE7convertEPKv(godot::PackedInt32Array* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:157:1
new (__claw_result_) godot::PackedInt32Array(godot::PtrToArg<godot::PackedInt32Array>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40QuaternionE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:384:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Quaternion>&>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWMIDIMessage1() {
return sizeof(godot::VariantCaster<godot::MIDIMessage>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt8_Rb_treeIN5godot10StringNameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC1EOS9_(std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* __claw_this_, std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>* arg0) {
// /usr/include/c++/13/bits/stl_tree.h:687:4
new (__claw_this_) std::_Rb_tree<godot::StringName,godot::StringName,std::_Identity<godot::StringName>,std::less<godot::StringName>,std::allocator<godot::StringName>>::_Rb_tree_impl<std::less<godot::StringName>,true>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector2iEEC1ERKNS_7VariantE(godot::TypedArray<godot::Vector2i>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:91:1
new (__claw_this_) godot::TypedArray<godot::Vector2i>(*p_variant);
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node9get_childEib(godot::Node* __claw_this_, int32_t idx, bool include_internal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:150:8
return (godot::Node*) __claw_this_->get_child(idx, include_internal);
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Vector_baseIN5godot10StringNameESaIS1_EEC1EmRKS2_(std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>* __claw_this_, std::size_t __n, const std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>::allocator_type* __a) {
// /usr/include/c++/13/bits/stl_vector.h:333:7
new (__claw_this_) std::_Vector_base<godot::StringName,std::allocator<godot::StringName>>(__n, *__a);
}
}

namespace godot {
__CLAW_API godot::PackedFloat64Array* __claw__ZNK5godot18PackedFloat64ArrayplERKS0_(godot::PackedFloat64Array* __claw_result_, godot::PackedFloat64Array* __claw_this_, const godot::PackedFloat64Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:132:21
new (__claw_result_) godot::PackedFloat64Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt6vectorIN5godot10StringNameESaIS1_EEC1Ev(std::vector<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/stl_vector.h:531:7
new (__claw_this_) std::vector<godot::StringName>();
}
}

namespace godot {
__CLAW_API struct godot::Vector2i* __claw__ZNK5godot7VariantcvNS_8Vector2iEEv(struct godot::Vector2i* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:230:2
new (__claw_result_) godot::Vector2i(__claw_this_->operator Vector2i());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof_stdW__detailW_Rehash_base0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWMethodBindP1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWMethodBindP11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWintegral_constant0boolWtrue11() {
return alignof(std::__detail::_Rehash_base<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::integral_constant<bool,true>>);
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWSignal11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Signal>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__hash_base0unsignedWlongWunsignedWlong1() {
return sizeof(std::__hash_base<unsigned long,unsigned long>);
}
}

namespace std {
__CLAW_API std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>::size_type __claw__ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb0EEEE11bucket_sizeEm(std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>* __claw_this_, std::_Hashtable<int,std::pair<const int,int>,std::allocator<std::pair<const int,int>>,std::__detail::_Select1st,std::equal_to<int>,std::hash<int>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,false>>::size_type __bkt) {
// /usr/include/c++/13/bits/hashtable.h:679:7
return __claw_this_->bucket_size(__bkt);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8Vector3iEEC1ERKNS_7VariantE(godot::TypedArray<godot::Vector3i>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:95:1
new (__claw_this_) godot::TypedArray<godot::Vector3i>(*p_variant);
}
}

namespace std {
__CLAW_API void __claw__ZNSaIwEC1ERKS_(std::allocator<wchar_t>* __claw_this_, const std::allocator<wchar_t>* __a) {
// /usr/include/c++/13/bits/allocator.h:167:7
new (__claw_this_) std::allocator<wchar_t>(*__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray9remove_atEl(godot::PackedByteArray* __claw_this_, int64_t index) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:154:7
__claw_this_->remove_at(index);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayINS_5ArrayEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:395:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<godot::Array>>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorISt13_Rb_tree_nodeIN5godot10StringNameEEEC1ERKS4_(std::__new_allocator<std::_Rb_tree_node<godot::StringName>>* __claw_this_, const std::__new_allocator<std::_Rb_tree_node<godot::StringName>>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::_Rb_tree_node<godot::StringName>>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11Transform3DC1Effffffffffff(struct godot::Transform3D* __claw_this_, real_t xx, real_t xy, real_t xz, real_t yx, real_t yy, real_t yz, real_t zx, real_t zy, real_t zz, real_t ox, real_t oy, real_t oz) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/transform3d.hpp:131:2
new (__claw_this_) godot::Transform3D(xx, xy, xz, yx, yy, yz, zx, zy, zz, ox, oy, oz);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot8Vector2icvNS_6StringEEv(godot::String* __claw_result_, struct godot::Vector2i* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2i.hpp:125:2
new (__claw_result_) godot::String(__claw_this_->operator String());
return __claw_result_;
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName6lengthEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:265:10
return __claw_this_->length();
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot3RID6get_idEv(godot::RID* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/rid.hpp:78:10
return __claw_this_->get_id();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Hashtable_alloc0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse111W__get_value_type0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11() {
return sizeof(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>::__get_value_type<std::__detail::_Hash_node<std::pair<const int,int>,false>>);
}
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot8BitFieldIRKNS_18PropertyUsageFlagsEEcvlEv(godot::BitField<const godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:270:17
return __claw_this_->operator long();
}
}

namespace godot {
__CLAW_API struct godot::PackedInt32Array::ConstIterator* __claw__ZN5godot16PackedInt32Array13ConstIteratorppEv(struct godot::PackedInt32Array::ConstIterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:170:33
return (struct godot::PackedInt32Array::ConstIterator*) (&__claw_this_->operator++());
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEEC1Ev(std::__new_allocator<std::__detail::_Hash_node_base*>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node_base*>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__type_identity0stdWequal_to0godotWStringName11() {
return alignof(std::__type_identity<std::equal_to<godot::StringName>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW__allocator_traits_baseW__rebind0stdWallocator0stdW__detailW_Hash_node0stdWpair0constWintWint1Wfalse11WstdWpair0constWintWint11() {
return alignof(std::__allocator_traits_base::__rebind<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>,std::pair<const int,int>>);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned char>::__int_type __claw__ZNVSt13__atomic_baseIhE8exchangeEhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIKNS_4Node21ProcessThreadMessagesEE8has_flagES2_(godot::BitField<const godot::Node::ProcessThreadMessages>* __claw_this_, const enum godot::Node::ProcessThreadMessages p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIKNS_4Node21ProcessThreadMessagesEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:334:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::Node::ProcessThreadMessages>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Dictionary5mergeERKS0_b(godot::Dictionary* __claw_this_, const godot::Dictionary* dictionary, bool overwrite) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/dictionary.hpp:99:7
__claw_this_->merge(*dictionary, overwrite);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_6Rect2iEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Rect2i>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40ColorE23v_claw_dtor(godot::GetTypeInfo<const godot::Color&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:172:1
__claw_this_->~GetTypeInfo();
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::int_type __claw__ZN9__gnu_cxx11char_traitsIwE3eofEv() {
// /usr/include/c++/13/bits/char_traits.h:175:7
return __gnu_cxx::char_traits<wchar_t>::eof();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot17PackedStringArray11_native_ptrEv(godot::PackedStringArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:102:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant10has_methodERKNS_10StringNameE(godot::Variant* __claw_this_, const godot::StringName* method) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:317:7
return __claw_this_->has_method(*method);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7Variant12hash_compareERKS0_(godot::Variant* __claw_this_, const godot::Variant* variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:323:7
return __claw_this_->hash_compare(*variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0constWgodotWVector3R1() {
return sizeof(godot::PtrToArg<const godot::Vector3&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorIPNSt8__detail15_Hash_node_baseEEC1ERKS3_(std::__new_allocator<std::__detail::_Hash_node_base*>* __claw_this_, const std::__new_allocator<std::__detail::_Hash_node_base*>* arg0) {
// /usr/include/c++/13/bits/new_allocator.h:92:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node_base*>(*arg0);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_3RIDEEaSERKNS_5ArrayE(godot::TypedArray<godot::RID>* __claw_this_, const godot::Array* p_array) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:105:1
__claw_this_->operator=(*p_array);
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_AllocNodeE3EE23E24E40NE40stdE40SE40allocatorE3EE23E24E40NE40stdE40NE40__detailE40SE40_Hash_nodeE3EE23E24E40NE40stdE40SE40pairE3EE231IE23IE23Vb0_claw_ctor(std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:234:12
new (__claw_this_) std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<const int,int>,false>>>();
}
}
}

namespace std {
__CLAW_API void __claw__ZSt17atomic_flag_clearPVSt11atomic_flag(struct std::atomic_flag* __a) {
// /usr/include/c++/13/atomic:1259:3
std::atomic_flag_clear(__a);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11SafeNumericIjEC1Ej(godot::SafeNumeric<unsigned int>* __claw_this_, unsigned int p_value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/safe_refcount.hpp:135:27
new (__claw_this_) godot::SafeNumeric<unsigned int>(p_value);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNSt13__atomic_baseItEpLEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIbE5storeEbSt12memory_order(std::__atomic_base<bool>* __claw_this_, std::__atomic_base<bool>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:473:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Vector3iE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:381:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Vector3i>&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40VariantCasterE3EE23E24E40NE40godotE40SE40Node3DE40EE40RotationEditMode_claw_ctor(godot::VariantCaster<godot::Node3D::RotationEditMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:154:1
new (__claw_this_) godot::VariantCaster<godot::Node3D::RotationEditMode>();
}
}

namespace godot {
__CLAW_API godot::Node* __claw__ZNK5godot4Node9duplicateEi(godot::Node* __claw_this_, int32_t flags) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:218:8
return (godot::Node*) __claw_this_->duplicate(flags);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot6String10hex_decodeEv(godot::PackedByteArray* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:370:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->hex_decode());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWMouseButton1() {
return sizeof(godot::GetTypeInfo<godot::MouseButton>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotW_GlobalNil() {
return sizeof(godot::_GlobalNil);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot16PackedInt32Array11_native_ptrEv(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:100:36
return __claw_this_->_native_ptr();
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE7scan_isEtPKwS2_(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::ctype_base::mask __m, const std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:205:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->scan_is(__m, __lo, __hi);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_8BitFieldIRKNS_18PropertyUsageFlagsEEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:55:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4Node12InternalModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::InternalMode>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt13__atomic_baseIyEC2Ev() {
return sizeof(std::__atomic_base<unsigned long long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E26E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::BitField<godot::PropertyUsageFlags&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0unsignedWlongP1() {
return alignof(godot::PtrToArg<unsigned long*>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40ProjectionE40EE40Planes_claw_ctor(godot::PtrToArg<godot::Projection::Planes>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:44:1
new (__claw_this_) godot::PtrToArg<godot::Projection::Planes>();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot7ClassDB15can_instantiateERKNS_10StringNameE(const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:196:2
return godot::ClassDB::can_instantiate(*_class);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIsEC1Ev(godot::TypedArray<short>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:82:1
new (__claw_this_) godot::TypedArray<short>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_5TweenEED1Ev(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:216:2
__claw_this_->~Ref();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedStringArray_claw_dtor(godot::PtrToArg<const godot::PackedStringArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:161:1
__claw_this_->~PtrToArg();
}
}

namespace std {
__CLAW_API void __claw__ZNSaINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS2_7ClassDB9ClassInfoEELb0EEEED1Ev(std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:184:7
__claw_this_->~allocator();
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNVSt13__atomic_baseItEaNEt(std::__atomic_base<unsigned short>* __claw_this_, std::__atomic_base<unsigned short>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2AE2Ac_claw_dtor(godot::PtrToArg<unsigned char**>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:224:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector2Array8IteratorC1Ev(struct godot::PackedVector2Array::Iterator* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector2_array.hpp:163:3
new (__claw_this_) godot::PackedVector2Array::Iterator();
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt6atomicIbE21compare_exchange_weakERbbSt12memory_orderS2_(std::atomic<bool>* __claw_this_, bool* __i1, bool __i2, std::memory_order __m1, std::memory_order __m2) {
// /usr/include/c++/13/atomic:133:5
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m1, __m2);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261I_claw_dtor(godot::PtrToArg<const int&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:124:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot10MethodBind21get_argument_metadataEi(godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:120:49
return __claw_this_->get_argument_metadata();
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcEaSEc(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:378:7
return __claw_this_->operator=(__i);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40Rect2iE23v_claw_dtor(godot::GetTypeInfo<const godot::Rect2i&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:160:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt15error_conditionC1Ev(std::error_condition* __claw_this_) {
// /usr/include/c++/13/system_error:362:5
new (__claw_this_) std::error_condition();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40NodeE40EE40ProcessThreadGroupE23v_claw_dtor(godot::GetTypeInfo<godot::Node::ProcessThreadGroup&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:333:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIcE21compare_exchange_weakERccSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type* __i1, std::__atomic_base<char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot7CowDataIwE8is_emptyEv(godot::CowData<wchar_t>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:197:22
return __claw_this_->is_empty();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_ptr_keyed_setter(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:99:57

godot::internal::gdextension_interface_variant_get_ptr_keyed_setter = __claw_value_;
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Rect2i10intersectsERKS0_(struct godot::Rect2i* __claw_this_, const struct godot::Rect2i* p_rect) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2i.hpp:55:14
return __claw_this_->intersects(*p_rect);
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEpLEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:417:7
return __claw_this_->operator+=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0charP1() {
return sizeof(godot::PtrToArg<char*>);
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math3powEff(float p_x, float p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:388:14
return godot::Math::pow(p_x, p_y);
}
}
}

__CLAW_API unsigned long long __claw_sizeof___iseqsig_type0float1() {
return sizeof(__iseqsig_type<float>);
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName6countnERKNS_6StringEll(godot::StringName* __claw_this_, const godot::String* what, int64_t from, int64_t to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:272:10
return __claw_this_->countn(*what, from, to);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWMouseButton1() {
return alignof(godot::VariantCaster<godot::MouseButton>);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_11OrientationEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:40:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Orientation>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math25cubic_interpolate_in_timeEdddddddd(double p_from, double p_to, double p_pre, double p_post, double p_weight, double p_to_t, double p_pre_t, double p_post_t) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:463:15
return godot::Math::cubic_interpolate_in_time(p_from, p_to, p_pre, p_post, p_weight, p_to_t, p_pre_t, p_post_t);
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40CallableE23v_claw_ctor(godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:392:1
new (__claw_this_) godot::GetTypeInfo<const godot::TypedArray<godot::Callable>&>();
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math3powEdd(double p_x, double p_y) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:385:15
return godot::Math::pow(p_x, p_y);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray10encode_s32Ell(godot::PackedByteArray* __claw_this_, int64_t byte_offset, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:200:7
__claw_this_->encode_s32(byte_offset, value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWNode3DWRotationEditMode1() {
return alignof(godot::VariantCaster<godot::Node3D::RotationEditMode>);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<char>::char_type __claw__ZN9__gnu_cxx11char_traitsIcE12to_char_typeERKm(const __gnu_cxx::char_traits<char>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:162:7
return __gnu_cxx::char_traits<char>::to_char_type(*__c);
}
}

namespace godot {
__CLAW_API struct godot::Vector3i* __claw__ZN5godot8Vector3ipLERKS0_(struct godot::Vector3i* __claw_this_, const struct godot::Vector3i* p_v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector3i.hpp:93:27
return (struct godot::Vector3i*) (&__claw_this_->operator+=(*p_v));
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0godotWStringName1WgodotWStringName1() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<godot::StringName>,godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2A1b_claw_dtor(godot::PtrToArg<const bool*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:218:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D27set_global_rotation_degreesERKNS_7Vector3E(godot::Node3D* __claw_this_, const struct godot::Vector3* euler_degrees) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:98:7
__claw_this_->set_global_rotation_degrees(*euler_degrees);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10Projection12set_identityEv(struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:70:7
__claw_this_->set_identity();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array8IteratoreqERKS1_(struct godot::PackedFloat32Array::Iterator* __claw_this_, const struct godot::PackedFloat32Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:154:23
return __claw_this_->operator==(*b);
}
}

namespace std {
__CLAW_API bool __claw__ZNVSt13__atomic_baseIiE21compare_exchange_weakERiiSt12memory_order(std::__atomic_base<int>* __claw_this_, std::__atomic_base<int>::__int_type* __i1, std::__atomic_base<int>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:564:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<unsigned short>::__int_type __claw__ZNKSt13__atomic_baseItEcvtEv(std::__atomic_base<unsigned short>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:364:7
return __claw_this_->operator unsigned short();
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE5eraseEPKNS3_7ElementE(godot::List<godot::PropertyInfo>* __claw_this_, const godot::List<godot::PropertyInfo>::Element* p_I) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:429:7
return __claw_this_->erase(p_I);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWVector2iWAxisR1() {
return sizeof(godot::GetTypeInfo<const godot::Vector2i::Axis&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIcEC1EPKc(godot::CharStringT<char>* __claw_this_, const char* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:110:17
new (__claw_this_) godot::CharStringT<char>(p_cstr);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt13__atomic_baseIhE21compare_exchange_weakERhhSt12memory_order(std::__atomic_base<unsigned char>* __claw_this_, std::__atomic_base<unsigned char>::__int_type* __i1, std::__atomic_base<unsigned char>::__int_type __i2, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:556:7
return __claw_this_->compare_exchange_weak(*__i1, __i2, __m);
}
}

__CLAW_API void __claw_set___locale_struct___ctype_toupper(struct __locale_struct* __claw_this_, const int* __claw_value_) {
// /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:27:8

__claw_this_->__ctype_toupper = __claw_value_;
}

namespace godot {
__CLAW_API void __claw__ZN5godot6Node3D12set_identityEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:137:7
__claw_this_->set_identity();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWunsignedWcharPP1() {
return alignof(godot::PtrToArg<const unsigned char**>);
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::char_type __claw__ZN9__gnu_cxx11char_traitsIwE12to_char_typeERKm(const __gnu_cxx::char_traits<wchar_t>::int_type* __c) {
// /usr/include/c++/13/bits/char_traits.h:162:7
return __gnu_cxx::char_traits<wchar_t>::to_char_type(*__c);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEEneERKS2_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Ref<godot::InputEvent>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:87:22
return __claw_this_->operator!=(*p_r);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ArrayD1Ev(godot::Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:160:2
__claw_this_->~Array();
}
}

namespace godot {
__CLAW_API struct godot::Projection* __claw__ZNK5godot10Projection9flipped_yEv(struct godot::Projection* __claw_result_, struct godot::Projection* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/projection.hpp:97:13
new (__claw_result_) godot::Projection(__claw_this_->flipped_y());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16_err_print_errorEPKcS1_iRKNS_6StringES1_bb(const char* p_function, const char* p_file, int p_line, const godot::String* p_error, const char* p_message, bool p_editor_notify, bool p_is_warning) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/error_macros.hpp:45:6
godot::_err_print_error(p_function, p_file, p_line, *p_error, p_message, p_editor_notify, p_is_warning);
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_15InlineAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:44:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::InlineAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40DuplicateFlags_claw_ctor(godot::PtrToArg<godot::Node::DuplicateFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:335:1
new (__claw_this_) godot::PtrToArg<godot::Node::DuplicateFlags>();
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIDsE5storeEDsSt12memory_order(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String5rightEl(godot::String* __claw_result_, godot::String* __claw_this_, int64_t length) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:315:9
new (__claw_result_) godot::String(__claw_this_->right(length));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_4Node11ProcessModeEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:332:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Node::ProcessMode>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWBitField0godotWPropertyUsageFlags11() {
return alignof(godot::VariantCaster<godot::BitField<godot::PropertyUsageFlags>>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot11CharStringTIDiEltERKS1_(godot::CharStringT<char32>* __claw_this_, const godot::CharStringT<char32>* p_right) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:113:7
return __claw_this_->operator<(*p_right);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWPackedInt32Array1() {
return sizeof(godot::GetTypeInfo<godot::PackedInt32Array>);
}
}

namespace godot {
__CLAW_API const godot::StringName* __claw__ZN5godot6Node3D16get_class_staticEv() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:56:2
return (godot::StringName*) (&godot::Node3D::get_class_static());
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKN5godot10StringNameEPNS3_6ObjectEELb0EEEEEC1EOSB_(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* __claw_this_, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>* arg0) {
// /usr/include/c++/13/bits/hashtable_policy.h:1942:7
new (__claw_this_) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::Object*>,false>>>(std::move(*arg0));
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaISt4pairIKN5godot10StringNameEPNS0_6ObjectEEEC2Ev() {
return alignof(std::allocator<std::pair<const godot::StringName,godot::Object*>>);
}
}

namespace godot {
__CLAW_API godot::NodePath* __claw__ZNK5godot7VariantcvNS_8NodePathEEv(godot::NodePath* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:246:2
new (__claw_result_) godot::NodePath(__claw_this_->operator NodePath());
return __claw_result_;
}
}

namespace godot {
__CLAW_API godot::StringName* __claw_get_godotWMethodDefinition_name(struct godot::MethodDefinition* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/class_db.hpp:66:8

return (godot::StringName*)&__claw_this_->name;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40EE40EulerOrderE23v_claw_dtor(godot::GetTypeInfo<godot::EulerOrder>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:45:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4ListINS_12PropertyInfoENS_16DefaultAllocatorEE7ElementC1Ev(godot::List<godot::PropertyInfo>::Element* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/list.hpp:137:18
new (__claw_this_) godot::List<godot::PropertyInfo>::Element();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D10is_visibleEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:117:7
return __claw_this_->is_visible();
}
}

__CLAW_API void __claw_cE3AE40SE40__iseqsig_typeE3EE23d_claw_ctor(__iseqsig_type<double>* __claw_this_) {
// /usr/include/math.h:1375:19
new (__claw_this_) __iseqsig_type<double>();
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot5Array5rfindERKNS_7VariantEl(godot::Array* __claw_this_, const godot::Variant* what, int64_t from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:179:10
return __claw_this_->rfind(*what, from);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWVector3WAxis1() {
return sizeof(godot::PtrToArg<godot::Vector3::Axis>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWArrayR1() {
return alignof(godot::GetTypeInfo<const godot::Array&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot18PackedFloat32Array8IteratorneERKS1_(struct godot::PackedFloat32Array::Iterator* __claw_this_, const struct godot::PackedFloat32Array::Iterator* b) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:155:23
return __claw_this_->operator!=(*b);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantHasher() {
return alignof(godot::VariantHasher);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicIiED1Ev(std::atomic<int>* __claw_this_) {
// /usr/include/c++/13/atomic:828:7
__claw_this_->~atomic();
}
}

namespace __gnu_cxx {
__CLAW_API __gnu_cxx::char_traits<wchar_t>::char_type* __claw__ZN9__gnu_cxx11char_traitsIwE4copyEPwPKwm(__gnu_cxx::char_traits<wchar_t>::char_type* __s1, const __gnu_cxx::char_traits<wchar_t>::char_type* __s2, std::size_t __n) {
// /usr/include/c++/13/bits/char_traits.h:156:7
return (__gnu_cxx::char_traits<wchar_t>::char_type*) __gnu_cxx::char_traits<wchar_t>::copy(__s1, __s2, __n);
}
}

namespace godot {
__CLAW_API int __claw__ZNK5godot8Callable11_native_ptrEv(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:94:36
return __claw_this_->_native_ptr();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot7Vector26aspectEv(struct godot::Vector2* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/vector2.hpp:173:9
return __claw_this_->aspect();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6StringrmERKNS_6Rect2iE(godot::String* __claw_result_, godot::String* __claw_this_, const struct godot::Rect2i* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:407:9
new (__claw_result_) godot::String(__claw_this_->operator%(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Rect2i_claw_ctor(godot::PtrToArg<godot::Rect2i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:135:1
new (__claw_this_) godot::PtrToArg<godot::Rect2i>();
}
}

namespace std {
__CLAW_API void __claw__ZNSt13unordered_mapIN5godot10StringNameEPNS0_6ObjectESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S3_EEEC1ERKSC_RKSB_(std::unordered_map<godot::StringName,godot::Object*>* __claw_this_, const std::unordered_map<godot::StringName,godot::Object*>* __umap, const std::unordered_map<godot::StringName,godot::Object*>::allocator_type* __a) {
// /usr/include/c++/13/bits/unordered_map.h:207:7
new (__claw_this_) std::unordered_map<godot::StringName,godot::Object*>(*__umap, *__a);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0short1() {
return alignof(godot::PtrToArg<short>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW_Enable_default_constructor_tag() {
return sizeof(std::_Enable_default_constructor_tag);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot6Node3D33is_transform_notification_enabledEv(godot::Node3D* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node3d.hpp:124:7
return __claw_this_->is_transform_notification_enabled();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_8NodePathEEC1Ev(godot::TypedArray<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:104:1
new (__claw_this_) godot::TypedArray<godot::NodePath>();
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw__ZNSt8__detail15_Hash_node_baseC1Ev(struct std::__detail::_Hash_node_base* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:313:5
new (__claw_this_) std::__detail::_Hash_node_base();
}
}
}

namespace godot {
__CLAW_API godot::StringName* __claw__ZNK5godot10MethodBind18get_instance_classEv(godot::StringName* __claw_result_, godot::MethodBind* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_bind.hpp:100:28
new (__claw_result_) godot::StringName(__claw_this_->get_instance_class());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_sizeof_stdW__detailW_Insert0godotWStringNameWstdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo1WstdWallocator0stdWpair0constWgodotWStringNameWgodotWClassDBWClassInfo11WstdW__detailW_Select1stWstdWequal_to0godotWStringName1WstdWhash0godotWStringName1WstdW__detailW_Mod_range_hashingWstdW__detailW_Default_ranged_hashWstdW__detailW_Prime_rehash_policyWstdW__detailW_Hashtable_traits0falseWfalseWtrue1WstdWequal_to0godotWStringName1godotWStringName1() {
return sizeof(std::__detail::_Insert<godot::StringName,std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,std::allocator<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>,std::equal_to<godot::StringName>godot::StringName>);
}
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_11Transform3DEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:170:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::Transform3D&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWSignal1() {
return alignof(godot::GetTypeInfo<godot::Signal>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt6locale2idC1Ev(std::locale::id* __claw_this_) {
// /usr/include/c++/13/bits/locale_classes.h:524:5
new (__claw_this_) std::locale::id();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWTypedArray0godotWVector3i11() {
return sizeof(godot::GetTypeInfo<godot::TypedArray<godot::Vector3i>>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodeE40EE40InternalMode_claw_ctor(godot::PtrToArg<godot::Node::InternalMode>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:336:1
new (__claw_this_) godot::PtrToArg<godot::Node::InternalMode>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt13__atomic_baseItEC2Ev() {
return alignof(std::__atomic_base<unsigned short>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt11atomic_flag5clearESt12memory_order(struct std::atomic_flag* __claw_this_, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:285:5
__claw_this_->clear(__m);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot16PackedColorArray6appendERKNS_5ColorE(godot::PackedColorArray* __claw_this_, const struct godot::Color* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:112:7
return __claw_this_->append(*value);
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZN5godot5ArrayaSERKS0_(godot::Array* __claw_this_, const godot::Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:217:9
return (godot::Array*) (&__claw_this_->operator=(*other));
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40BitFieldE3EE23E24E40NE40godotE40EE40PropertyUsageFlags_claw_dtor(godot::BitField<godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:262:7
__claw_this_->~BitField();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt16initializer_listIN5godot7VariantEEC2EPKS1_m() {
return alignof(std::initializer_list<godot::Variant>);
}
}

namespace std {
__CLAW_API const std::__ctype_abstract_base<wchar_t>::char_type* __claw__ZNKSt21__ctype_abstract_baseIwE7toupperEPwPKw(std::__ctype_abstract_base<wchar_t>* __claw_this_, std::__ctype_abstract_base<wchar_t>::char_type* __lo, const std::__ctype_abstract_base<wchar_t>::char_type* __hi) {
// /usr/include/c++/13/bits/locale_facets.h:250:7
return (const std::__ctype_abstract_base<wchar_t>::char_type*) __claw_this_->toupper(__lo, __hi);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_5ArrayEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Array>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt15__new_allocatorINSt8__detail10_Hash_nodeISt4pairIKN5godot10StringNameENS3_7ClassDB9ClassInfoEELb0EEEEC1Ev(std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>* __claw_this_) {
// /usr/include/c++/13/bits/new_allocator.h:88:7
new (__claw_this_) std::__new_allocator<std::__detail::_Hash_node<std::pair<const godot::StringName,godot::ClassDB::ClassInfo>,false>>();
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot3RefINS_10InputEventEEeqERKS2_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Ref<godot::InputEvent>* p_r) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:84:22
return __claw_this_->operator==(*p_r);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSaIDiEC2Ev() {
return alignof(std::allocator<char32>);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZNK5godot8BitFieldIKNS_18PropertyUsageFlagsEEcvNS_7VariantEEv(godot::Variant* __claw_result_, godot::BitField<const godot::PropertyUsageFlags>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:271:17
new (__claw_result_) godot::Variant(__claw_this_->operator Variant());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRKNS_10TypedArrayIaEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:366:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<const godot::TypedArray<char>&>::get_class_info());
return __claw_result_;
}
}

namespace std {
__CLAW_API void __claw__ZNSaISt4pairIKiiEEC1Ev(std::allocator<std::pair<const int,int>>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<std::pair<const int,int>>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector2iE40EE40Axis_claw_dtor(godot::PtrToArg<godot::Vector2i::Axis>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:39:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot4AABB10merge_withERKS0_(struct godot::AABB* __claw_this_, const struct godot::AABB* p_aabb) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:74:7
__claw_this_->merge_with(*p_aabb);
}
}

__CLAW_API unsigned long long __claw_sizeof___iseqsig_type0double1() {
return sizeof(__iseqsig_type<double>);
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNVKSt13__atomic_baseIDsEcvDsEv(std::__atomic_base<char16>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:367:7
return __claw_this_->operator char16_t();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWPropertyUsageFlags1() {
return sizeof(godot::GetTypeInfo<const godot::PropertyUsageFlags>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNVSt13__atomic_baseIlE9fetch_subElSt12memory_order(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:648:7
return __claw_this_->fetch_sub(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIcE8exchangeEcSt12memory_order(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:528:7
return __claw_this_->exchange(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E261E24E40NE40godotE40SE40TypedArrayE3EE23E24E40NE40godotE40SE40Rect2iE23v_claw_dtor(godot::GetTypeInfo<const godot::TypedArray<godot::Rect2i>&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:379:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWTransform3D1() {
return sizeof(godot::PtrToArg<godot::Transform3D>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot11CharStringTIwEC1EPKw(godot::CharStringT<wchar_t>* __claw_this_, const wchar_t* p_cstr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:110:17
new (__claw_this_) godot::CharStringT<wchar_t>(p_cstr);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40TypedArrayE3EE23IE23v_claw_dtor(godot::GetTypeInfo<godot::TypedArray<int>>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:370:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt6localeC1ERKS_PKci(std::locale* __claw_this_, const std::locale* __base, const char* __s, std::locale::category __cat) {
// /usr/include/c++/13/bits/locale_classes.h:155:5
new (__claw_this_) std::locale(*__base, __s, __cat);
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40_Rb_tree_key_compareE3EE23E24E40NE40stdE40SE40lessE3EE23E24E40NE40godotE40SE40StringName_claw_dtor(std::__type_identity<std::_Rb_tree_key_compare<std::less<godot::StringName>>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
__claw_this_->~__type_identity();
}
}

namespace godot {
__CLAW_API real_t __claw__ZNK5godot5Basis5tdotzERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* v) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:126:24
return __claw_this_->tdotz(*v);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt4pairIKiiEC2ERKS1_() {
return sizeof(std::pair<const int,int>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWgodotWPackedByteArrayR1() {
return alignof(godot::PtrToArg<const godot::PackedByteArray&>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayIhEC1ERKNS_7VariantE(godot::TypedArray<unsigned char>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:79:1
new (__claw_this_) godot::TypedArray<unsigned char>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWTypedArray0godotWArray1R1() {
return sizeof(godot::GetTypeInfo<const godot::TypedArray<godot::Array>&>);
}
}

namespace std {
__CLAW_API void __claw__ZNSt13__atomic_baseIjED1Ev(std::__atomic_base<unsigned int>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:356:7
__claw_this_->~__atomic_base();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot18PackedVector3ArrayC1Ev(godot::PackedVector3Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_vector3_array.hpp:105:2
new (__claw_this_) godot::PackedVector3Array();
}
}

namespace std {
namespace __detail {
__CLAW_API unsigned long long __claw_alignof__ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIN5godot10StringNameEELb1EEC2Ev() {
return alignof(std::__detail::_Hashtable_ebo_helper<1,std::hash<godot::StringName>,std::hash<godot::StringName>>);
}
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_print_error_with_message() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:52:54

return godot::internal::gdextension_interface_print_error_with_message;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgIRKNS_7Vector2EE6encodeES1_Pv(struct godot::Vector2* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:132:1
godot::PtrToArg<const godot::Vector2&>::encode(*p_val, p_ptr);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt5mutexC2Ev() {
return alignof(std::mutex);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot6SignalC1EPNS_6ObjectERKNS_10StringNameE(godot::Signal* __claw_this_, godot::Object* object, const godot::StringName* signal) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/signal.hpp:88:2
new (__claw_this_) godot::Signal(object, *signal);
}
}

namespace std {
__CLAW_API bool __claw__ZNSt6atomicIbEaSEb(std::atomic<bool>* __claw_this_, bool __i) {
// /usr/include/c++/13/atomic:79:5
return __claw_this_->operator=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof_stdW_Enable_default_constructor_tag() {
return alignof(std::_Enable_default_constructor_tag);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot17PackedStringArray4fillERKNS_6StringE(godot::PackedStringArray* __claw_this_, const godot::String* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_string_array.hpp:116:7
__claw_this_->fill(*value);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_print_error_with_message(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:52:54

godot::internal::gdextension_interface_print_error_with_message = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40PackedByteArray_claw_ctor(godot::PtrToArg<const godot::PackedByteArray&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
new (__claw_this_) godot::PtrToArg<const godot::PackedByteArray&>();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoINS_10TypedArrayIfEEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:373:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::TypedArray<float>>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40Vector4_claw_ctor(godot::PtrToArg<const godot::Vector4&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:139:1
new (__claw_this_) godot::PtrToArg<const godot::Vector4&>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedVector3Array_claw_ctor(godot::PtrToArg<godot::PackedVector3Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:163:1
new (__claw_this_) godot::PtrToArg<godot::PackedVector3Array>();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5ColorC1ERKNS_6StringE(struct godot::Color* __claw_this_, const godot::String* p_code) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:253:2
new (__claw_this_) godot::Color(*p_code);
}
}

namespace std {
__CLAW_API std::__atomic_base<char>::__int_type __claw__ZNVSt13__atomic_baseIaEaNEa(std::__atomic_base<char>* __claw_this_, std::__atomic_base<char>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:437:7
return __claw_this_->operator&=(__i);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof_stdW__success_type0unsignedWlong1() {
return sizeof(std::__success_type<unsigned long>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40CharProxyE3EE23w_claw_dtor(godot::CharProxy<char32>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/char_string.hpp:45:7
__claw_this_->~CharProxy();
}
}

namespace std {
__CLAW_API std::__atomic_base<char16>::__int_type __claw__ZNSt13__atomic_baseIDsEmIEDs(std::__atomic_base<char16>* __claw_this_, std::__atomic_base<char16>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:425:7
return __claw_this_->operator-=(__i);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof__ZN5godot10TypedArrayIbEC2ERKNS_7VariantE() {
return alignof(godot::TypedArray<bool>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot7CowDataIDiEC1ERS1_(godot::CowData<char32>* __claw_this_, godot::CowData<char32>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/templates/cowdata.hpp:248:17
new (__claw_this_) godot::CowData<char32>(*p_from);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40TypedArrayE3EE23d_claw_dtor(godot::TypedArray<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:88:1
__claw_this_->~TypedArray();
}
}

namespace std {
__CLAW_API void __claw__ZSt26atomic_flag_clear_explicitPVSt11atomic_flagSt12memory_order(struct std::atomic_flag* __a, std::memory_order __m) {
// /usr/include/c++/13/atomic:1242:3
std::atomic_flag_clear_explicit(__a, __m);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40ObjectDB_claw_ctor(godot::ObjectDB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/object.hpp:111:7
new (__claw_this_) godot::ObjectDB();
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_5ErrorEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:53:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::Error&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_variant_get_named(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:69:48

godot::internal::gdextension_interface_variant_get_named = __claw_value_;
}
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWVariantCaster0godotWClockDirection1() {
return sizeof(godot::VariantCaster<godot::ClockDirection>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot16PackedColorArray8is_emptyEv(godot::PackedColorArray* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_color_array.hpp:109:7
return __claw_this_->is_empty();
}
}

namespace std {
__CLAW_API void __claw_cE3AE40NE40stdE40SE40__type_identityE3EE23E24E40NE40stdE40SE40atomicE3EE23l_claw_ctor(std::__type_identity<std::atomic<unsigned long>>* __claw_this_) {
// /usr/include/c++/13/type_traits:139:12
new (__claw_this_) std::__type_identity<std::atomic<unsigned long>>();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt23_Rb_tree_const_iteratorIN5godot10StringNameEEC2Ev() {
return alignof(std::_Rb_tree_const_iterator<godot::StringName>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40NodePath_claw_dtor(godot::PtrToArg<godot::NodePath>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:149:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWBitField0constWgodotWPropertyUsageFlagsR11() {
return sizeof(godot::GetTypeInfo<godot::BitField<const godot::PropertyUsageFlags&>>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_8Vector3iEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Vector3i>);
}
}

namespace std {
__CLAW_API std::__atomic_base<long>::__int_type __claw__ZNSt13__atomic_baseIlEoREl(std::__atomic_base<long>* __claw_this_, std::__atomic_base<long>::__int_type __i) {
// /usr/include/c++/13/bits/atomic_base.h:441:7
return __claw_this_->operator|=(__i);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot10StringName6to_intEv(godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:342:10
return __claw_this_->to_int();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_7VariantEE6encodeERKS1_Pv(const godot::Variant* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
godot::PtrToArg<godot::Variant>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_5ColorEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Color>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8CallableC1Ev(godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:95:2
new (__claw_this_) godot::Callable();
}
}

namespace godot {
__CLAW_API godot::PackedFloat32Array* __claw__ZNK5godot18PackedFloat32ArrayplERKS0_(godot::PackedFloat32Array* __claw_result_, godot::PackedFloat32Array* __claw_this_, const godot::PackedFloat32Array* other) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float32_array.hpp:132:21
new (__claw_result_) godot::PackedFloat32Array(__claw_this_->operator+(*other));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayINS_8Vector2iEEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<godot::Vector2i>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0godotWPackedVector3Array1() {
return alignof(godot::GetTypeInfo<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PackedInt64ArrayE40SE40_MethodBindings_claw_dtor(struct godot::PackedInt64Array::_MethodBindings* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int64_array.hpp:55:16
__claw_this_->~_MethodBindings();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_mem_alloc(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:48:41

godot::internal::gdextension_interface_mem_alloc = __claw_value_;
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot12PropertyInfoC1EiRKNS_10StringNameENS_12PropertyHintERKNS_6StringEjS3_(struct godot::PropertyInfo* __claw_this_, int p_type, const godot::StringName* p_name, enum godot::PropertyHint p_hint, const godot::String* p_hint_string, uint32_t p_usage, const godot::StringName* p_class_name) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:69:2
new (__claw_this_) godot::PropertyInfo(p_type, *p_name, p_hint, *p_hint_string, p_usage, *p_class_name);
}
}

namespace godot {
__CLAW_API godot::Tween* __claw__ZNK5godot3RefINS_5TweenEEptEv(godot::Ref<godot::Tween>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:95:20
return (godot::Tween*) __claw_this_->operator->();
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_packed_float32_array_operator_index_const(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:138:69

godot::internal::gdextension_interface_packed_float32_array_operator_index_const = __claw_value_;
}
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6String4utf8EPKcl(godot::String* __claw_result_, const char* from, int64_t len) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:378:16
new (__claw_result_) godot::String(godot::String::utf8(from, len));
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWVector2WAxis1() {
return alignof(godot::GetTypeInfo<const godot::Vector2::Axis>);
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZNK5godot6String8md5_textEv(godot::String* __claw_result_, godot::String* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:327:9
new (__claw_result_) godot::String(__claw_this_->md5_text());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedInt64Array_claw_dtor(godot::PtrToArg<godot::PackedInt64Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:158:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWProjectionWPlanes1() {
return sizeof(godot::GetTypeInfo<godot::Projection::Planes>);
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_sizeof___gnu_cxxW__alloc_traits0stdWallocator0stdW_List_node0godotWStringName11WstdW_List_node0godotWStringName11() {
return sizeof(__gnu_cxx::__alloc_traits<std::allocator<std::_List_node<godot::StringName>>,std::_List_node<godot::StringName>>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_array_ref() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:153:41

return godot::internal::gdextension_interface_array_ref;
}
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot16ClassDBSingleton25get_inheriters_from_classERKNS_10StringNameE(godot::PackedStringArray* __claw_result_, godot::ClassDBSingleton* __claw_this_, const godot::StringName* _class) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/class_db_singleton.hpp:58:20
new (__claw_result_) godot::PackedStringArray(__claw_this_->get_inheriters_from_class(*_class));
return __claw_result_;
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE9fetch_addEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:638:7
return __claw_this_->fetch_add(__i, __m);
}
}

namespace std {
__CLAW_API std::__atomic_base<short>::__int_type __claw__ZNVSt13__atomic_baseIsE9fetch_andEsSt12memory_order(std::__atomic_base<short>* __claw_this_, std::__atomic_base<short>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:658:7
return __claw_this_->fetch_and(__i, __m);
}
}

namespace godot {
__CLAW_API godot::Variant* __claw__ZN5godot8PtrToArgINS_7VariantEE7convertEPKv(godot::Variant* __claw_result_, const void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:165:1
new (__claw_result_) godot::Variant(godot::PtrToArg<godot::Variant>::convert(p_ptr));
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Rect29expand_toERKNS_7Vector2E(struct godot::Rect2* __claw_this_, const struct godot::Vector2* p_vector) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/rect2.hpp:259:14
__claw_this_->expand_to(*p_vector);
}
}

namespace std {
__CLAW_API bool __claw__ZNVKSt13__atomic_baseIxE12is_lock_freeEv(std::__atomic_base<long long>* __claw_this_) {
// /usr/include/c++/13/bits/atomic_base.h:465:7
return __claw_this_->is_lock_free();
}
}

namespace godot {
__CLAW_API struct godot::Color* __claw__ZN5godot5Color3hexEj(struct godot::Color* __claw_result_, uint32_t p_hex) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/color.hpp:189:15
new (__claw_result_) godot::Color(godot::Color::hex(p_hex));
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PackedFloat64Array::Iterator* __claw__ZN5godot18PackedFloat64Array3endEv(struct godot::PackedFloat64Array::Iterator* __claw_result_, godot::PackedFloat64Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_float64_array.hpp:193:26
new (__claw_result_) godot::PackedFloat64Array::Iterator(__claw_this_->end());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0constWwchar_tP1() {
return alignof(godot::PtrToArg<const wchar_t*>);
}
}

namespace godot {
__CLAW_API struct godot::Vector3* __claw__ZNK5godot4AABB17get_shortest_axisEv(struct godot::Vector3* __claw_result_, struct godot::AABB* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/aabb.hpp:91:10
new (__claw_result_) godot::Vector3(__claw_this_->get_shortest_axis());
return __claw_result_;
}
}

namespace godot {
__CLAW_API struct godot::PropertyInfo* __claw__ZN5godot11GetTypeInfoIRNS_17VerticalAlignmentEvE14get_class_infoEv(struct godot::PropertyInfo* __claw_result_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/global_constants_binds.hpp:43:1
new (__claw_result_) godot::PropertyInfo(godot::GetTypeInfo<godot::VerticalAlignment&>::get_class_info());
return __claw_result_;
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWPtrToArg0godotWNodeWInternalMode1() {
return alignof(godot::PtrToArg<godot::Node::InternalMode>);
}
}

namespace godot {
__CLAW_API godot::Ref<godot::MultiplayerAPI>* __claw__ZNK5godot4Node15get_multiplayerEv(godot::Ref<godot::MultiplayerAPI>* __claw_result_, godot::Node* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:231:22
new (__claw_result_) godot::Ref<godot::MultiplayerAPI>(__claw_this_->get_multiplayer());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>::size_type __claw__ZNKSt10_HashtableIN5godot10StringNameESt4pairIKS1_PNS0_10MethodBindEESaIS6_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb0ELb0ELb1EEEE4sizeEv(std::_Hashtable<godot::StringName,std::pair<const godot::StringName,godot::MethodBind*>,std::allocator<std::pair<const godot::StringName,godot::MethodBind*>>,std::__detail::_Select1st,std::equal_to<godot::StringName>,std::hash<godot::StringName>,std::__detail::_Mod_range_hashing,std::__detail::_Default_ranged_hash,std::__detail::_Prime_rehash_policy,std::__detail::_Hashtable_traits<false,false,true>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable.h:647:7
return __claw_this_->size();
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt6atomicIcEC2Ev() {
return alignof(std::atomic<char>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt12ctype_bynameIcEC2EPKcm() {
return sizeof(std::ctype_byname<char>);
}
}

namespace godot {
namespace internal {
__CLAW_API int __claw_get_godotWinternalWgdextension_interface_variant_duplicate() {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:79:49

return godot::internal::gdextension_interface_variant_duplicate;
}
}
}

namespace std {
__CLAW_API void __claw__ZNSt6atomicItED1Ev(std::atomic<unsigned short>* __claw_this_) {
// /usr/include/c++/13/atomic:805:7
__claw_this_->~atomic();
}
}

namespace std {
__CLAW_API void __claw__ZNSt16initializer_listIN5godot10StringNameEEC1Ev(std::initializer_list<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/initializer_list:64:17
new (__claw_this_) std::initializer_list<godot::StringName>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWGetTypeInfo0constWgodotWMIDIMessageR1() {
return alignof(godot::GetTypeInfo<const godot::MIDIMessage&>);
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot8BitFieldIKNS_18PropertyUsageFlagsEE8has_flagES1_(godot::BitField<const godot::PropertyUsageFlags>* __claw_this_, const enum godot::PropertyUsageFlags p_flag) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:267:22
return __claw_this_->has_flag(p_flag);
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw__ZN5godot8internal23EngineClassRegistrationINS_10RefCountedEEC1Ev(godot::internal::EngineClassRegistration<godot::RefCounted>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/wrapped.hpp:124:2
new (__claw_this_) godot::internal::EngineClassRegistration<godot::RefCounted>();
}
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E2Av_claw_ctor(godot::PtrToArg<void*>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:217:1
new (__claw_this_) godot::PtrToArg<void*>();
}
}

namespace std {
__CLAW_API void __claw__ZNVSt13__atomic_baseIjE5storeEjSt12memory_order(std::__atomic_base<unsigned int>* __claw_this_, std::__atomic_base<unsigned int>::__int_type __i, std::memory_order __m) {
// /usr/include/c++/13/bits/atomic_base.h:485:7
__claw_this_->store(__i, __m);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot16PackedInt32ArrayD1Ev(godot::PackedInt32Array* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_int32_array.hpp:105:2
__claw_this_->~PackedInt32Array();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40PackedColorArray_claw_ctor(godot::PtrToArg<godot::PackedColorArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:164:1
new (__claw_this_) godot::PtrToArg<godot::PackedColorArray>();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23d_claw_ctor(godot::PtrToArg<double>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:129:1
new (__claw_this_) godot::PtrToArg<double>();
}
}

namespace godot {
__CLAW_API godot::String* __claw__ZN5godot6Object9to_stringEv(godot::String* __claw_result_, godot::Object* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/object.hpp:77:9
new (__claw_result_) godot::String(__claw_this_->to_string());
return __claw_result_;
}
}

namespace std {
__CLAW_API std::basic_string_view<wchar_t>::size_type __claw__ZNKSt17basic_string_viewIwSt11char_traitsIwEE8max_sizeEv(std::basic_string_view<wchar_t>* __claw_this_) {
// /usr/include/c++/13/string_view:239:7
return __claw_this_->max_size();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedInt32ArrayE23v_claw_dtor(godot::GetTypeInfo<godot::PackedInt32Array>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:181:1
__claw_this_->~GetTypeInfo();
}
}

namespace std {
__CLAW_API void __claw__ZNSt12_Node_handleIN5godot10StringNameES1_SaISt13_Rb_tree_nodeIS1_EEEC1EOS5_(std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>* __claw_this_, std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>* arg0) {
// /usr/include/c++/13/bits/node_handle.h:348:7
new (__claw_this_) std::_Node_handle<godot::StringName,godot::StringName,std::allocator<std::_Rb_tree_node<godot::StringName>>>(std::move(*arg0));
}
}

namespace godot {
__CLAW_API godot::PackedStringArray* __claw__ZNK5godot7VariantcvNS_17PackedStringArrayEEv(godot::PackedStringArray* __claw_result_, godot::Variant* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/variant.hpp:259:2
new (__claw_result_) godot::PackedStringArray(__claw_this_->operator PackedStringArray());
return __claw_result_;
}
}

namespace godot {
namespace internal {
__CLAW_API void __claw_set_godotWinternalWgdextension_interface_classdb_register_extension_class_property(int __claw_value_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/godot.hpp:182:70

godot::internal::gdextension_interface_classdb_register_extension_class_property = __claw_value_;
}
}
}

namespace godot {
namespace Math {
__CLAW_API float __claw__ZN5godot4Math4sincEf(float p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:322:14
return godot::Math::sinc(p_x);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt21__ctype_abstract_baseIwEC2Em() {
return alignof(std::__ctype_abstract_base<wchar_t>);
}
}

namespace godot {
namespace Math {
__CLAW_API double __claw__ZN5godot4Math4sincEd(double p_x) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/math.hpp:325:15
return godot::Math::sinc(p_x);
}
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot3RefINS_10InputEventEEaSERKS2_(godot::Ref<godot::InputEvent>* __claw_this_, const godot::Ref<godot::InputEvent>* p_from) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:107:7
__claw_this_->operator=(*p_from);
}
}

namespace std {
__CLAW_API unsigned long long __claw_alignof__ZNSt15__new_allocatorIN5godot7VariantEEC2Ev() {
return alignof(std::__new_allocator<godot::Variant>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E24E40NE40godotE40SE40Vector3i_claw_dtor(godot::PtrToArg<godot::Vector3i>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:137:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E26E24E40NE40godotE40SE40Vector2E40EE40AxisE23v_claw_dtor(godot::GetTypeInfo<godot::Vector2::Axis&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/builtin_binds.hpp:38:1
__claw_this_->~GetTypeInfo();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWVariantCaster0godotWBitField0godotWMethodFlags11() {
return alignof(godot::VariantCaster<godot::BitField<godot::MethodFlags>>);
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt5ctypeIcEC2EPKtbm() {
return sizeof(std::ctype<char>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40PtrToArgE3EE23E261E24E40NE40godotE40SE40RID_claw_dtor(godot::PtrToArg<const godot::RID&>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:150:1
__claw_this_->~PtrToArg();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Basis11scale_localERKNS_7Vector3E(struct godot::Basis* __claw_this_, const struct godot::Vector3* p_scale) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/basis.hpp:102:7
__claw_this_->scale_local(*p_scale);
}
}

namespace godot {
__CLAW_API enum godot::Variant::Type __claw_get_godotWPropertyInfo_type(struct godot::PropertyInfo* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/property_info.hpp:46:8

return __claw_this_->type;
}
}

namespace __gnu_cxx {
__CLAW_API unsigned long long __claw_alignof___gnu_cxxW__alloc_traits0stdWallocator0wchar_t1Wwchar_t1() {
return alignof(__gnu_cxx::__alloc_traits<std::allocator<wchar_t>,wchar_t>);
}
}

namespace std {
namespace chrono {
__CLAW_API unsigned long long __claw_alignof__ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2Ev() {
return alignof(std::chrono::duration<long,std::ratio<1,1000000000>>);
}
}
}

namespace std {
__CLAW_API unsigned long long __claw_sizeof__ZNSt6vectorIN5godot12PropertyInfoESaIS1_EEC2Ev() {
return sizeof(std::vector<godot::PropertyInfo>);
}
}

namespace godot {
__CLAW_API godot::PackedByteArray* __claw__ZNK5godot10StringName14to_utf8_bufferEv(godot::PackedByteArray* __claw_result_, godot::StringName* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string_name.hpp:353:18
new (__claw_result_) godot::PackedByteArray(__claw_this_->to_utf8_buffer());
return __claw_result_;
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40STE3E1E23TE40RefE40FE40instantiateE23(godot::Ref* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/classes/ref.hpp:210:7
__claw_this_->instantiate();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot15PackedByteArray3setEll(godot::PackedByteArray* __claw_this_, int64_t index, int64_t value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/packed_byte_array.hpp:150:7
__claw_this_->set(index, value);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0godotWRID1() {
return sizeof(godot::GetTypeInfo<godot::RID>);
}
}

namespace godot {
__CLAW_API void __claw_cE3AE40NE40godotE40SE40GetTypeInfoE3EE23E24E40NE40godotE40SE40PackedByteArrayE23v_claw_ctor(godot::GetTypeInfo<godot::PackedByteArray>* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/type_info.hpp:180:1
new (__claw_this_) godot::GetTypeInfo<godot::PackedByteArray>();
}
}

namespace std {
__CLAW_API void __claw__ZNSaIN5godot10StringNameEEC1Ev(std::allocator<godot::StringName>* __claw_this_) {
// /usr/include/c++/13/bits/allocator.h:163:7
new (__claw_this_) std::allocator<godot::StringName>();
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWGetTypeInfo0constWgodotWNodeWProcessMode1() {
return sizeof(godot::GetTypeInfo<const godot::Node::ProcessMode>);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot10TypedArrayINS_18PackedFloat32ArrayEEC1ERKNS_7VariantE(godot::TypedArray<godot::PackedFloat32Array>* __claw_this_, const godot::Variant* p_variant) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/variant/typed_array.hpp:113:1
new (__claw_this_) godot::TypedArray<godot::PackedFloat32Array>(*p_variant);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof__ZN5godot10TypedArrayIfEC2ERKNS_7VariantE() {
return sizeof(godot::TypedArray<float>);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_sizeof_godotWPtrToArg0godotWPackedVector3Array1() {
return sizeof(godot::PtrToArg<godot::PackedVector3Array>);
}
}

namespace godot {
__CLAW_API bool __claw__ZN5godot10RefCounted9referenceEv(godot::RefCounted* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/ref_counted.hpp:51:7
return __claw_this_->reference();
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot8PtrToArgINS_15PackedByteArrayEE6encodeES1_Pv(godot::PackedByteArray* p_val, void* p_ptr) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/include/godot_cpp/core/method_ptrcall.hpp:156:1
godot::PtrToArg<godot::PackedByteArray>::encode(*p_val, p_ptr);
}
}

namespace godot {
__CLAW_API void __claw__ZN5godot5Array10push_frontERKNS_7VariantE(godot::Array* __claw_this_, const godot::Variant* value) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/array.hpp:167:7
__claw_this_->push_front(*value);
}
}

namespace godot {
__CLAW_API godot::Array* __claw__ZNK5godot8Callable19get_bound_argumentsEv(godot::Array* __claw_result_, godot::Callable* __claw_this_) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/callable.hpp:111:8
new (__claw_result_) godot::Array(__claw_this_->get_bound_arguments());
return __claw_result_;
}
}

namespace std {
namespace __detail {
__CLAW_API void __claw_cE3AE40NE40stdE40NE40__detailE40SE40_Select1stE40SE40__1st_typeE3EE23E24E40NE40stdE40SE40pairE3EE231E24E40NE40godotE40SE40StringNameE23E2AE24E40NE40godotE40SE40MethodBind_claw_dtor(std::__detail::_Select1st::__1st_type<std::pair<const godot::StringName,godot::MethodBind*>>* __claw_this_) {
// /usr/include/c++/13/bits/hashtable_policy.h:99:14
__claw_this_->~__1st_type();
}
}
}

namespace godot {
__CLAW_API bool __claw__ZNK5godot4Node8has_nodeERKNS_8NodePathE(godot::Node* __claw_this_, const godot::NodePath* path) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/classes/node.hpp:151:7
return __claw_this_->has_node(*path);
}
}

namespace godot {
__CLAW_API unsigned long long __claw_alignof_godotWAABB() {
return alignof(godot::AABB);
}
}

namespace godot {
__CLAW_API int64_t __claw__ZNK5godot6String6countnERKS0_ll(godot::String* __claw_this_, const godot::String* what, int64_t from, int64_t to) {
// /home/jason/common-lisp/clawdot/src/godot-cpp/gen/include/godot_cpp/variant/string.hpp:285:10
return __claw_this_->countn(*what, from, to);
}
}

#if defined(__cplusplus)
}
#endif
